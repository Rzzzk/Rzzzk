
micro2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000586c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000586c  000058e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00003dbc  00000000  00000000  000058e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000ce3  00000000  00000000  000096a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  0000a387  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  0000a4c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  0000a637  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000c280  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000d16b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000df18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000e078  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000e305  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000ead3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e6       	ldi	r30, 0x6C	; 108
      68:	f8 e5       	ldi	r31, 0x58	; 88
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 9f 0c 	call	0x193e	; 0x193e <main>
      7a:	0c 94 34 2c 	jmp	0x5868	; 0x5868 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 b8 2b 	jmp	0x5770	; 0x5770 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 d4 2b 	jmp	0x57a8	; 0x57a8 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 c4 2b 	jmp	0x5788	; 0x5788 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 e0 2b 	jmp	0x57c0	; 0x57c0 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 c4 2b 	jmp	0x5788	; 0x5788 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 e0 2b 	jmp	0x57c0	; 0x57c0 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 b8 2b 	jmp	0x5770	; 0x5770 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__stack+0x2f>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__stack+0x45>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__stack+0x1d>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__stack+0x2f>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__stack+0x25>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__stack+0x2b>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__stack+0x45>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__stack+0x1b7>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__stack+0x41>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__stack+0x1b7>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__stack+0x57>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__stack+0x1b7>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__stack+0xc3>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__stack+0xb7>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__stack+0xdf>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__stack+0xf9>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__stack+0x7f>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__stack+0x13d>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__stack+0x131>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__stack+0x10f>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__stack+0x15b>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__stack+0x143>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__stack+0x19d>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__stack+0x19d>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__stack+0x19d>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__stack+0x1a7>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 d4 2b 	jmp	0x57a8	; 0x57a8 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 c4 2b 	jmp	0x5788	; 0x5788 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 e0 2b 	jmp	0x57c0	; 0x57c0 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 c4 2b 	jmp	0x5788	; 0x5788 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 e0 2b 	jmp	0x57c0	; 0x57c0 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 c4 2b 	jmp	0x5788	; 0x5788 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 e0 2b 	jmp	0x57c0	; 0x57c0 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 c8 2b 	jmp	0x5790	; 0x5790 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 e4 2b 	jmp	0x57c8	; 0x57c8 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__pack_f+0x178>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__pack_f+0x172>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__pack_f+0x17c>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__pack_f+0x114>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__pack_f+0x76>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__pack_f+0xca>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__pack_f+0x86>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__pack_f+0x7e>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__pack_f+0x9c>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__pack_f+0x94>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__pack_f+0xbe>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__pack_f+0xee>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__pack_f+0xf6>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__pack_f+0xf6>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__pack_f+0x10e>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__pack_f+0x162>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__pack_f+0x172>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__pack_f+0x144>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__pack_f+0x154>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__pack_f+0x14c>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__pack_f+0x162>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__pack_f+0x164>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__pack_f+0x17c>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <EEPROM_init>:
 *******************************************************************************/
#include "i2c.h"
#include "external_eeprom.h"

void EEPROM_init(void)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
	/* just initialize the I2C(TWI) module inside the MC */
	TWI_init();
     b3e:	0e 94 45 06 	call	0xc8a	; 0xc8a <TWI_init>
}
     b42:	cf 91       	pop	r28
     b44:	df 91       	pop	r29
     b46:	08 95       	ret

00000b48 <EEPROM_writeByte>:

uint8 EEPROM_writeByte(uint16 u16addr, uint8 u8data)
{
     b48:	df 93       	push	r29
     b4a:	cf 93       	push	r28
     b4c:	00 d0       	rcall	.+0      	; 0xb4e <EEPROM_writeByte+0x6>
     b4e:	00 d0       	rcall	.+0      	; 0xb50 <EEPROM_writeByte+0x8>
     b50:	cd b7       	in	r28, 0x3d	; 61
     b52:	de b7       	in	r29, 0x3e	; 62
     b54:	9a 83       	std	Y+2, r25	; 0x02
     b56:	89 83       	std	Y+1, r24	; 0x01
     b58:	6b 83       	std	Y+3, r22	; 0x03
	/* Send the Start Bit */
    TWI_start();
     b5a:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <TWI_start>
    if (TWI_getStatus() != TW_START)
     b5e:	0e 94 b3 06 	call	0xd66	; 0xd66 <TWI_getStatus>
     b62:	88 30       	cpi	r24, 0x08	; 8
     b64:	11 f0       	breq	.+4      	; 0xb6a <EEPROM_writeByte+0x22>
        return ERROR;
     b66:	1c 82       	std	Y+4, r1	; 0x04
     b68:	28 c0       	rjmp	.+80     	; 0xbba <EEPROM_writeByte+0x72>
		
    /* Send the device address, we need to get A8 A9 A10 address bits from the
     * memory location address and R/W=0 (write) */
    TWI_write((uint8)(0xA0 | ((u16addr & 0x0700)>>7)));
     b6a:	89 81       	ldd	r24, Y+1	; 0x01
     b6c:	9a 81       	ldd	r25, Y+2	; 0x02
     b6e:	80 70       	andi	r24, 0x00	; 0
     b70:	97 70       	andi	r25, 0x07	; 7
     b72:	88 0f       	add	r24, r24
     b74:	89 2f       	mov	r24, r25
     b76:	88 1f       	adc	r24, r24
     b78:	99 0b       	sbc	r25, r25
     b7a:	91 95       	neg	r25
     b7c:	80 6a       	ori	r24, 0xA0	; 160
     b7e:	0e 94 76 06 	call	0xcec	; 0xcec <TWI_write>
    if (TWI_getStatus() != TW_MT_SLA_W_ACK)
     b82:	0e 94 b3 06 	call	0xd66	; 0xd66 <TWI_getStatus>
     b86:	88 31       	cpi	r24, 0x18	; 24
     b88:	11 f0       	breq	.+4      	; 0xb8e <EEPROM_writeByte+0x46>
        return ERROR; 
     b8a:	1c 82       	std	Y+4, r1	; 0x04
     b8c:	16 c0       	rjmp	.+44     	; 0xbba <EEPROM_writeByte+0x72>
		 
    /* Send the required memory location address */
    TWI_write((uint8)(u16addr));
     b8e:	89 81       	ldd	r24, Y+1	; 0x01
     b90:	0e 94 76 06 	call	0xcec	; 0xcec <TWI_write>
    if (TWI_getStatus() != TW_MT_DATA_ACK)
     b94:	0e 94 b3 06 	call	0xd66	; 0xd66 <TWI_getStatus>
     b98:	88 32       	cpi	r24, 0x28	; 40
     b9a:	11 f0       	breq	.+4      	; 0xba0 <EEPROM_writeByte+0x58>
        return ERROR;
     b9c:	1c 82       	std	Y+4, r1	; 0x04
     b9e:	0d c0       	rjmp	.+26     	; 0xbba <EEPROM_writeByte+0x72>
		
    /* write byte to eeprom */
    TWI_write(u8data);
     ba0:	8b 81       	ldd	r24, Y+3	; 0x03
     ba2:	0e 94 76 06 	call	0xcec	; 0xcec <TWI_write>
    if (TWI_getStatus() != TW_MT_DATA_ACK)
     ba6:	0e 94 b3 06 	call	0xd66	; 0xd66 <TWI_getStatus>
     baa:	88 32       	cpi	r24, 0x28	; 40
     bac:	11 f0       	breq	.+4      	; 0xbb2 <EEPROM_writeByte+0x6a>
        return ERROR;
     bae:	1c 82       	std	Y+4, r1	; 0x04
     bb0:	04 c0       	rjmp	.+8      	; 0xbba <EEPROM_writeByte+0x72>

    /* Send the Stop Bit */
    TWI_stop();
     bb2:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <TWI_stop>
	
    return SUCCESS;
     bb6:	81 e0       	ldi	r24, 0x01	; 1
     bb8:	8c 83       	std	Y+4, r24	; 0x04
     bba:	8c 81       	ldd	r24, Y+4	; 0x04
}
     bbc:	0f 90       	pop	r0
     bbe:	0f 90       	pop	r0
     bc0:	0f 90       	pop	r0
     bc2:	0f 90       	pop	r0
     bc4:	cf 91       	pop	r28
     bc6:	df 91       	pop	r29
     bc8:	08 95       	ret

00000bca <EEPROM_readByte>:

uint8 EEPROM_readByte(uint16 u16addr, uint8 *u8data)
{
     bca:	df 93       	push	r29
     bcc:	cf 93       	push	r28
     bce:	00 d0       	rcall	.+0      	; 0xbd0 <EEPROM_readByte+0x6>
     bd0:	00 d0       	rcall	.+0      	; 0xbd2 <EEPROM_readByte+0x8>
     bd2:	0f 92       	push	r0
     bd4:	cd b7       	in	r28, 0x3d	; 61
     bd6:	de b7       	in	r29, 0x3e	; 62
     bd8:	9a 83       	std	Y+2, r25	; 0x02
     bda:	89 83       	std	Y+1, r24	; 0x01
     bdc:	7c 83       	std	Y+4, r23	; 0x04
     bde:	6b 83       	std	Y+3, r22	; 0x03
	/* Send the Start Bit */
    TWI_start();
     be0:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <TWI_start>
    if (TWI_getStatus() != TW_START)
     be4:	0e 94 b3 06 	call	0xd66	; 0xd66 <TWI_getStatus>
     be8:	88 30       	cpi	r24, 0x08	; 8
     bea:	11 f0       	breq	.+4      	; 0xbf0 <EEPROM_readByte+0x26>
        return ERROR;
     bec:	1d 82       	std	Y+5, r1	; 0x05
     bee:	44 c0       	rjmp	.+136    	; 0xc78 <EEPROM_readByte+0xae>
		
    /* Send the device address, we need to get A8 A9 A10 address bits from the
     * memory location address and R/W=0 (write) */
    TWI_write((uint8)((0xA0) | ((u16addr & 0x0700)>>7)));
     bf0:	89 81       	ldd	r24, Y+1	; 0x01
     bf2:	9a 81       	ldd	r25, Y+2	; 0x02
     bf4:	80 70       	andi	r24, 0x00	; 0
     bf6:	97 70       	andi	r25, 0x07	; 7
     bf8:	88 0f       	add	r24, r24
     bfa:	89 2f       	mov	r24, r25
     bfc:	88 1f       	adc	r24, r24
     bfe:	99 0b       	sbc	r25, r25
     c00:	91 95       	neg	r25
     c02:	80 6a       	ori	r24, 0xA0	; 160
     c04:	0e 94 76 06 	call	0xcec	; 0xcec <TWI_write>
    if (TWI_getStatus() != TW_MT_SLA_W_ACK)
     c08:	0e 94 b3 06 	call	0xd66	; 0xd66 <TWI_getStatus>
     c0c:	88 31       	cpi	r24, 0x18	; 24
     c0e:	11 f0       	breq	.+4      	; 0xc14 <EEPROM_readByte+0x4a>
        return ERROR;
     c10:	1d 82       	std	Y+5, r1	; 0x05
     c12:	32 c0       	rjmp	.+100    	; 0xc78 <EEPROM_readByte+0xae>
		
    /* Send the required memory location address */
    TWI_write((uint8)(u16addr));
     c14:	89 81       	ldd	r24, Y+1	; 0x01
     c16:	0e 94 76 06 	call	0xcec	; 0xcec <TWI_write>
    if (TWI_getStatus() != TW_MT_DATA_ACK)
     c1a:	0e 94 b3 06 	call	0xd66	; 0xd66 <TWI_getStatus>
     c1e:	88 32       	cpi	r24, 0x28	; 40
     c20:	11 f0       	breq	.+4      	; 0xc26 <EEPROM_readByte+0x5c>
        return ERROR;
     c22:	1d 82       	std	Y+5, r1	; 0x05
     c24:	29 c0       	rjmp	.+82     	; 0xc78 <EEPROM_readByte+0xae>
		
    /* Send the Repeated Start Bit */
    TWI_start();
     c26:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <TWI_start>
    if (TWI_getStatus() != TW_REP_START)
     c2a:	0e 94 b3 06 	call	0xd66	; 0xd66 <TWI_getStatus>
     c2e:	80 31       	cpi	r24, 0x10	; 16
     c30:	11 f0       	breq	.+4      	; 0xc36 <EEPROM_readByte+0x6c>
        return ERROR;
     c32:	1d 82       	std	Y+5, r1	; 0x05
     c34:	21 c0       	rjmp	.+66     	; 0xc78 <EEPROM_readByte+0xae>
		
    /* Send the device address, we need to get A8 A9 A10 address bits from the
     * memory location address and R/W=1 (Read) */
    TWI_write((uint8)((0xA0) | ((u16addr & 0x0700)>>7) | 1));
     c36:	89 81       	ldd	r24, Y+1	; 0x01
     c38:	9a 81       	ldd	r25, Y+2	; 0x02
     c3a:	80 70       	andi	r24, 0x00	; 0
     c3c:	97 70       	andi	r25, 0x07	; 7
     c3e:	88 0f       	add	r24, r24
     c40:	89 2f       	mov	r24, r25
     c42:	88 1f       	adc	r24, r24
     c44:	99 0b       	sbc	r25, r25
     c46:	91 95       	neg	r25
     c48:	81 6a       	ori	r24, 0xA1	; 161
     c4a:	0e 94 76 06 	call	0xcec	; 0xcec <TWI_write>
    if (TWI_getStatus() != TW_MT_SLA_R_ACK)
     c4e:	0e 94 b3 06 	call	0xd66	; 0xd66 <TWI_getStatus>
     c52:	80 34       	cpi	r24, 0x40	; 64
     c54:	11 f0       	breq	.+4      	; 0xc5a <EEPROM_readByte+0x90>
        return ERROR;
     c56:	1d 82       	std	Y+5, r1	; 0x05
     c58:	0f c0       	rjmp	.+30     	; 0xc78 <EEPROM_readByte+0xae>

    /* Read Byte from Memory without send ACK */
    *u8data = TWI_readWithNACK();
     c5a:	0e 94 a0 06 	call	0xd40	; 0xd40 <TWI_readWithNACK>
     c5e:	eb 81       	ldd	r30, Y+3	; 0x03
     c60:	fc 81       	ldd	r31, Y+4	; 0x04
     c62:	80 83       	st	Z, r24
    if (TWI_getStatus() != TW_MR_DATA_NACK)
     c64:	0e 94 b3 06 	call	0xd66	; 0xd66 <TWI_getStatus>
     c68:	88 35       	cpi	r24, 0x58	; 88
     c6a:	11 f0       	breq	.+4      	; 0xc70 <EEPROM_readByte+0xa6>
        return ERROR;
     c6c:	1d 82       	std	Y+5, r1	; 0x05
     c6e:	04 c0       	rjmp	.+8      	; 0xc78 <EEPROM_readByte+0xae>

    /* Send the Stop Bit */
    TWI_stop();
     c70:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <TWI_stop>
    return SUCCESS;
     c74:	81 e0       	ldi	r24, 0x01	; 1
     c76:	8d 83       	std	Y+5, r24	; 0x05
     c78:	8d 81       	ldd	r24, Y+5	; 0x05
}
     c7a:	0f 90       	pop	r0
     c7c:	0f 90       	pop	r0
     c7e:	0f 90       	pop	r0
     c80:	0f 90       	pop	r0
     c82:	0f 90       	pop	r0
     c84:	cf 91       	pop	r28
     c86:	df 91       	pop	r29
     c88:	08 95       	ret

00000c8a <TWI_init>:
 *******************************************************************************/
 
#include "i2c.h"

void TWI_init(void)
{
     c8a:	df 93       	push	r29
     c8c:	cf 93       	push	r28
     c8e:	cd b7       	in	r28, 0x3d	; 61
     c90:	de b7       	in	r29, 0x3e	; 62
    /* Bit Rate: 400.000 kbps using zero pre-scaler TWPS=00 and F_CPU=8Mhz */
    TWBR = 0x02;
     c92:	e0 e2       	ldi	r30, 0x20	; 32
     c94:	f0 e0       	ldi	r31, 0x00	; 0
     c96:	82 e0       	ldi	r24, 0x02	; 2
     c98:	80 83       	st	Z, r24
	TWSR = 0x00;
     c9a:	e1 e2       	ldi	r30, 0x21	; 33
     c9c:	f0 e0       	ldi	r31, 0x00	; 0
     c9e:	10 82       	st	Z, r1
	
    /* Two Wire Bus address my address if any master device want to call me: 0x1 (used in case this MC is a slave device)
       General Call Recognition: Off */
    TWAR = 0b00000010; // my address = 0x01 :) 
     ca0:	e2 e2       	ldi	r30, 0x22	; 34
     ca2:	f0 e0       	ldi	r31, 0x00	; 0
     ca4:	82 e0       	ldi	r24, 0x02	; 2
     ca6:	80 83       	st	Z, r24
	
    TWCR = (1<<TWEN); /* enable TWI */
     ca8:	e6 e5       	ldi	r30, 0x56	; 86
     caa:	f0 e0       	ldi	r31, 0x00	; 0
     cac:	84 e0       	ldi	r24, 0x04	; 4
     cae:	80 83       	st	Z, r24
}
     cb0:	cf 91       	pop	r28
     cb2:	df 91       	pop	r29
     cb4:	08 95       	ret

00000cb6 <TWI_start>:

void TWI_start(void)
{
     cb6:	df 93       	push	r29
     cb8:	cf 93       	push	r28
     cba:	cd b7       	in	r28, 0x3d	; 61
     cbc:	de b7       	in	r29, 0x3e	; 62
    /* 
	 * Clear the TWINT flag before sending the start bit TWINT=1
	 * send the start bit by TWSTA=1
	 * Enable TWI Module TWEN=1 
	 */
    TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
     cbe:	e6 e5       	ldi	r30, 0x56	; 86
     cc0:	f0 e0       	ldi	r31, 0x00	; 0
     cc2:	84 ea       	ldi	r24, 0xA4	; 164
     cc4:	80 83       	st	Z, r24
    
    /* Wait for TWINT flag set in TWCR Register (start bit is send successfully) */
    while(BIT_IS_CLEAR(TWCR,TWINT));
     cc6:	e6 e5       	ldi	r30, 0x56	; 86
     cc8:	f0 e0       	ldi	r31, 0x00	; 0
     cca:	80 81       	ld	r24, Z
     ccc:	88 23       	and	r24, r24
     cce:	dc f7       	brge	.-10     	; 0xcc6 <TWI_start+0x10>
}
     cd0:	cf 91       	pop	r28
     cd2:	df 91       	pop	r29
     cd4:	08 95       	ret

00000cd6 <TWI_stop>:

void TWI_stop(void)
{
     cd6:	df 93       	push	r29
     cd8:	cf 93       	push	r28
     cda:	cd b7       	in	r28, 0x3d	; 61
     cdc:	de b7       	in	r29, 0x3e	; 62
    /* 
	 * Clear the TWINT flag before sending the stop bit TWINT=1
	 * send the stop bit by TWSTO=1
	 * Enable TWI Module TWEN=1 
	 */
    TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
     cde:	e6 e5       	ldi	r30, 0x56	; 86
     ce0:	f0 e0       	ldi	r31, 0x00	; 0
     ce2:	84 e9       	ldi	r24, 0x94	; 148
     ce4:	80 83       	st	Z, r24
}
     ce6:	cf 91       	pop	r28
     ce8:	df 91       	pop	r29
     cea:	08 95       	ret

00000cec <TWI_write>:

void TWI_write(uint8 data)
{
     cec:	df 93       	push	r29
     cee:	cf 93       	push	r28
     cf0:	0f 92       	push	r0
     cf2:	cd b7       	in	r28, 0x3d	; 61
     cf4:	de b7       	in	r29, 0x3e	; 62
     cf6:	89 83       	std	Y+1, r24	; 0x01
    /* Put data On TWI data Register */
    TWDR = data;
     cf8:	e3 e2       	ldi	r30, 0x23	; 35
     cfa:	f0 e0       	ldi	r31, 0x00	; 0
     cfc:	89 81       	ldd	r24, Y+1	; 0x01
     cfe:	80 83       	st	Z, r24
    /* 
	 * Clear the TWINT flag before sending the data TWINT=1
	 * Enable TWI Module TWEN=1 
	 */ 
    TWCR = (1 << TWINT) | (1 << TWEN);
     d00:	e6 e5       	ldi	r30, 0x56	; 86
     d02:	f0 e0       	ldi	r31, 0x00	; 0
     d04:	84 e8       	ldi	r24, 0x84	; 132
     d06:	80 83       	st	Z, r24
    /* Wait for TWINT flag set in TWCR Register(data is send successfully) */
    while(BIT_IS_CLEAR(TWCR,TWINT));
     d08:	e6 e5       	ldi	r30, 0x56	; 86
     d0a:	f0 e0       	ldi	r31, 0x00	; 0
     d0c:	80 81       	ld	r24, Z
     d0e:	88 23       	and	r24, r24
     d10:	dc f7       	brge	.-10     	; 0xd08 <TWI_write+0x1c>
}
     d12:	0f 90       	pop	r0
     d14:	cf 91       	pop	r28
     d16:	df 91       	pop	r29
     d18:	08 95       	ret

00000d1a <TWI_readWithACK>:

uint8 TWI_readWithACK(void)
{
     d1a:	df 93       	push	r29
     d1c:	cf 93       	push	r28
     d1e:	cd b7       	in	r28, 0x3d	; 61
     d20:	de b7       	in	r29, 0x3e	; 62
	/* 
	 * Clear the TWINT flag before reading the data TWINT=1
	 * Enable sending ACK after reading or receiving data TWEA=1
	 * Enable TWI Module TWEN=1 
	 */ 
    TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
     d22:	e6 e5       	ldi	r30, 0x56	; 86
     d24:	f0 e0       	ldi	r31, 0x00	; 0
     d26:	84 ec       	ldi	r24, 0xC4	; 196
     d28:	80 83       	st	Z, r24
    /* Wait for TWINT flag set in TWCR Register (data received successfully) */
    while(BIT_IS_CLEAR(TWCR,TWINT));
     d2a:	e6 e5       	ldi	r30, 0x56	; 86
     d2c:	f0 e0       	ldi	r31, 0x00	; 0
     d2e:	80 81       	ld	r24, Z
     d30:	88 23       	and	r24, r24
     d32:	dc f7       	brge	.-10     	; 0xd2a <TWI_readWithACK+0x10>
    /* Read Data */
    return TWDR;
     d34:	e3 e2       	ldi	r30, 0x23	; 35
     d36:	f0 e0       	ldi	r31, 0x00	; 0
     d38:	80 81       	ld	r24, Z
}
     d3a:	cf 91       	pop	r28
     d3c:	df 91       	pop	r29
     d3e:	08 95       	ret

00000d40 <TWI_readWithNACK>:

uint8 TWI_readWithNACK(void)
{
     d40:	df 93       	push	r29
     d42:	cf 93       	push	r28
     d44:	cd b7       	in	r28, 0x3d	; 61
     d46:	de b7       	in	r29, 0x3e	; 62
	/* 
	 * Clear the TWINT flag before reading the data TWINT=1
	 * Enable TWI Module TWEN=1 
	 */
    TWCR = (1 << TWINT) | (1 << TWEN);
     d48:	e6 e5       	ldi	r30, 0x56	; 86
     d4a:	f0 e0       	ldi	r31, 0x00	; 0
     d4c:	84 e8       	ldi	r24, 0x84	; 132
     d4e:	80 83       	st	Z, r24
    /* Wait for TWINT flag set in TWCR Register (data received successfully) */
    while(BIT_IS_CLEAR(TWCR,TWINT));
     d50:	e6 e5       	ldi	r30, 0x56	; 86
     d52:	f0 e0       	ldi	r31, 0x00	; 0
     d54:	80 81       	ld	r24, Z
     d56:	88 23       	and	r24, r24
     d58:	dc f7       	brge	.-10     	; 0xd50 <TWI_readWithNACK+0x10>
    /* Read Data */
    return TWDR;
     d5a:	e3 e2       	ldi	r30, 0x23	; 35
     d5c:	f0 e0       	ldi	r31, 0x00	; 0
     d5e:	80 81       	ld	r24, Z
}
     d60:	cf 91       	pop	r28
     d62:	df 91       	pop	r29
     d64:	08 95       	ret

00000d66 <TWI_getStatus>:

uint8 TWI_getStatus(void)
{
     d66:	df 93       	push	r29
     d68:	cf 93       	push	r28
     d6a:	0f 92       	push	r0
     d6c:	cd b7       	in	r28, 0x3d	; 61
     d6e:	de b7       	in	r29, 0x3e	; 62
    uint8 status;
    /* masking to eliminate first 3 bits and get the last 5 bits (status bits) */
    status = TWSR & 0xF8;
     d70:	e1 e2       	ldi	r30, 0x21	; 33
     d72:	f0 e0       	ldi	r31, 0x00	; 0
     d74:	80 81       	ld	r24, Z
     d76:	88 7f       	andi	r24, 0xF8	; 248
     d78:	89 83       	std	Y+1, r24	; 0x01
    return status;
     d7a:	89 81       	ldd	r24, Y+1	; 0x01
}
     d7c:	0f 90       	pop	r0
     d7e:	cf 91       	pop	r28
     d80:	df 91       	pop	r29
     d82:	08 95       	ret

00000d84 <keypad_getpressed_key>:
 static uint8 keypad_4x3_adjust_keyNumber(uint8 button_number);
#elif(N_COL==4)
 static uint8 keypad_4x4_adjust_keyNumber(uint8 button_number);
#endif

uint8 keypad_getpressed_key(void){
     d84:	df 93       	push	r29
     d86:	cf 93       	push	r28
     d88:	00 d0       	rcall	.+0      	; 0xd8a <keypad_getpressed_key+0x6>
     d8a:	cd b7       	in	r28, 0x3d	; 61
     d8c:	de b7       	in	r29, 0x3e	; 62
   uint8 col , row ;

	while(1){

		for(col=0 ; col<N_COL ; col++){
     d8e:	1a 82       	std	Y+2, r1	; 0x02
     d90:	4c c0       	rjmp	.+152    	; 0xe2a <keypad_getpressed_key+0xa6>

			KEYPAD_PORT_DIR =   (0b00010000<<col);
     d92:	e4 e3       	ldi	r30, 0x34	; 52
     d94:	f0 e0       	ldi	r31, 0x00	; 0
     d96:	8a 81       	ldd	r24, Y+2	; 0x02
     d98:	28 2f       	mov	r18, r24
     d9a:	30 e0       	ldi	r19, 0x00	; 0
     d9c:	80 e1       	ldi	r24, 0x10	; 16
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	02 c0       	rjmp	.+4      	; 0xda6 <keypad_getpressed_key+0x22>
     da2:	88 0f       	add	r24, r24
     da4:	99 1f       	adc	r25, r25
     da6:	2a 95       	dec	r18
     da8:	e2 f7       	brpl	.-8      	; 0xda2 <keypad_getpressed_key+0x1e>
     daa:	80 83       	st	Z, r24

			KEYPAD_PORT_OUT = (~(0b00010000<<col));  // 1110 1111
     dac:	e5 e3       	ldi	r30, 0x35	; 53
     dae:	f0 e0       	ldi	r31, 0x00	; 0
     db0:	8a 81       	ldd	r24, Y+2	; 0x02
     db2:	28 2f       	mov	r18, r24
     db4:	30 e0       	ldi	r19, 0x00	; 0
     db6:	80 e1       	ldi	r24, 0x10	; 16
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	02 2e       	mov	r0, r18
     dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <keypad_getpressed_key+0x3e>
     dbe:	88 0f       	add	r24, r24
     dc0:	99 1f       	adc	r25, r25
     dc2:	0a 94       	dec	r0
     dc4:	e2 f7       	brpl	.-8      	; 0xdbe <keypad_getpressed_key+0x3a>
     dc6:	80 95       	com	r24
     dc8:	80 83       	st	Z, r24

			for(row=0 ; row<N_ROW ;row++){
     dca:	19 82       	std	Y+1, r1	; 0x01
     dcc:	28 c0       	rjmp	.+80     	; 0xe1e <keypad_getpressed_key+0x9a>
				if(BIT_IS_CLEAR(KEYPAD_PORT_IN , row)){
     dce:	e3 e3       	ldi	r30, 0x33	; 51
     dd0:	f0 e0       	ldi	r31, 0x00	; 0
     dd2:	80 81       	ld	r24, Z
     dd4:	28 2f       	mov	r18, r24
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	89 81       	ldd	r24, Y+1	; 0x01
     dda:	88 2f       	mov	r24, r24
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	a9 01       	movw	r20, r18
     de0:	02 c0       	rjmp	.+4      	; 0xde6 <keypad_getpressed_key+0x62>
     de2:	55 95       	asr	r21
     de4:	47 95       	ror	r20
     de6:	8a 95       	dec	r24
     de8:	e2 f7       	brpl	.-8      	; 0xde2 <keypad_getpressed_key+0x5e>
     dea:	ca 01       	movw	r24, r20
     dec:	81 70       	andi	r24, 0x01	; 1
     dee:	90 70       	andi	r25, 0x00	; 0
     df0:	00 97       	sbiw	r24, 0x00	; 0
     df2:	91 f4       	brne	.+36     	; 0xe18 <keypad_getpressed_key+0x94>
                      #if(N_COL==3)
					  return (keypad_4x3_adjust_keyNumber((row*N_COL)+col+1));
                      #elif(N_COL==4)
					  return (keypad_4x4_adjust_keyNumber((row*N_COL)+col+1));
     df4:	89 81       	ldd	r24, Y+1	; 0x01
     df6:	88 2f       	mov	r24, r24
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	88 0f       	add	r24, r24
     dfc:	99 1f       	adc	r25, r25
     dfe:	88 0f       	add	r24, r24
     e00:	99 1f       	adc	r25, r25
     e02:	98 2f       	mov	r25, r24
     e04:	8a 81       	ldd	r24, Y+2	; 0x02
     e06:	89 0f       	add	r24, r25
     e08:	8f 5f       	subi	r24, 0xFF	; 255
     e0a:	0e 94 1a 07 	call	0xe34	; 0xe34 <keypad_4x4_adjust_keyNumber>
                      #endif
				}
			}
		}
	}
}
     e0e:	0f 90       	pop	r0
     e10:	0f 90       	pop	r0
     e12:	cf 91       	pop	r28
     e14:	df 91       	pop	r29
     e16:	08 95       	ret

			KEYPAD_PORT_DIR =   (0b00010000<<col);

			KEYPAD_PORT_OUT = (~(0b00010000<<col));  // 1110 1111

			for(row=0 ; row<N_ROW ;row++){
     e18:	89 81       	ldd	r24, Y+1	; 0x01
     e1a:	8f 5f       	subi	r24, 0xFF	; 255
     e1c:	89 83       	std	Y+1, r24	; 0x01
     e1e:	89 81       	ldd	r24, Y+1	; 0x01
     e20:	84 30       	cpi	r24, 0x04	; 4
     e22:	a8 f2       	brcs	.-86     	; 0xdce <keypad_getpressed_key+0x4a>
uint8 keypad_getpressed_key(void){
   uint8 col , row ;

	while(1){

		for(col=0 ; col<N_COL ; col++){
     e24:	8a 81       	ldd	r24, Y+2	; 0x02
     e26:	8f 5f       	subi	r24, 0xFF	; 255
     e28:	8a 83       	std	Y+2, r24	; 0x02
     e2a:	8a 81       	ldd	r24, Y+2	; 0x02
     e2c:	84 30       	cpi	r24, 0x04	; 4
     e2e:	08 f4       	brcc	.+2      	; 0xe32 <keypad_getpressed_key+0xae>
     e30:	b0 cf       	rjmp	.-160    	; 0xd92 <keypad_getpressed_key+0xe>
     e32:	ad cf       	rjmp	.-166    	; 0xd8e <keypad_getpressed_key+0xa>

00000e34 <keypad_4x4_adjust_keyNumber>:
	}
}

#elif(N_COL==4)

static uint8 keypad_4x4_adjust_keyNumber(uint8 button_number){
     e34:	df 93       	push	r29
     e36:	cf 93       	push	r28
     e38:	00 d0       	rcall	.+0      	; 0xe3a <keypad_4x4_adjust_keyNumber+0x6>
     e3a:	00 d0       	rcall	.+0      	; 0xe3c <keypad_4x4_adjust_keyNumber+0x8>
     e3c:	cd b7       	in	r28, 0x3d	; 61
     e3e:	de b7       	in	r29, 0x3e	; 62
     e40:	89 83       	std	Y+1, r24	; 0x01

	switch(button_number){
     e42:	89 81       	ldd	r24, Y+1	; 0x01
     e44:	28 2f       	mov	r18, r24
     e46:	30 e0       	ldi	r19, 0x00	; 0
     e48:	3c 83       	std	Y+4, r19	; 0x04
     e4a:	2b 83       	std	Y+3, r18	; 0x03
     e4c:	8b 81       	ldd	r24, Y+3	; 0x03
     e4e:	9c 81       	ldd	r25, Y+4	; 0x04
     e50:	88 30       	cpi	r24, 0x08	; 8
     e52:	91 05       	cpc	r25, r1
     e54:	09 f4       	brne	.+2      	; 0xe58 <keypad_4x4_adjust_keyNumber+0x24>
     e56:	70 c0       	rjmp	.+224    	; 0xf38 <keypad_4x4_adjust_keyNumber+0x104>
     e58:	2b 81       	ldd	r18, Y+3	; 0x03
     e5a:	3c 81       	ldd	r19, Y+4	; 0x04
     e5c:	29 30       	cpi	r18, 0x09	; 9
     e5e:	31 05       	cpc	r19, r1
     e60:	5c f5       	brge	.+86     	; 0xeb8 <keypad_4x4_adjust_keyNumber+0x84>
     e62:	8b 81       	ldd	r24, Y+3	; 0x03
     e64:	9c 81       	ldd	r25, Y+4	; 0x04
     e66:	84 30       	cpi	r24, 0x04	; 4
     e68:	91 05       	cpc	r25, r1
     e6a:	09 f4       	brne	.+2      	; 0xe6e <keypad_4x4_adjust_keyNumber+0x3a>
     e6c:	59 c0       	rjmp	.+178    	; 0xf20 <keypad_4x4_adjust_keyNumber+0xec>
     e6e:	2b 81       	ldd	r18, Y+3	; 0x03
     e70:	3c 81       	ldd	r19, Y+4	; 0x04
     e72:	25 30       	cpi	r18, 0x05	; 5
     e74:	31 05       	cpc	r19, r1
     e76:	9c f4       	brge	.+38     	; 0xe9e <keypad_4x4_adjust_keyNumber+0x6a>
     e78:	8b 81       	ldd	r24, Y+3	; 0x03
     e7a:	9c 81       	ldd	r25, Y+4	; 0x04
     e7c:	82 30       	cpi	r24, 0x02	; 2
     e7e:	91 05       	cpc	r25, r1
     e80:	09 f4       	brne	.+2      	; 0xe84 <keypad_4x4_adjust_keyNumber+0x50>
     e82:	48 c0       	rjmp	.+144    	; 0xf14 <keypad_4x4_adjust_keyNumber+0xe0>
     e84:	2b 81       	ldd	r18, Y+3	; 0x03
     e86:	3c 81       	ldd	r19, Y+4	; 0x04
     e88:	23 30       	cpi	r18, 0x03	; 3
     e8a:	31 05       	cpc	r19, r1
     e8c:	0c f0       	brlt	.+2      	; 0xe90 <keypad_4x4_adjust_keyNumber+0x5c>
     e8e:	45 c0       	rjmp	.+138    	; 0xf1a <keypad_4x4_adjust_keyNumber+0xe6>
     e90:	8b 81       	ldd	r24, Y+3	; 0x03
     e92:	9c 81       	ldd	r25, Y+4	; 0x04
     e94:	81 30       	cpi	r24, 0x01	; 1
     e96:	91 05       	cpc	r25, r1
     e98:	09 f4       	brne	.+2      	; 0xe9c <keypad_4x4_adjust_keyNumber+0x68>
     e9a:	39 c0       	rjmp	.+114    	; 0xf0e <keypad_4x4_adjust_keyNumber+0xda>
     e9c:	67 c0       	rjmp	.+206    	; 0xf6c <keypad_4x4_adjust_keyNumber+0x138>
     e9e:	2b 81       	ldd	r18, Y+3	; 0x03
     ea0:	3c 81       	ldd	r19, Y+4	; 0x04
     ea2:	26 30       	cpi	r18, 0x06	; 6
     ea4:	31 05       	cpc	r19, r1
     ea6:	09 f4       	brne	.+2      	; 0xeaa <keypad_4x4_adjust_keyNumber+0x76>
     ea8:	41 c0       	rjmp	.+130    	; 0xf2c <keypad_4x4_adjust_keyNumber+0xf8>
     eaa:	8b 81       	ldd	r24, Y+3	; 0x03
     eac:	9c 81       	ldd	r25, Y+4	; 0x04
     eae:	87 30       	cpi	r24, 0x07	; 7
     eb0:	91 05       	cpc	r25, r1
     eb2:	0c f0       	brlt	.+2      	; 0xeb6 <keypad_4x4_adjust_keyNumber+0x82>
     eb4:	3e c0       	rjmp	.+124    	; 0xf32 <keypad_4x4_adjust_keyNumber+0xfe>
     eb6:	37 c0       	rjmp	.+110    	; 0xf26 <keypad_4x4_adjust_keyNumber+0xf2>
     eb8:	2b 81       	ldd	r18, Y+3	; 0x03
     eba:	3c 81       	ldd	r19, Y+4	; 0x04
     ebc:	2c 30       	cpi	r18, 0x0C	; 12
     ebe:	31 05       	cpc	r19, r1
     ec0:	09 f4       	brne	.+2      	; 0xec4 <keypad_4x4_adjust_keyNumber+0x90>
     ec2:	46 c0       	rjmp	.+140    	; 0xf50 <keypad_4x4_adjust_keyNumber+0x11c>
     ec4:	8b 81       	ldd	r24, Y+3	; 0x03
     ec6:	9c 81       	ldd	r25, Y+4	; 0x04
     ec8:	8d 30       	cpi	r24, 0x0D	; 13
     eca:	91 05       	cpc	r25, r1
     ecc:	5c f4       	brge	.+22     	; 0xee4 <keypad_4x4_adjust_keyNumber+0xb0>
     ece:	2b 81       	ldd	r18, Y+3	; 0x03
     ed0:	3c 81       	ldd	r19, Y+4	; 0x04
     ed2:	2a 30       	cpi	r18, 0x0A	; 10
     ed4:	31 05       	cpc	r19, r1
     ed6:	b1 f1       	breq	.+108    	; 0xf44 <keypad_4x4_adjust_keyNumber+0x110>
     ed8:	8b 81       	ldd	r24, Y+3	; 0x03
     eda:	9c 81       	ldd	r25, Y+4	; 0x04
     edc:	8b 30       	cpi	r24, 0x0B	; 11
     ede:	91 05       	cpc	r25, r1
     ee0:	a4 f5       	brge	.+104    	; 0xf4a <keypad_4x4_adjust_keyNumber+0x116>
     ee2:	2d c0       	rjmp	.+90     	; 0xf3e <keypad_4x4_adjust_keyNumber+0x10a>
     ee4:	2b 81       	ldd	r18, Y+3	; 0x03
     ee6:	3c 81       	ldd	r19, Y+4	; 0x04
     ee8:	2e 30       	cpi	r18, 0x0E	; 14
     eea:	31 05       	cpc	r19, r1
     eec:	b9 f1       	breq	.+110    	; 0xf5c <keypad_4x4_adjust_keyNumber+0x128>
     eee:	8b 81       	ldd	r24, Y+3	; 0x03
     ef0:	9c 81       	ldd	r25, Y+4	; 0x04
     ef2:	8e 30       	cpi	r24, 0x0E	; 14
     ef4:	91 05       	cpc	r25, r1
     ef6:	7c f1       	brlt	.+94     	; 0xf56 <keypad_4x4_adjust_keyNumber+0x122>
     ef8:	2b 81       	ldd	r18, Y+3	; 0x03
     efa:	3c 81       	ldd	r19, Y+4	; 0x04
     efc:	2f 30       	cpi	r18, 0x0F	; 15
     efe:	31 05       	cpc	r19, r1
     f00:	79 f1       	breq	.+94     	; 0xf60 <keypad_4x4_adjust_keyNumber+0x12c>
     f02:	8b 81       	ldd	r24, Y+3	; 0x03
     f04:	9c 81       	ldd	r25, Y+4	; 0x04
     f06:	80 31       	cpi	r24, 0x10	; 16
     f08:	91 05       	cpc	r25, r1
     f0a:	69 f1       	breq	.+90     	; 0xf66 <keypad_4x4_adjust_keyNumber+0x132>
     f0c:	2f c0       	rjmp	.+94     	; 0xf6c <keypad_4x4_adjust_keyNumber+0x138>
	case 1 :
		return 7 ;
     f0e:	97 e0       	ldi	r25, 0x07	; 7
     f10:	9a 83       	std	Y+2, r25	; 0x02
     f12:	2e c0       	rjmp	.+92     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 2 :
		return 8 ;
     f14:	28 e0       	ldi	r18, 0x08	; 8
     f16:	2a 83       	std	Y+2, r18	; 0x02
     f18:	2b c0       	rjmp	.+86     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 3 :
		return 9 ;
     f1a:	39 e0       	ldi	r19, 0x09	; 9
     f1c:	3a 83       	std	Y+2, r19	; 0x02
     f1e:	28 c0       	rjmp	.+80     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 4 :
		return '%' ;
     f20:	85 e2       	ldi	r24, 0x25	; 37
     f22:	8a 83       	std	Y+2, r24	; 0x02
     f24:	25 c0       	rjmp	.+74     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 5 :
		return 4 ;
     f26:	94 e0       	ldi	r25, 0x04	; 4
     f28:	9a 83       	std	Y+2, r25	; 0x02
     f2a:	22 c0       	rjmp	.+68     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 6 :
		return 5 ;
     f2c:	25 e0       	ldi	r18, 0x05	; 5
     f2e:	2a 83       	std	Y+2, r18	; 0x02
     f30:	1f c0       	rjmp	.+62     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 7 :
		return 6 ;
     f32:	36 e0       	ldi	r19, 0x06	; 6
     f34:	3a 83       	std	Y+2, r19	; 0x02
     f36:	1c c0       	rjmp	.+56     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 8 :
		return '*' ;
     f38:	8a e2       	ldi	r24, 0x2A	; 42
     f3a:	8a 83       	std	Y+2, r24	; 0x02
     f3c:	19 c0       	rjmp	.+50     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 9 :
		return 1 ;
     f3e:	91 e0       	ldi	r25, 0x01	; 1
     f40:	9a 83       	std	Y+2, r25	; 0x02
     f42:	16 c0       	rjmp	.+44     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 10 :
		return 2 ;
     f44:	22 e0       	ldi	r18, 0x02	; 2
     f46:	2a 83       	std	Y+2, r18	; 0x02
     f48:	13 c0       	rjmp	.+38     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 11 :
		return 3 ;
     f4a:	33 e0       	ldi	r19, 0x03	; 3
     f4c:	3a 83       	std	Y+2, r19	; 0x02
     f4e:	10 c0       	rjmp	.+32     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 12 :
		return '-' ;
     f50:	8d e2       	ldi	r24, 0x2D	; 45
     f52:	8a 83       	std	Y+2, r24	; 0x02
     f54:	0d c0       	rjmp	.+26     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 13 :
		return 13 ;
     f56:	9d e0       	ldi	r25, 0x0D	; 13
     f58:	9a 83       	std	Y+2, r25	; 0x02
     f5a:	0a c0       	rjmp	.+20     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 14 :
		return 0 ;
     f5c:	1a 82       	std	Y+2, r1	; 0x02
     f5e:	08 c0       	rjmp	.+16     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 15 :
		return '=' ;
     f60:	2d e3       	ldi	r18, 0x3D	; 61
     f62:	2a 83       	std	Y+2, r18	; 0x02
     f64:	05 c0       	rjmp	.+10     	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;
	case 16 :
		return '+' ;
     f66:	3b e2       	ldi	r19, 0x2B	; 43
     f68:	3a 83       	std	Y+2, r19	; 0x02
     f6a:	02 c0       	rjmp	.+4      	; 0xf70 <keypad_4x4_adjust_keyNumber+0x13c>
		break;

	default : return button_number;
     f6c:	89 81       	ldd	r24, Y+1	; 0x01
     f6e:	8a 83       	std	Y+2, r24	; 0x02
     f70:	8a 81       	ldd	r24, Y+2	; 0x02
	}

}
     f72:	0f 90       	pop	r0
     f74:	0f 90       	pop	r0
     f76:	0f 90       	pop	r0
     f78:	0f 90       	pop	r0
     f7a:	cf 91       	pop	r28
     f7c:	df 91       	pop	r29
     f7e:	08 95       	ret

00000f80 <LCD_init>:
 */


#include"lcd.h"

void LCD_init(void){
     f80:	df 93       	push	r29
     f82:	cf 93       	push	r28
     f84:	cd b7       	in	r28, 0x3d	; 61
     f86:	de b7       	in	r29, 0x3e	; 62

	LCD_DATA_DIR=0xFF; //set data port as output
     f88:	e7 e3       	ldi	r30, 0x37	; 55
     f8a:	f0 e0       	ldi	r31, 0x00	; 0
     f8c:	8f ef       	ldi	r24, 0xFF	; 255
     f8e:	80 83       	st	Z, r24
	LCD_CTR_DIR|=(1<<RS)|(1<<E)|(1<<RW); // set (RS , E & RW ) output
     f90:	aa e3       	ldi	r26, 0x3A	; 58
     f92:	b0 e0       	ldi	r27, 0x00	; 0
     f94:	ea e3       	ldi	r30, 0x3A	; 58
     f96:	f0 e0       	ldi	r31, 0x00	; 0
     f98:	80 81       	ld	r24, Z
     f9a:	87 60       	ori	r24, 0x07	; 7
     f9c:	8c 93       	st	X, r24

	LCD_sendCommand(TWO_LINE_EIGHT_BIN); // mode 2*8
     f9e:	88 e3       	ldi	r24, 0x38	; 56
     fa0:	0e 94 db 07 	call	0xfb6	; 0xfb6 <LCD_sendCommand>
	LCD_sendCommand(DISPLAY_ON_CURSOR_OFF); // cursor off
     fa4:	8c e0       	ldi	r24, 0x0C	; 12
     fa6:	0e 94 db 07 	call	0xfb6	; 0xfb6 <LCD_sendCommand>
	LCD_sendCommand(CLEAR_SCREEN); // clear the display screen
     faa:	81 e0       	ldi	r24, 0x01	; 1
     fac:	0e 94 db 07 	call	0xfb6	; 0xfb6 <LCD_sendCommand>

}
     fb0:	cf 91       	pop	r28
     fb2:	df 91       	pop	r29
     fb4:	08 95       	ret

00000fb6 <LCD_sendCommand>:

void LCD_sendCommand(uint8 command){
     fb6:	df 93       	push	r29
     fb8:	cf 93       	push	r28
     fba:	cd b7       	in	r28, 0x3d	; 61
     fbc:	de b7       	in	r29, 0x3e	; 62
     fbe:	e9 97       	sbiw	r28, 0x39	; 57
     fc0:	0f b6       	in	r0, 0x3f	; 63
     fc2:	f8 94       	cli
     fc4:	de bf       	out	0x3e, r29	; 62
     fc6:	0f be       	out	0x3f, r0	; 63
     fc8:	cd bf       	out	0x3d, r28	; 61
     fca:	89 af       	std	Y+57, r24	; 0x39

	/*control RS & RW*/
	/*clear (RS & RW)*/
	CLEAR_BIT(LCD_CTR_PORT,RS);// RS= LOW -> instruction  mode
     fcc:	ab e3       	ldi	r26, 0x3B	; 59
     fce:	b0 e0       	ldi	r27, 0x00	; 0
     fd0:	eb e3       	ldi	r30, 0x3B	; 59
     fd2:	f0 e0       	ldi	r31, 0x00	; 0
     fd4:	80 81       	ld	r24, Z
     fd6:	8b 7f       	andi	r24, 0xFB	; 251
     fd8:	8c 93       	st	X, r24
	CLEAR_BIT(LCD_CTR_PORT,RW);// RW= LOW -> write        mode
     fda:	ab e3       	ldi	r26, 0x3B	; 59
     fdc:	b0 e0       	ldi	r27, 0x00	; 0
     fde:	eb e3       	ldi	r30, 0x3B	; 59
     fe0:	f0 e0       	ldi	r31, 0x00	; 0
     fe2:	80 81       	ld	r24, Z
     fe4:	8d 7f       	andi	r24, 0xFD	; 253
     fe6:	8c 93       	st	X, r24
     fe8:	80 e0       	ldi	r24, 0x00	; 0
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	a0 e8       	ldi	r26, 0x80	; 128
     fee:	bf e3       	ldi	r27, 0x3F	; 63
     ff0:	8d ab       	std	Y+53, r24	; 0x35
     ff2:	9e ab       	std	Y+54, r25	; 0x36
     ff4:	af ab       	std	Y+55, r26	; 0x37
     ff6:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ff8:	6d a9       	ldd	r22, Y+53	; 0x35
     ffa:	7e a9       	ldd	r23, Y+54	; 0x36
     ffc:	8f a9       	ldd	r24, Y+55	; 0x37
     ffe:	98 ad       	ldd	r25, Y+56	; 0x38
    1000:	20 e0       	ldi	r18, 0x00	; 0
    1002:	30 e0       	ldi	r19, 0x00	; 0
    1004:	4a e7       	ldi	r20, 0x7A	; 122
    1006:	53 e4       	ldi	r21, 0x43	; 67
    1008:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    100c:	dc 01       	movw	r26, r24
    100e:	cb 01       	movw	r24, r22
    1010:	89 ab       	std	Y+49, r24	; 0x31
    1012:	9a ab       	std	Y+50, r25	; 0x32
    1014:	ab ab       	std	Y+51, r26	; 0x33
    1016:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1018:	69 a9       	ldd	r22, Y+49	; 0x31
    101a:	7a a9       	ldd	r23, Y+50	; 0x32
    101c:	8b a9       	ldd	r24, Y+51	; 0x33
    101e:	9c a9       	ldd	r25, Y+52	; 0x34
    1020:	20 e0       	ldi	r18, 0x00	; 0
    1022:	30 e0       	ldi	r19, 0x00	; 0
    1024:	40 e8       	ldi	r20, 0x80	; 128
    1026:	5f e3       	ldi	r21, 0x3F	; 63
    1028:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    102c:	88 23       	and	r24, r24
    102e:	2c f4       	brge	.+10     	; 0x103a <LCD_sendCommand+0x84>
		__ticks = 1;
    1030:	81 e0       	ldi	r24, 0x01	; 1
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	98 ab       	std	Y+48, r25	; 0x30
    1036:	8f a7       	std	Y+47, r24	; 0x2f
    1038:	3f c0       	rjmp	.+126    	; 0x10b8 <LCD_sendCommand+0x102>
	else if (__tmp > 65535)
    103a:	69 a9       	ldd	r22, Y+49	; 0x31
    103c:	7a a9       	ldd	r23, Y+50	; 0x32
    103e:	8b a9       	ldd	r24, Y+51	; 0x33
    1040:	9c a9       	ldd	r25, Y+52	; 0x34
    1042:	20 e0       	ldi	r18, 0x00	; 0
    1044:	3f ef       	ldi	r19, 0xFF	; 255
    1046:	4f e7       	ldi	r20, 0x7F	; 127
    1048:	57 e4       	ldi	r21, 0x47	; 71
    104a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    104e:	18 16       	cp	r1, r24
    1050:	4c f5       	brge	.+82     	; 0x10a4 <LCD_sendCommand+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1052:	6d a9       	ldd	r22, Y+53	; 0x35
    1054:	7e a9       	ldd	r23, Y+54	; 0x36
    1056:	8f a9       	ldd	r24, Y+55	; 0x37
    1058:	98 ad       	ldd	r25, Y+56	; 0x38
    105a:	20 e0       	ldi	r18, 0x00	; 0
    105c:	30 e0       	ldi	r19, 0x00	; 0
    105e:	40 e2       	ldi	r20, 0x20	; 32
    1060:	51 e4       	ldi	r21, 0x41	; 65
    1062:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1066:	dc 01       	movw	r26, r24
    1068:	cb 01       	movw	r24, r22
    106a:	bc 01       	movw	r22, r24
    106c:	cd 01       	movw	r24, r26
    106e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1072:	dc 01       	movw	r26, r24
    1074:	cb 01       	movw	r24, r22
    1076:	98 ab       	std	Y+48, r25	; 0x30
    1078:	8f a7       	std	Y+47, r24	; 0x2f
    107a:	0f c0       	rjmp	.+30     	; 0x109a <LCD_sendCommand+0xe4>
    107c:	89 e1       	ldi	r24, 0x19	; 25
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	9e a7       	std	Y+46, r25	; 0x2e
    1082:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1084:	8d a5       	ldd	r24, Y+45	; 0x2d
    1086:	9e a5       	ldd	r25, Y+46	; 0x2e
    1088:	01 97       	sbiw	r24, 0x01	; 1
    108a:	f1 f7       	brne	.-4      	; 0x1088 <LCD_sendCommand+0xd2>
    108c:	9e a7       	std	Y+46, r25	; 0x2e
    108e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1090:	8f a5       	ldd	r24, Y+47	; 0x2f
    1092:	98 a9       	ldd	r25, Y+48	; 0x30
    1094:	01 97       	sbiw	r24, 0x01	; 1
    1096:	98 ab       	std	Y+48, r25	; 0x30
    1098:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    109a:	8f a5       	ldd	r24, Y+47	; 0x2f
    109c:	98 a9       	ldd	r25, Y+48	; 0x30
    109e:	00 97       	sbiw	r24, 0x00	; 0
    10a0:	69 f7       	brne	.-38     	; 0x107c <LCD_sendCommand+0xc6>
    10a2:	14 c0       	rjmp	.+40     	; 0x10cc <LCD_sendCommand+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10a4:	69 a9       	ldd	r22, Y+49	; 0x31
    10a6:	7a a9       	ldd	r23, Y+50	; 0x32
    10a8:	8b a9       	ldd	r24, Y+51	; 0x33
    10aa:	9c a9       	ldd	r25, Y+52	; 0x34
    10ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    10b0:	dc 01       	movw	r26, r24
    10b2:	cb 01       	movw	r24, r22
    10b4:	98 ab       	std	Y+48, r25	; 0x30
    10b6:	8f a7       	std	Y+47, r24	; 0x2f
    10b8:	8f a5       	ldd	r24, Y+47	; 0x2f
    10ba:	98 a9       	ldd	r25, Y+48	; 0x30
    10bc:	9c a7       	std	Y+44, r25	; 0x2c
    10be:	8b a7       	std	Y+43, r24	; 0x2b
    10c0:	8b a5       	ldd	r24, Y+43	; 0x2b
    10c2:	9c a5       	ldd	r25, Y+44	; 0x2c
    10c4:	01 97       	sbiw	r24, 0x01	; 1
    10c6:	f1 f7       	brne	.-4      	; 0x10c4 <LCD_sendCommand+0x10e>
    10c8:	9c a7       	std	Y+44, r25	; 0x2c
    10ca:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(1);
	SET_BIT(LCD_CTR_PORT,E);   // set enable
    10cc:	ab e3       	ldi	r26, 0x3B	; 59
    10ce:	b0 e0       	ldi	r27, 0x00	; 0
    10d0:	eb e3       	ldi	r30, 0x3B	; 59
    10d2:	f0 e0       	ldi	r31, 0x00	; 0
    10d4:	80 81       	ld	r24, Z
    10d6:	81 60       	ori	r24, 0x01	; 1
    10d8:	8c 93       	st	X, r24
    10da:	80 e0       	ldi	r24, 0x00	; 0
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	a0 e8       	ldi	r26, 0x80	; 128
    10e0:	bf e3       	ldi	r27, 0x3F	; 63
    10e2:	8f a3       	std	Y+39, r24	; 0x27
    10e4:	98 a7       	std	Y+40, r25	; 0x28
    10e6:	a9 a7       	std	Y+41, r26	; 0x29
    10e8:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10ea:	6f a1       	ldd	r22, Y+39	; 0x27
    10ec:	78 a5       	ldd	r23, Y+40	; 0x28
    10ee:	89 a5       	ldd	r24, Y+41	; 0x29
    10f0:	9a a5       	ldd	r25, Y+42	; 0x2a
    10f2:	20 e0       	ldi	r18, 0x00	; 0
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	4a e7       	ldi	r20, 0x7A	; 122
    10f8:	53 e4       	ldi	r21, 0x43	; 67
    10fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    10fe:	dc 01       	movw	r26, r24
    1100:	cb 01       	movw	r24, r22
    1102:	8b a3       	std	Y+35, r24	; 0x23
    1104:	9c a3       	std	Y+36, r25	; 0x24
    1106:	ad a3       	std	Y+37, r26	; 0x25
    1108:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    110a:	6b a1       	ldd	r22, Y+35	; 0x23
    110c:	7c a1       	ldd	r23, Y+36	; 0x24
    110e:	8d a1       	ldd	r24, Y+37	; 0x25
    1110:	9e a1       	ldd	r25, Y+38	; 0x26
    1112:	20 e0       	ldi	r18, 0x00	; 0
    1114:	30 e0       	ldi	r19, 0x00	; 0
    1116:	40 e8       	ldi	r20, 0x80	; 128
    1118:	5f e3       	ldi	r21, 0x3F	; 63
    111a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    111e:	88 23       	and	r24, r24
    1120:	2c f4       	brge	.+10     	; 0x112c <LCD_sendCommand+0x176>
		__ticks = 1;
    1122:	81 e0       	ldi	r24, 0x01	; 1
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	9a a3       	std	Y+34, r25	; 0x22
    1128:	89 a3       	std	Y+33, r24	; 0x21
    112a:	3f c0       	rjmp	.+126    	; 0x11aa <LCD_sendCommand+0x1f4>
	else if (__tmp > 65535)
    112c:	6b a1       	ldd	r22, Y+35	; 0x23
    112e:	7c a1       	ldd	r23, Y+36	; 0x24
    1130:	8d a1       	ldd	r24, Y+37	; 0x25
    1132:	9e a1       	ldd	r25, Y+38	; 0x26
    1134:	20 e0       	ldi	r18, 0x00	; 0
    1136:	3f ef       	ldi	r19, 0xFF	; 255
    1138:	4f e7       	ldi	r20, 0x7F	; 127
    113a:	57 e4       	ldi	r21, 0x47	; 71
    113c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1140:	18 16       	cp	r1, r24
    1142:	4c f5       	brge	.+82     	; 0x1196 <LCD_sendCommand+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1144:	6f a1       	ldd	r22, Y+39	; 0x27
    1146:	78 a5       	ldd	r23, Y+40	; 0x28
    1148:	89 a5       	ldd	r24, Y+41	; 0x29
    114a:	9a a5       	ldd	r25, Y+42	; 0x2a
    114c:	20 e0       	ldi	r18, 0x00	; 0
    114e:	30 e0       	ldi	r19, 0x00	; 0
    1150:	40 e2       	ldi	r20, 0x20	; 32
    1152:	51 e4       	ldi	r21, 0x41	; 65
    1154:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1158:	dc 01       	movw	r26, r24
    115a:	cb 01       	movw	r24, r22
    115c:	bc 01       	movw	r22, r24
    115e:	cd 01       	movw	r24, r26
    1160:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1164:	dc 01       	movw	r26, r24
    1166:	cb 01       	movw	r24, r22
    1168:	9a a3       	std	Y+34, r25	; 0x22
    116a:	89 a3       	std	Y+33, r24	; 0x21
    116c:	0f c0       	rjmp	.+30     	; 0x118c <LCD_sendCommand+0x1d6>
    116e:	89 e1       	ldi	r24, 0x19	; 25
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	98 a3       	std	Y+32, r25	; 0x20
    1174:	8f 8f       	std	Y+31, r24	; 0x1f
    1176:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1178:	98 a1       	ldd	r25, Y+32	; 0x20
    117a:	01 97       	sbiw	r24, 0x01	; 1
    117c:	f1 f7       	brne	.-4      	; 0x117a <LCD_sendCommand+0x1c4>
    117e:	98 a3       	std	Y+32, r25	; 0x20
    1180:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1182:	89 a1       	ldd	r24, Y+33	; 0x21
    1184:	9a a1       	ldd	r25, Y+34	; 0x22
    1186:	01 97       	sbiw	r24, 0x01	; 1
    1188:	9a a3       	std	Y+34, r25	; 0x22
    118a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    118c:	89 a1       	ldd	r24, Y+33	; 0x21
    118e:	9a a1       	ldd	r25, Y+34	; 0x22
    1190:	00 97       	sbiw	r24, 0x00	; 0
    1192:	69 f7       	brne	.-38     	; 0x116e <LCD_sendCommand+0x1b8>
    1194:	14 c0       	rjmp	.+40     	; 0x11be <LCD_sendCommand+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1196:	6b a1       	ldd	r22, Y+35	; 0x23
    1198:	7c a1       	ldd	r23, Y+36	; 0x24
    119a:	8d a1       	ldd	r24, Y+37	; 0x25
    119c:	9e a1       	ldd	r25, Y+38	; 0x26
    119e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11a2:	dc 01       	movw	r26, r24
    11a4:	cb 01       	movw	r24, r22
    11a6:	9a a3       	std	Y+34, r25	; 0x22
    11a8:	89 a3       	std	Y+33, r24	; 0x21
    11aa:	89 a1       	ldd	r24, Y+33	; 0x21
    11ac:	9a a1       	ldd	r25, Y+34	; 0x22
    11ae:	9e 8f       	std	Y+30, r25	; 0x1e
    11b0:	8d 8f       	std	Y+29, r24	; 0x1d
    11b2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    11b4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    11b6:	01 97       	sbiw	r24, 0x01	; 1
    11b8:	f1 f7       	brne	.-4      	; 0x11b6 <LCD_sendCommand+0x200>
    11ba:	9e 8f       	std	Y+30, r25	; 0x1e
    11bc:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	LCD_DATA_PORT= command;    //send command
    11be:	e8 e3       	ldi	r30, 0x38	; 56
    11c0:	f0 e0       	ldi	r31, 0x00	; 0
    11c2:	89 ad       	ldd	r24, Y+57	; 0x39
    11c4:	80 83       	st	Z, r24
    11c6:	80 e0       	ldi	r24, 0x00	; 0
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	a0 e8       	ldi	r26, 0x80	; 128
    11cc:	bf e3       	ldi	r27, 0x3F	; 63
    11ce:	89 8f       	std	Y+25, r24	; 0x19
    11d0:	9a 8f       	std	Y+26, r25	; 0x1a
    11d2:	ab 8f       	std	Y+27, r26	; 0x1b
    11d4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11d6:	69 8d       	ldd	r22, Y+25	; 0x19
    11d8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    11da:	8b 8d       	ldd	r24, Y+27	; 0x1b
    11dc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    11de:	20 e0       	ldi	r18, 0x00	; 0
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	4a e7       	ldi	r20, 0x7A	; 122
    11e4:	53 e4       	ldi	r21, 0x43	; 67
    11e6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11ea:	dc 01       	movw	r26, r24
    11ec:	cb 01       	movw	r24, r22
    11ee:	8d 8b       	std	Y+21, r24	; 0x15
    11f0:	9e 8b       	std	Y+22, r25	; 0x16
    11f2:	af 8b       	std	Y+23, r26	; 0x17
    11f4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    11f6:	6d 89       	ldd	r22, Y+21	; 0x15
    11f8:	7e 89       	ldd	r23, Y+22	; 0x16
    11fa:	8f 89       	ldd	r24, Y+23	; 0x17
    11fc:	98 8d       	ldd	r25, Y+24	; 0x18
    11fe:	20 e0       	ldi	r18, 0x00	; 0
    1200:	30 e0       	ldi	r19, 0x00	; 0
    1202:	40 e8       	ldi	r20, 0x80	; 128
    1204:	5f e3       	ldi	r21, 0x3F	; 63
    1206:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    120a:	88 23       	and	r24, r24
    120c:	2c f4       	brge	.+10     	; 0x1218 <LCD_sendCommand+0x262>
		__ticks = 1;
    120e:	81 e0       	ldi	r24, 0x01	; 1
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	9c 8b       	std	Y+20, r25	; 0x14
    1214:	8b 8b       	std	Y+19, r24	; 0x13
    1216:	3f c0       	rjmp	.+126    	; 0x1296 <LCD_sendCommand+0x2e0>
	else if (__tmp > 65535)
    1218:	6d 89       	ldd	r22, Y+21	; 0x15
    121a:	7e 89       	ldd	r23, Y+22	; 0x16
    121c:	8f 89       	ldd	r24, Y+23	; 0x17
    121e:	98 8d       	ldd	r25, Y+24	; 0x18
    1220:	20 e0       	ldi	r18, 0x00	; 0
    1222:	3f ef       	ldi	r19, 0xFF	; 255
    1224:	4f e7       	ldi	r20, 0x7F	; 127
    1226:	57 e4       	ldi	r21, 0x47	; 71
    1228:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    122c:	18 16       	cp	r1, r24
    122e:	4c f5       	brge	.+82     	; 0x1282 <LCD_sendCommand+0x2cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1230:	69 8d       	ldd	r22, Y+25	; 0x19
    1232:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1234:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1236:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1238:	20 e0       	ldi	r18, 0x00	; 0
    123a:	30 e0       	ldi	r19, 0x00	; 0
    123c:	40 e2       	ldi	r20, 0x20	; 32
    123e:	51 e4       	ldi	r21, 0x41	; 65
    1240:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1244:	dc 01       	movw	r26, r24
    1246:	cb 01       	movw	r24, r22
    1248:	bc 01       	movw	r22, r24
    124a:	cd 01       	movw	r24, r26
    124c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1250:	dc 01       	movw	r26, r24
    1252:	cb 01       	movw	r24, r22
    1254:	9c 8b       	std	Y+20, r25	; 0x14
    1256:	8b 8b       	std	Y+19, r24	; 0x13
    1258:	0f c0       	rjmp	.+30     	; 0x1278 <LCD_sendCommand+0x2c2>
    125a:	89 e1       	ldi	r24, 0x19	; 25
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	9a 8b       	std	Y+18, r25	; 0x12
    1260:	89 8b       	std	Y+17, r24	; 0x11
    1262:	89 89       	ldd	r24, Y+17	; 0x11
    1264:	9a 89       	ldd	r25, Y+18	; 0x12
    1266:	01 97       	sbiw	r24, 0x01	; 1
    1268:	f1 f7       	brne	.-4      	; 0x1266 <LCD_sendCommand+0x2b0>
    126a:	9a 8b       	std	Y+18, r25	; 0x12
    126c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    126e:	8b 89       	ldd	r24, Y+19	; 0x13
    1270:	9c 89       	ldd	r25, Y+20	; 0x14
    1272:	01 97       	sbiw	r24, 0x01	; 1
    1274:	9c 8b       	std	Y+20, r25	; 0x14
    1276:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1278:	8b 89       	ldd	r24, Y+19	; 0x13
    127a:	9c 89       	ldd	r25, Y+20	; 0x14
    127c:	00 97       	sbiw	r24, 0x00	; 0
    127e:	69 f7       	brne	.-38     	; 0x125a <LCD_sendCommand+0x2a4>
    1280:	14 c0       	rjmp	.+40     	; 0x12aa <LCD_sendCommand+0x2f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1282:	6d 89       	ldd	r22, Y+21	; 0x15
    1284:	7e 89       	ldd	r23, Y+22	; 0x16
    1286:	8f 89       	ldd	r24, Y+23	; 0x17
    1288:	98 8d       	ldd	r25, Y+24	; 0x18
    128a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    128e:	dc 01       	movw	r26, r24
    1290:	cb 01       	movw	r24, r22
    1292:	9c 8b       	std	Y+20, r25	; 0x14
    1294:	8b 8b       	std	Y+19, r24	; 0x13
    1296:	8b 89       	ldd	r24, Y+19	; 0x13
    1298:	9c 89       	ldd	r25, Y+20	; 0x14
    129a:	98 8b       	std	Y+16, r25	; 0x10
    129c:	8f 87       	std	Y+15, r24	; 0x0f
    129e:	8f 85       	ldd	r24, Y+15	; 0x0f
    12a0:	98 89       	ldd	r25, Y+16	; 0x10
    12a2:	01 97       	sbiw	r24, 0x01	; 1
    12a4:	f1 f7       	brne	.-4      	; 0x12a2 <LCD_sendCommand+0x2ec>
    12a6:	98 8b       	std	Y+16, r25	; 0x10
    12a8:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	CLEAR_BIT(LCD_CTR_PORT,E); //clear enable
    12aa:	ab e3       	ldi	r26, 0x3B	; 59
    12ac:	b0 e0       	ldi	r27, 0x00	; 0
    12ae:	eb e3       	ldi	r30, 0x3B	; 59
    12b0:	f0 e0       	ldi	r31, 0x00	; 0
    12b2:	80 81       	ld	r24, Z
    12b4:	8e 7f       	andi	r24, 0xFE	; 254
    12b6:	8c 93       	st	X, r24
    12b8:	80 e0       	ldi	r24, 0x00	; 0
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	a0 e8       	ldi	r26, 0x80	; 128
    12be:	bf e3       	ldi	r27, 0x3F	; 63
    12c0:	8b 87       	std	Y+11, r24	; 0x0b
    12c2:	9c 87       	std	Y+12, r25	; 0x0c
    12c4:	ad 87       	std	Y+13, r26	; 0x0d
    12c6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12c8:	6b 85       	ldd	r22, Y+11	; 0x0b
    12ca:	7c 85       	ldd	r23, Y+12	; 0x0c
    12cc:	8d 85       	ldd	r24, Y+13	; 0x0d
    12ce:	9e 85       	ldd	r25, Y+14	; 0x0e
    12d0:	20 e0       	ldi	r18, 0x00	; 0
    12d2:	30 e0       	ldi	r19, 0x00	; 0
    12d4:	4a e7       	ldi	r20, 0x7A	; 122
    12d6:	53 e4       	ldi	r21, 0x43	; 67
    12d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12dc:	dc 01       	movw	r26, r24
    12de:	cb 01       	movw	r24, r22
    12e0:	8f 83       	std	Y+7, r24	; 0x07
    12e2:	98 87       	std	Y+8, r25	; 0x08
    12e4:	a9 87       	std	Y+9, r26	; 0x09
    12e6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    12e8:	6f 81       	ldd	r22, Y+7	; 0x07
    12ea:	78 85       	ldd	r23, Y+8	; 0x08
    12ec:	89 85       	ldd	r24, Y+9	; 0x09
    12ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    12f0:	20 e0       	ldi	r18, 0x00	; 0
    12f2:	30 e0       	ldi	r19, 0x00	; 0
    12f4:	40 e8       	ldi	r20, 0x80	; 128
    12f6:	5f e3       	ldi	r21, 0x3F	; 63
    12f8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    12fc:	88 23       	and	r24, r24
    12fe:	2c f4       	brge	.+10     	; 0x130a <LCD_sendCommand+0x354>
		__ticks = 1;
    1300:	81 e0       	ldi	r24, 0x01	; 1
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	9e 83       	std	Y+6, r25	; 0x06
    1306:	8d 83       	std	Y+5, r24	; 0x05
    1308:	3f c0       	rjmp	.+126    	; 0x1388 <LCD_sendCommand+0x3d2>
	else if (__tmp > 65535)
    130a:	6f 81       	ldd	r22, Y+7	; 0x07
    130c:	78 85       	ldd	r23, Y+8	; 0x08
    130e:	89 85       	ldd	r24, Y+9	; 0x09
    1310:	9a 85       	ldd	r25, Y+10	; 0x0a
    1312:	20 e0       	ldi	r18, 0x00	; 0
    1314:	3f ef       	ldi	r19, 0xFF	; 255
    1316:	4f e7       	ldi	r20, 0x7F	; 127
    1318:	57 e4       	ldi	r21, 0x47	; 71
    131a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    131e:	18 16       	cp	r1, r24
    1320:	4c f5       	brge	.+82     	; 0x1374 <LCD_sendCommand+0x3be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1322:	6b 85       	ldd	r22, Y+11	; 0x0b
    1324:	7c 85       	ldd	r23, Y+12	; 0x0c
    1326:	8d 85       	ldd	r24, Y+13	; 0x0d
    1328:	9e 85       	ldd	r25, Y+14	; 0x0e
    132a:	20 e0       	ldi	r18, 0x00	; 0
    132c:	30 e0       	ldi	r19, 0x00	; 0
    132e:	40 e2       	ldi	r20, 0x20	; 32
    1330:	51 e4       	ldi	r21, 0x41	; 65
    1332:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1336:	dc 01       	movw	r26, r24
    1338:	cb 01       	movw	r24, r22
    133a:	bc 01       	movw	r22, r24
    133c:	cd 01       	movw	r24, r26
    133e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1342:	dc 01       	movw	r26, r24
    1344:	cb 01       	movw	r24, r22
    1346:	9e 83       	std	Y+6, r25	; 0x06
    1348:	8d 83       	std	Y+5, r24	; 0x05
    134a:	0f c0       	rjmp	.+30     	; 0x136a <LCD_sendCommand+0x3b4>
    134c:	89 e1       	ldi	r24, 0x19	; 25
    134e:	90 e0       	ldi	r25, 0x00	; 0
    1350:	9c 83       	std	Y+4, r25	; 0x04
    1352:	8b 83       	std	Y+3, r24	; 0x03
    1354:	8b 81       	ldd	r24, Y+3	; 0x03
    1356:	9c 81       	ldd	r25, Y+4	; 0x04
    1358:	01 97       	sbiw	r24, 0x01	; 1
    135a:	f1 f7       	brne	.-4      	; 0x1358 <LCD_sendCommand+0x3a2>
    135c:	9c 83       	std	Y+4, r25	; 0x04
    135e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1360:	8d 81       	ldd	r24, Y+5	; 0x05
    1362:	9e 81       	ldd	r25, Y+6	; 0x06
    1364:	01 97       	sbiw	r24, 0x01	; 1
    1366:	9e 83       	std	Y+6, r25	; 0x06
    1368:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    136a:	8d 81       	ldd	r24, Y+5	; 0x05
    136c:	9e 81       	ldd	r25, Y+6	; 0x06
    136e:	00 97       	sbiw	r24, 0x00	; 0
    1370:	69 f7       	brne	.-38     	; 0x134c <LCD_sendCommand+0x396>
    1372:	14 c0       	rjmp	.+40     	; 0x139c <LCD_sendCommand+0x3e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1374:	6f 81       	ldd	r22, Y+7	; 0x07
    1376:	78 85       	ldd	r23, Y+8	; 0x08
    1378:	89 85       	ldd	r24, Y+9	; 0x09
    137a:	9a 85       	ldd	r25, Y+10	; 0x0a
    137c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1380:	dc 01       	movw	r26, r24
    1382:	cb 01       	movw	r24, r22
    1384:	9e 83       	std	Y+6, r25	; 0x06
    1386:	8d 83       	std	Y+5, r24	; 0x05
    1388:	8d 81       	ldd	r24, Y+5	; 0x05
    138a:	9e 81       	ldd	r25, Y+6	; 0x06
    138c:	9a 83       	std	Y+2, r25	; 0x02
    138e:	89 83       	std	Y+1, r24	; 0x01
    1390:	89 81       	ldd	r24, Y+1	; 0x01
    1392:	9a 81       	ldd	r25, Y+2	; 0x02
    1394:	01 97       	sbiw	r24, 0x01	; 1
    1396:	f1 f7       	brne	.-4      	; 0x1394 <LCD_sendCommand+0x3de>
    1398:	9a 83       	std	Y+2, r25	; 0x02
    139a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);

}
    139c:	e9 96       	adiw	r28, 0x39	; 57
    139e:	0f b6       	in	r0, 0x3f	; 63
    13a0:	f8 94       	cli
    13a2:	de bf       	out	0x3e, r29	; 62
    13a4:	0f be       	out	0x3f, r0	; 63
    13a6:	cd bf       	out	0x3d, r28	; 61
    13a8:	cf 91       	pop	r28
    13aa:	df 91       	pop	r29
    13ac:	08 95       	ret

000013ae <LCD_displayCharacter>:


void LCD_displayCharacter(uint8 data){
    13ae:	df 93       	push	r29
    13b0:	cf 93       	push	r28
    13b2:	cd b7       	in	r28, 0x3d	; 61
    13b4:	de b7       	in	r29, 0x3e	; 62
    13b6:	e9 97       	sbiw	r28, 0x39	; 57
    13b8:	0f b6       	in	r0, 0x3f	; 63
    13ba:	f8 94       	cli
    13bc:	de bf       	out	0x3e, r29	; 62
    13be:	0f be       	out	0x3f, r0	; 63
    13c0:	cd bf       	out	0x3d, r28	; 61
    13c2:	89 af       	std	Y+57, r24	; 0x39

	/*control RS & RW*/
	/*clear (RS & RW)*/
	SET_BIT(LCD_CTR_PORT,RS);   // RS= HIGH -> data  mode
    13c4:	ab e3       	ldi	r26, 0x3B	; 59
    13c6:	b0 e0       	ldi	r27, 0x00	; 0
    13c8:	eb e3       	ldi	r30, 0x3B	; 59
    13ca:	f0 e0       	ldi	r31, 0x00	; 0
    13cc:	80 81       	ld	r24, Z
    13ce:	84 60       	ori	r24, 0x04	; 4
    13d0:	8c 93       	st	X, r24
	CLEAR_BIT(LCD_CTR_PORT,RW); // RW= LOW  -> write mode
    13d2:	ab e3       	ldi	r26, 0x3B	; 59
    13d4:	b0 e0       	ldi	r27, 0x00	; 0
    13d6:	eb e3       	ldi	r30, 0x3B	; 59
    13d8:	f0 e0       	ldi	r31, 0x00	; 0
    13da:	80 81       	ld	r24, Z
    13dc:	8d 7f       	andi	r24, 0xFD	; 253
    13de:	8c 93       	st	X, r24
    13e0:	80 e0       	ldi	r24, 0x00	; 0
    13e2:	90 e0       	ldi	r25, 0x00	; 0
    13e4:	a0 e8       	ldi	r26, 0x80	; 128
    13e6:	bf e3       	ldi	r27, 0x3F	; 63
    13e8:	8d ab       	std	Y+53, r24	; 0x35
    13ea:	9e ab       	std	Y+54, r25	; 0x36
    13ec:	af ab       	std	Y+55, r26	; 0x37
    13ee:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13f0:	6d a9       	ldd	r22, Y+53	; 0x35
    13f2:	7e a9       	ldd	r23, Y+54	; 0x36
    13f4:	8f a9       	ldd	r24, Y+55	; 0x37
    13f6:	98 ad       	ldd	r25, Y+56	; 0x38
    13f8:	20 e0       	ldi	r18, 0x00	; 0
    13fa:	30 e0       	ldi	r19, 0x00	; 0
    13fc:	4a e7       	ldi	r20, 0x7A	; 122
    13fe:	53 e4       	ldi	r21, 0x43	; 67
    1400:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1404:	dc 01       	movw	r26, r24
    1406:	cb 01       	movw	r24, r22
    1408:	89 ab       	std	Y+49, r24	; 0x31
    140a:	9a ab       	std	Y+50, r25	; 0x32
    140c:	ab ab       	std	Y+51, r26	; 0x33
    140e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1410:	69 a9       	ldd	r22, Y+49	; 0x31
    1412:	7a a9       	ldd	r23, Y+50	; 0x32
    1414:	8b a9       	ldd	r24, Y+51	; 0x33
    1416:	9c a9       	ldd	r25, Y+52	; 0x34
    1418:	20 e0       	ldi	r18, 0x00	; 0
    141a:	30 e0       	ldi	r19, 0x00	; 0
    141c:	40 e8       	ldi	r20, 0x80	; 128
    141e:	5f e3       	ldi	r21, 0x3F	; 63
    1420:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1424:	88 23       	and	r24, r24
    1426:	2c f4       	brge	.+10     	; 0x1432 <LCD_displayCharacter+0x84>
		__ticks = 1;
    1428:	81 e0       	ldi	r24, 0x01	; 1
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	98 ab       	std	Y+48, r25	; 0x30
    142e:	8f a7       	std	Y+47, r24	; 0x2f
    1430:	3f c0       	rjmp	.+126    	; 0x14b0 <LCD_displayCharacter+0x102>
	else if (__tmp > 65535)
    1432:	69 a9       	ldd	r22, Y+49	; 0x31
    1434:	7a a9       	ldd	r23, Y+50	; 0x32
    1436:	8b a9       	ldd	r24, Y+51	; 0x33
    1438:	9c a9       	ldd	r25, Y+52	; 0x34
    143a:	20 e0       	ldi	r18, 0x00	; 0
    143c:	3f ef       	ldi	r19, 0xFF	; 255
    143e:	4f e7       	ldi	r20, 0x7F	; 127
    1440:	57 e4       	ldi	r21, 0x47	; 71
    1442:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1446:	18 16       	cp	r1, r24
    1448:	4c f5       	brge	.+82     	; 0x149c <LCD_displayCharacter+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    144a:	6d a9       	ldd	r22, Y+53	; 0x35
    144c:	7e a9       	ldd	r23, Y+54	; 0x36
    144e:	8f a9       	ldd	r24, Y+55	; 0x37
    1450:	98 ad       	ldd	r25, Y+56	; 0x38
    1452:	20 e0       	ldi	r18, 0x00	; 0
    1454:	30 e0       	ldi	r19, 0x00	; 0
    1456:	40 e2       	ldi	r20, 0x20	; 32
    1458:	51 e4       	ldi	r21, 0x41	; 65
    145a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    145e:	dc 01       	movw	r26, r24
    1460:	cb 01       	movw	r24, r22
    1462:	bc 01       	movw	r22, r24
    1464:	cd 01       	movw	r24, r26
    1466:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    146a:	dc 01       	movw	r26, r24
    146c:	cb 01       	movw	r24, r22
    146e:	98 ab       	std	Y+48, r25	; 0x30
    1470:	8f a7       	std	Y+47, r24	; 0x2f
    1472:	0f c0       	rjmp	.+30     	; 0x1492 <LCD_displayCharacter+0xe4>
    1474:	89 e1       	ldi	r24, 0x19	; 25
    1476:	90 e0       	ldi	r25, 0x00	; 0
    1478:	9e a7       	std	Y+46, r25	; 0x2e
    147a:	8d a7       	std	Y+45, r24	; 0x2d
    147c:	8d a5       	ldd	r24, Y+45	; 0x2d
    147e:	9e a5       	ldd	r25, Y+46	; 0x2e
    1480:	01 97       	sbiw	r24, 0x01	; 1
    1482:	f1 f7       	brne	.-4      	; 0x1480 <LCD_displayCharacter+0xd2>
    1484:	9e a7       	std	Y+46, r25	; 0x2e
    1486:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1488:	8f a5       	ldd	r24, Y+47	; 0x2f
    148a:	98 a9       	ldd	r25, Y+48	; 0x30
    148c:	01 97       	sbiw	r24, 0x01	; 1
    148e:	98 ab       	std	Y+48, r25	; 0x30
    1490:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1492:	8f a5       	ldd	r24, Y+47	; 0x2f
    1494:	98 a9       	ldd	r25, Y+48	; 0x30
    1496:	00 97       	sbiw	r24, 0x00	; 0
    1498:	69 f7       	brne	.-38     	; 0x1474 <LCD_displayCharacter+0xc6>
    149a:	14 c0       	rjmp	.+40     	; 0x14c4 <LCD_displayCharacter+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    149c:	69 a9       	ldd	r22, Y+49	; 0x31
    149e:	7a a9       	ldd	r23, Y+50	; 0x32
    14a0:	8b a9       	ldd	r24, Y+51	; 0x33
    14a2:	9c a9       	ldd	r25, Y+52	; 0x34
    14a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14a8:	dc 01       	movw	r26, r24
    14aa:	cb 01       	movw	r24, r22
    14ac:	98 ab       	std	Y+48, r25	; 0x30
    14ae:	8f a7       	std	Y+47, r24	; 0x2f
    14b0:	8f a5       	ldd	r24, Y+47	; 0x2f
    14b2:	98 a9       	ldd	r25, Y+48	; 0x30
    14b4:	9c a7       	std	Y+44, r25	; 0x2c
    14b6:	8b a7       	std	Y+43, r24	; 0x2b
    14b8:	8b a5       	ldd	r24, Y+43	; 0x2b
    14ba:	9c a5       	ldd	r25, Y+44	; 0x2c
    14bc:	01 97       	sbiw	r24, 0x01	; 1
    14be:	f1 f7       	brne	.-4      	; 0x14bc <LCD_displayCharacter+0x10e>
    14c0:	9c a7       	std	Y+44, r25	; 0x2c
    14c2:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(1);
	SET_BIT(LCD_CTR_PORT,E);   // set enable
    14c4:	ab e3       	ldi	r26, 0x3B	; 59
    14c6:	b0 e0       	ldi	r27, 0x00	; 0
    14c8:	eb e3       	ldi	r30, 0x3B	; 59
    14ca:	f0 e0       	ldi	r31, 0x00	; 0
    14cc:	80 81       	ld	r24, Z
    14ce:	81 60       	ori	r24, 0x01	; 1
    14d0:	8c 93       	st	X, r24
    14d2:	80 e0       	ldi	r24, 0x00	; 0
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	a0 e8       	ldi	r26, 0x80	; 128
    14d8:	bf e3       	ldi	r27, 0x3F	; 63
    14da:	8f a3       	std	Y+39, r24	; 0x27
    14dc:	98 a7       	std	Y+40, r25	; 0x28
    14de:	a9 a7       	std	Y+41, r26	; 0x29
    14e0:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14e2:	6f a1       	ldd	r22, Y+39	; 0x27
    14e4:	78 a5       	ldd	r23, Y+40	; 0x28
    14e6:	89 a5       	ldd	r24, Y+41	; 0x29
    14e8:	9a a5       	ldd	r25, Y+42	; 0x2a
    14ea:	20 e0       	ldi	r18, 0x00	; 0
    14ec:	30 e0       	ldi	r19, 0x00	; 0
    14ee:	4a e7       	ldi	r20, 0x7A	; 122
    14f0:	53 e4       	ldi	r21, 0x43	; 67
    14f2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14f6:	dc 01       	movw	r26, r24
    14f8:	cb 01       	movw	r24, r22
    14fa:	8b a3       	std	Y+35, r24	; 0x23
    14fc:	9c a3       	std	Y+36, r25	; 0x24
    14fe:	ad a3       	std	Y+37, r26	; 0x25
    1500:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1502:	6b a1       	ldd	r22, Y+35	; 0x23
    1504:	7c a1       	ldd	r23, Y+36	; 0x24
    1506:	8d a1       	ldd	r24, Y+37	; 0x25
    1508:	9e a1       	ldd	r25, Y+38	; 0x26
    150a:	20 e0       	ldi	r18, 0x00	; 0
    150c:	30 e0       	ldi	r19, 0x00	; 0
    150e:	40 e8       	ldi	r20, 0x80	; 128
    1510:	5f e3       	ldi	r21, 0x3F	; 63
    1512:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1516:	88 23       	and	r24, r24
    1518:	2c f4       	brge	.+10     	; 0x1524 <LCD_displayCharacter+0x176>
		__ticks = 1;
    151a:	81 e0       	ldi	r24, 0x01	; 1
    151c:	90 e0       	ldi	r25, 0x00	; 0
    151e:	9a a3       	std	Y+34, r25	; 0x22
    1520:	89 a3       	std	Y+33, r24	; 0x21
    1522:	3f c0       	rjmp	.+126    	; 0x15a2 <LCD_displayCharacter+0x1f4>
	else if (__tmp > 65535)
    1524:	6b a1       	ldd	r22, Y+35	; 0x23
    1526:	7c a1       	ldd	r23, Y+36	; 0x24
    1528:	8d a1       	ldd	r24, Y+37	; 0x25
    152a:	9e a1       	ldd	r25, Y+38	; 0x26
    152c:	20 e0       	ldi	r18, 0x00	; 0
    152e:	3f ef       	ldi	r19, 0xFF	; 255
    1530:	4f e7       	ldi	r20, 0x7F	; 127
    1532:	57 e4       	ldi	r21, 0x47	; 71
    1534:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1538:	18 16       	cp	r1, r24
    153a:	4c f5       	brge	.+82     	; 0x158e <LCD_displayCharacter+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    153c:	6f a1       	ldd	r22, Y+39	; 0x27
    153e:	78 a5       	ldd	r23, Y+40	; 0x28
    1540:	89 a5       	ldd	r24, Y+41	; 0x29
    1542:	9a a5       	ldd	r25, Y+42	; 0x2a
    1544:	20 e0       	ldi	r18, 0x00	; 0
    1546:	30 e0       	ldi	r19, 0x00	; 0
    1548:	40 e2       	ldi	r20, 0x20	; 32
    154a:	51 e4       	ldi	r21, 0x41	; 65
    154c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1550:	dc 01       	movw	r26, r24
    1552:	cb 01       	movw	r24, r22
    1554:	bc 01       	movw	r22, r24
    1556:	cd 01       	movw	r24, r26
    1558:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    155c:	dc 01       	movw	r26, r24
    155e:	cb 01       	movw	r24, r22
    1560:	9a a3       	std	Y+34, r25	; 0x22
    1562:	89 a3       	std	Y+33, r24	; 0x21
    1564:	0f c0       	rjmp	.+30     	; 0x1584 <LCD_displayCharacter+0x1d6>
    1566:	89 e1       	ldi	r24, 0x19	; 25
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	98 a3       	std	Y+32, r25	; 0x20
    156c:	8f 8f       	std	Y+31, r24	; 0x1f
    156e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1570:	98 a1       	ldd	r25, Y+32	; 0x20
    1572:	01 97       	sbiw	r24, 0x01	; 1
    1574:	f1 f7       	brne	.-4      	; 0x1572 <LCD_displayCharacter+0x1c4>
    1576:	98 a3       	std	Y+32, r25	; 0x20
    1578:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    157a:	89 a1       	ldd	r24, Y+33	; 0x21
    157c:	9a a1       	ldd	r25, Y+34	; 0x22
    157e:	01 97       	sbiw	r24, 0x01	; 1
    1580:	9a a3       	std	Y+34, r25	; 0x22
    1582:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1584:	89 a1       	ldd	r24, Y+33	; 0x21
    1586:	9a a1       	ldd	r25, Y+34	; 0x22
    1588:	00 97       	sbiw	r24, 0x00	; 0
    158a:	69 f7       	brne	.-38     	; 0x1566 <LCD_displayCharacter+0x1b8>
    158c:	14 c0       	rjmp	.+40     	; 0x15b6 <LCD_displayCharacter+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    158e:	6b a1       	ldd	r22, Y+35	; 0x23
    1590:	7c a1       	ldd	r23, Y+36	; 0x24
    1592:	8d a1       	ldd	r24, Y+37	; 0x25
    1594:	9e a1       	ldd	r25, Y+38	; 0x26
    1596:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    159a:	dc 01       	movw	r26, r24
    159c:	cb 01       	movw	r24, r22
    159e:	9a a3       	std	Y+34, r25	; 0x22
    15a0:	89 a3       	std	Y+33, r24	; 0x21
    15a2:	89 a1       	ldd	r24, Y+33	; 0x21
    15a4:	9a a1       	ldd	r25, Y+34	; 0x22
    15a6:	9e 8f       	std	Y+30, r25	; 0x1e
    15a8:	8d 8f       	std	Y+29, r24	; 0x1d
    15aa:	8d 8d       	ldd	r24, Y+29	; 0x1d
    15ac:	9e 8d       	ldd	r25, Y+30	; 0x1e
    15ae:	01 97       	sbiw	r24, 0x01	; 1
    15b0:	f1 f7       	brne	.-4      	; 0x15ae <LCD_displayCharacter+0x200>
    15b2:	9e 8f       	std	Y+30, r25	; 0x1e
    15b4:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	LCD_DATA_PORT= data;       //send command
    15b6:	e8 e3       	ldi	r30, 0x38	; 56
    15b8:	f0 e0       	ldi	r31, 0x00	; 0
    15ba:	89 ad       	ldd	r24, Y+57	; 0x39
    15bc:	80 83       	st	Z, r24
    15be:	80 e0       	ldi	r24, 0x00	; 0
    15c0:	90 e0       	ldi	r25, 0x00	; 0
    15c2:	a0 e8       	ldi	r26, 0x80	; 128
    15c4:	bf e3       	ldi	r27, 0x3F	; 63
    15c6:	89 8f       	std	Y+25, r24	; 0x19
    15c8:	9a 8f       	std	Y+26, r25	; 0x1a
    15ca:	ab 8f       	std	Y+27, r26	; 0x1b
    15cc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15ce:	69 8d       	ldd	r22, Y+25	; 0x19
    15d0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    15d2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    15d4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    15d6:	20 e0       	ldi	r18, 0x00	; 0
    15d8:	30 e0       	ldi	r19, 0x00	; 0
    15da:	4a e7       	ldi	r20, 0x7A	; 122
    15dc:	53 e4       	ldi	r21, 0x43	; 67
    15de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15e2:	dc 01       	movw	r26, r24
    15e4:	cb 01       	movw	r24, r22
    15e6:	8d 8b       	std	Y+21, r24	; 0x15
    15e8:	9e 8b       	std	Y+22, r25	; 0x16
    15ea:	af 8b       	std	Y+23, r26	; 0x17
    15ec:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    15ee:	6d 89       	ldd	r22, Y+21	; 0x15
    15f0:	7e 89       	ldd	r23, Y+22	; 0x16
    15f2:	8f 89       	ldd	r24, Y+23	; 0x17
    15f4:	98 8d       	ldd	r25, Y+24	; 0x18
    15f6:	20 e0       	ldi	r18, 0x00	; 0
    15f8:	30 e0       	ldi	r19, 0x00	; 0
    15fa:	40 e8       	ldi	r20, 0x80	; 128
    15fc:	5f e3       	ldi	r21, 0x3F	; 63
    15fe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1602:	88 23       	and	r24, r24
    1604:	2c f4       	brge	.+10     	; 0x1610 <LCD_displayCharacter+0x262>
		__ticks = 1;
    1606:	81 e0       	ldi	r24, 0x01	; 1
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	9c 8b       	std	Y+20, r25	; 0x14
    160c:	8b 8b       	std	Y+19, r24	; 0x13
    160e:	3f c0       	rjmp	.+126    	; 0x168e <LCD_displayCharacter+0x2e0>
	else if (__tmp > 65535)
    1610:	6d 89       	ldd	r22, Y+21	; 0x15
    1612:	7e 89       	ldd	r23, Y+22	; 0x16
    1614:	8f 89       	ldd	r24, Y+23	; 0x17
    1616:	98 8d       	ldd	r25, Y+24	; 0x18
    1618:	20 e0       	ldi	r18, 0x00	; 0
    161a:	3f ef       	ldi	r19, 0xFF	; 255
    161c:	4f e7       	ldi	r20, 0x7F	; 127
    161e:	57 e4       	ldi	r21, 0x47	; 71
    1620:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1624:	18 16       	cp	r1, r24
    1626:	4c f5       	brge	.+82     	; 0x167a <LCD_displayCharacter+0x2cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1628:	69 8d       	ldd	r22, Y+25	; 0x19
    162a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    162c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    162e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1630:	20 e0       	ldi	r18, 0x00	; 0
    1632:	30 e0       	ldi	r19, 0x00	; 0
    1634:	40 e2       	ldi	r20, 0x20	; 32
    1636:	51 e4       	ldi	r21, 0x41	; 65
    1638:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    163c:	dc 01       	movw	r26, r24
    163e:	cb 01       	movw	r24, r22
    1640:	bc 01       	movw	r22, r24
    1642:	cd 01       	movw	r24, r26
    1644:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1648:	dc 01       	movw	r26, r24
    164a:	cb 01       	movw	r24, r22
    164c:	9c 8b       	std	Y+20, r25	; 0x14
    164e:	8b 8b       	std	Y+19, r24	; 0x13
    1650:	0f c0       	rjmp	.+30     	; 0x1670 <LCD_displayCharacter+0x2c2>
    1652:	89 e1       	ldi	r24, 0x19	; 25
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	9a 8b       	std	Y+18, r25	; 0x12
    1658:	89 8b       	std	Y+17, r24	; 0x11
    165a:	89 89       	ldd	r24, Y+17	; 0x11
    165c:	9a 89       	ldd	r25, Y+18	; 0x12
    165e:	01 97       	sbiw	r24, 0x01	; 1
    1660:	f1 f7       	brne	.-4      	; 0x165e <LCD_displayCharacter+0x2b0>
    1662:	9a 8b       	std	Y+18, r25	; 0x12
    1664:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1666:	8b 89       	ldd	r24, Y+19	; 0x13
    1668:	9c 89       	ldd	r25, Y+20	; 0x14
    166a:	01 97       	sbiw	r24, 0x01	; 1
    166c:	9c 8b       	std	Y+20, r25	; 0x14
    166e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1670:	8b 89       	ldd	r24, Y+19	; 0x13
    1672:	9c 89       	ldd	r25, Y+20	; 0x14
    1674:	00 97       	sbiw	r24, 0x00	; 0
    1676:	69 f7       	brne	.-38     	; 0x1652 <LCD_displayCharacter+0x2a4>
    1678:	14 c0       	rjmp	.+40     	; 0x16a2 <LCD_displayCharacter+0x2f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    167a:	6d 89       	ldd	r22, Y+21	; 0x15
    167c:	7e 89       	ldd	r23, Y+22	; 0x16
    167e:	8f 89       	ldd	r24, Y+23	; 0x17
    1680:	98 8d       	ldd	r25, Y+24	; 0x18
    1682:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1686:	dc 01       	movw	r26, r24
    1688:	cb 01       	movw	r24, r22
    168a:	9c 8b       	std	Y+20, r25	; 0x14
    168c:	8b 8b       	std	Y+19, r24	; 0x13
    168e:	8b 89       	ldd	r24, Y+19	; 0x13
    1690:	9c 89       	ldd	r25, Y+20	; 0x14
    1692:	98 8b       	std	Y+16, r25	; 0x10
    1694:	8f 87       	std	Y+15, r24	; 0x0f
    1696:	8f 85       	ldd	r24, Y+15	; 0x0f
    1698:	98 89       	ldd	r25, Y+16	; 0x10
    169a:	01 97       	sbiw	r24, 0x01	; 1
    169c:	f1 f7       	brne	.-4      	; 0x169a <LCD_displayCharacter+0x2ec>
    169e:	98 8b       	std	Y+16, r25	; 0x10
    16a0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	CLEAR_BIT(LCD_CTR_PORT,E); //clear enable
    16a2:	ab e3       	ldi	r26, 0x3B	; 59
    16a4:	b0 e0       	ldi	r27, 0x00	; 0
    16a6:	eb e3       	ldi	r30, 0x3B	; 59
    16a8:	f0 e0       	ldi	r31, 0x00	; 0
    16aa:	80 81       	ld	r24, Z
    16ac:	8e 7f       	andi	r24, 0xFE	; 254
    16ae:	8c 93       	st	X, r24
    16b0:	80 e0       	ldi	r24, 0x00	; 0
    16b2:	90 e0       	ldi	r25, 0x00	; 0
    16b4:	a0 e8       	ldi	r26, 0x80	; 128
    16b6:	bf e3       	ldi	r27, 0x3F	; 63
    16b8:	8b 87       	std	Y+11, r24	; 0x0b
    16ba:	9c 87       	std	Y+12, r25	; 0x0c
    16bc:	ad 87       	std	Y+13, r26	; 0x0d
    16be:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16c0:	6b 85       	ldd	r22, Y+11	; 0x0b
    16c2:	7c 85       	ldd	r23, Y+12	; 0x0c
    16c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    16c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    16c8:	20 e0       	ldi	r18, 0x00	; 0
    16ca:	30 e0       	ldi	r19, 0x00	; 0
    16cc:	4a e7       	ldi	r20, 0x7A	; 122
    16ce:	53 e4       	ldi	r21, 0x43	; 67
    16d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16d4:	dc 01       	movw	r26, r24
    16d6:	cb 01       	movw	r24, r22
    16d8:	8f 83       	std	Y+7, r24	; 0x07
    16da:	98 87       	std	Y+8, r25	; 0x08
    16dc:	a9 87       	std	Y+9, r26	; 0x09
    16de:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    16e0:	6f 81       	ldd	r22, Y+7	; 0x07
    16e2:	78 85       	ldd	r23, Y+8	; 0x08
    16e4:	89 85       	ldd	r24, Y+9	; 0x09
    16e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    16e8:	20 e0       	ldi	r18, 0x00	; 0
    16ea:	30 e0       	ldi	r19, 0x00	; 0
    16ec:	40 e8       	ldi	r20, 0x80	; 128
    16ee:	5f e3       	ldi	r21, 0x3F	; 63
    16f0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16f4:	88 23       	and	r24, r24
    16f6:	2c f4       	brge	.+10     	; 0x1702 <LCD_displayCharacter+0x354>
		__ticks = 1;
    16f8:	81 e0       	ldi	r24, 0x01	; 1
    16fa:	90 e0       	ldi	r25, 0x00	; 0
    16fc:	9e 83       	std	Y+6, r25	; 0x06
    16fe:	8d 83       	std	Y+5, r24	; 0x05
    1700:	3f c0       	rjmp	.+126    	; 0x1780 <LCD_displayCharacter+0x3d2>
	else if (__tmp > 65535)
    1702:	6f 81       	ldd	r22, Y+7	; 0x07
    1704:	78 85       	ldd	r23, Y+8	; 0x08
    1706:	89 85       	ldd	r24, Y+9	; 0x09
    1708:	9a 85       	ldd	r25, Y+10	; 0x0a
    170a:	20 e0       	ldi	r18, 0x00	; 0
    170c:	3f ef       	ldi	r19, 0xFF	; 255
    170e:	4f e7       	ldi	r20, 0x7F	; 127
    1710:	57 e4       	ldi	r21, 0x47	; 71
    1712:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1716:	18 16       	cp	r1, r24
    1718:	4c f5       	brge	.+82     	; 0x176c <LCD_displayCharacter+0x3be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    171a:	6b 85       	ldd	r22, Y+11	; 0x0b
    171c:	7c 85       	ldd	r23, Y+12	; 0x0c
    171e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1720:	9e 85       	ldd	r25, Y+14	; 0x0e
    1722:	20 e0       	ldi	r18, 0x00	; 0
    1724:	30 e0       	ldi	r19, 0x00	; 0
    1726:	40 e2       	ldi	r20, 0x20	; 32
    1728:	51 e4       	ldi	r21, 0x41	; 65
    172a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    172e:	dc 01       	movw	r26, r24
    1730:	cb 01       	movw	r24, r22
    1732:	bc 01       	movw	r22, r24
    1734:	cd 01       	movw	r24, r26
    1736:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    173a:	dc 01       	movw	r26, r24
    173c:	cb 01       	movw	r24, r22
    173e:	9e 83       	std	Y+6, r25	; 0x06
    1740:	8d 83       	std	Y+5, r24	; 0x05
    1742:	0f c0       	rjmp	.+30     	; 0x1762 <LCD_displayCharacter+0x3b4>
    1744:	89 e1       	ldi	r24, 0x19	; 25
    1746:	90 e0       	ldi	r25, 0x00	; 0
    1748:	9c 83       	std	Y+4, r25	; 0x04
    174a:	8b 83       	std	Y+3, r24	; 0x03
    174c:	8b 81       	ldd	r24, Y+3	; 0x03
    174e:	9c 81       	ldd	r25, Y+4	; 0x04
    1750:	01 97       	sbiw	r24, 0x01	; 1
    1752:	f1 f7       	brne	.-4      	; 0x1750 <LCD_displayCharacter+0x3a2>
    1754:	9c 83       	std	Y+4, r25	; 0x04
    1756:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1758:	8d 81       	ldd	r24, Y+5	; 0x05
    175a:	9e 81       	ldd	r25, Y+6	; 0x06
    175c:	01 97       	sbiw	r24, 0x01	; 1
    175e:	9e 83       	std	Y+6, r25	; 0x06
    1760:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1762:	8d 81       	ldd	r24, Y+5	; 0x05
    1764:	9e 81       	ldd	r25, Y+6	; 0x06
    1766:	00 97       	sbiw	r24, 0x00	; 0
    1768:	69 f7       	brne	.-38     	; 0x1744 <LCD_displayCharacter+0x396>
    176a:	14 c0       	rjmp	.+40     	; 0x1794 <LCD_displayCharacter+0x3e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    176c:	6f 81       	ldd	r22, Y+7	; 0x07
    176e:	78 85       	ldd	r23, Y+8	; 0x08
    1770:	89 85       	ldd	r24, Y+9	; 0x09
    1772:	9a 85       	ldd	r25, Y+10	; 0x0a
    1774:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1778:	dc 01       	movw	r26, r24
    177a:	cb 01       	movw	r24, r22
    177c:	9e 83       	std	Y+6, r25	; 0x06
    177e:	8d 83       	std	Y+5, r24	; 0x05
    1780:	8d 81       	ldd	r24, Y+5	; 0x05
    1782:	9e 81       	ldd	r25, Y+6	; 0x06
    1784:	9a 83       	std	Y+2, r25	; 0x02
    1786:	89 83       	std	Y+1, r24	; 0x01
    1788:	89 81       	ldd	r24, Y+1	; 0x01
    178a:	9a 81       	ldd	r25, Y+2	; 0x02
    178c:	01 97       	sbiw	r24, 0x01	; 1
    178e:	f1 f7       	brne	.-4      	; 0x178c <LCD_displayCharacter+0x3de>
    1790:	9a 83       	std	Y+2, r25	; 0x02
    1792:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);

}
    1794:	e9 96       	adiw	r28, 0x39	; 57
    1796:	0f b6       	in	r0, 0x3f	; 63
    1798:	f8 94       	cli
    179a:	de bf       	out	0x3e, r29	; 62
    179c:	0f be       	out	0x3f, r0	; 63
    179e:	cd bf       	out	0x3d, r28	; 61
    17a0:	cf 91       	pop	r28
    17a2:	df 91       	pop	r29
    17a4:	08 95       	ret

000017a6 <LCD_displayString>:

void LCD_displayString(const char *str){
    17a6:	df 93       	push	r29
    17a8:	cf 93       	push	r28
    17aa:	00 d0       	rcall	.+0      	; 0x17ac <LCD_displayString+0x6>
    17ac:	0f 92       	push	r0
    17ae:	cd b7       	in	r28, 0x3d	; 61
    17b0:	de b7       	in	r29, 0x3e	; 62
    17b2:	9b 83       	std	Y+3, r25	; 0x03
    17b4:	8a 83       	std	Y+2, r24	; 0x02
    17b6:	0e c0       	rjmp	.+28     	; 0x17d4 <LCD_displayString+0x2e>
	uint8 i;
	while(str[i]!='\0'){
		LCD_displayCharacter(str[i]);
    17b8:	89 81       	ldd	r24, Y+1	; 0x01
    17ba:	28 2f       	mov	r18, r24
    17bc:	30 e0       	ldi	r19, 0x00	; 0
    17be:	8a 81       	ldd	r24, Y+2	; 0x02
    17c0:	9b 81       	ldd	r25, Y+3	; 0x03
    17c2:	fc 01       	movw	r30, r24
    17c4:	e2 0f       	add	r30, r18
    17c6:	f3 1f       	adc	r31, r19
    17c8:	80 81       	ld	r24, Z
    17ca:	0e 94 d7 09 	call	0x13ae	; 0x13ae <LCD_displayCharacter>
		i++;
    17ce:	89 81       	ldd	r24, Y+1	; 0x01
    17d0:	8f 5f       	subi	r24, 0xFF	; 255
    17d2:	89 83       	std	Y+1, r24	; 0x01

}

void LCD_displayString(const char *str){
	uint8 i;
	while(str[i]!='\0'){
    17d4:	89 81       	ldd	r24, Y+1	; 0x01
    17d6:	28 2f       	mov	r18, r24
    17d8:	30 e0       	ldi	r19, 0x00	; 0
    17da:	8a 81       	ldd	r24, Y+2	; 0x02
    17dc:	9b 81       	ldd	r25, Y+3	; 0x03
    17de:	fc 01       	movw	r30, r24
    17e0:	e2 0f       	add	r30, r18
    17e2:	f3 1f       	adc	r31, r19
    17e4:	80 81       	ld	r24, Z
    17e6:	88 23       	and	r24, r24
    17e8:	39 f7       	brne	.-50     	; 0x17b8 <LCD_displayString+0x12>
		LCD_displayCharacter(str[i]);
		i++;
	}
}
    17ea:	0f 90       	pop	r0
    17ec:	0f 90       	pop	r0
    17ee:	0f 90       	pop	r0
    17f0:	cf 91       	pop	r28
    17f2:	df 91       	pop	r29
    17f4:	08 95       	ret

000017f6 <LCD_goToRowColumn>:


void LCD_goToRowColumn(uint8 row , uint8 col){
    17f6:	df 93       	push	r29
    17f8:	cf 93       	push	r28
    17fa:	00 d0       	rcall	.+0      	; 0x17fc <LCD_goToRowColumn+0x6>
    17fc:	00 d0       	rcall	.+0      	; 0x17fe <LCD_goToRowColumn+0x8>
    17fe:	0f 92       	push	r0
    1800:	cd b7       	in	r28, 0x3d	; 61
    1802:	de b7       	in	r29, 0x3e	; 62
    1804:	8a 83       	std	Y+2, r24	; 0x02
    1806:	6b 83       	std	Y+3, r22	; 0x03
	uint8 address;
	switch(row){
    1808:	8a 81       	ldd	r24, Y+2	; 0x02
    180a:	28 2f       	mov	r18, r24
    180c:	30 e0       	ldi	r19, 0x00	; 0
    180e:	3d 83       	std	Y+5, r19	; 0x05
    1810:	2c 83       	std	Y+4, r18	; 0x04
    1812:	8c 81       	ldd	r24, Y+4	; 0x04
    1814:	9d 81       	ldd	r25, Y+5	; 0x05
    1816:	81 30       	cpi	r24, 0x01	; 1
    1818:	91 05       	cpc	r25, r1
    181a:	c1 f0       	breq	.+48     	; 0x184c <LCD_goToRowColumn+0x56>
    181c:	2c 81       	ldd	r18, Y+4	; 0x04
    181e:	3d 81       	ldd	r19, Y+5	; 0x05
    1820:	22 30       	cpi	r18, 0x02	; 2
    1822:	31 05       	cpc	r19, r1
    1824:	2c f4       	brge	.+10     	; 0x1830 <LCD_goToRowColumn+0x3a>
    1826:	8c 81       	ldd	r24, Y+4	; 0x04
    1828:	9d 81       	ldd	r25, Y+5	; 0x05
    182a:	00 97       	sbiw	r24, 0x00	; 0
    182c:	61 f0       	breq	.+24     	; 0x1846 <LCD_goToRowColumn+0x50>
    182e:	19 c0       	rjmp	.+50     	; 0x1862 <LCD_goToRowColumn+0x6c>
    1830:	2c 81       	ldd	r18, Y+4	; 0x04
    1832:	3d 81       	ldd	r19, Y+5	; 0x05
    1834:	22 30       	cpi	r18, 0x02	; 2
    1836:	31 05       	cpc	r19, r1
    1838:	69 f0       	breq	.+26     	; 0x1854 <LCD_goToRowColumn+0x5e>
    183a:	8c 81       	ldd	r24, Y+4	; 0x04
    183c:	9d 81       	ldd	r25, Y+5	; 0x05
    183e:	83 30       	cpi	r24, 0x03	; 3
    1840:	91 05       	cpc	r25, r1
    1842:	61 f0       	breq	.+24     	; 0x185c <LCD_goToRowColumn+0x66>
    1844:	0e c0       	rjmp	.+28     	; 0x1862 <LCD_goToRowColumn+0x6c>
	case 0 :
		address = col;
    1846:	8b 81       	ldd	r24, Y+3	; 0x03
    1848:	89 83       	std	Y+1, r24	; 0x01
    184a:	0b c0       	rjmp	.+22     	; 0x1862 <LCD_goToRowColumn+0x6c>
		break;
	case 1 :
		address = col+0x40;
    184c:	8b 81       	ldd	r24, Y+3	; 0x03
    184e:	80 5c       	subi	r24, 0xC0	; 192
    1850:	89 83       	std	Y+1, r24	; 0x01
    1852:	07 c0       	rjmp	.+14     	; 0x1862 <LCD_goToRowColumn+0x6c>
		break;
	case 2 :
		address = col+0x10;
    1854:	8b 81       	ldd	r24, Y+3	; 0x03
    1856:	80 5f       	subi	r24, 0xF0	; 240
    1858:	89 83       	std	Y+1, r24	; 0x01
    185a:	03 c0       	rjmp	.+6      	; 0x1862 <LCD_goToRowColumn+0x6c>
		break;
	case 3 :
		address = col+0x50;
    185c:	8b 81       	ldd	r24, Y+3	; 0x03
    185e:	80 5b       	subi	r24, 0xB0	; 176
    1860:	89 83       	std	Y+1, r24	; 0x01
	}

	LCD_sendCommand(address | SET_CURSOR_AT_FIRST);
    1862:	89 81       	ldd	r24, Y+1	; 0x01
    1864:	80 68       	ori	r24, 0x80	; 128
    1866:	0e 94 db 07 	call	0xfb6	; 0xfb6 <LCD_sendCommand>

}
    186a:	0f 90       	pop	r0
    186c:	0f 90       	pop	r0
    186e:	0f 90       	pop	r0
    1870:	0f 90       	pop	r0
    1872:	0f 90       	pop	r0
    1874:	cf 91       	pop	r28
    1876:	df 91       	pop	r29
    1878:	08 95       	ret

0000187a <LCD_displayStringRowColumn>:

void LCD_displayStringRowColumn(uint8 row , uint8 col , const char *str){
    187a:	df 93       	push	r29
    187c:	cf 93       	push	r28
    187e:	00 d0       	rcall	.+0      	; 0x1880 <LCD_displayStringRowColumn+0x6>
    1880:	00 d0       	rcall	.+0      	; 0x1882 <LCD_displayStringRowColumn+0x8>
    1882:	cd b7       	in	r28, 0x3d	; 61
    1884:	de b7       	in	r29, 0x3e	; 62
    1886:	89 83       	std	Y+1, r24	; 0x01
    1888:	6a 83       	std	Y+2, r22	; 0x02
    188a:	5c 83       	std	Y+4, r21	; 0x04
    188c:	4b 83       	std	Y+3, r20	; 0x03

	LCD_goToRowColumn(row , col);
    188e:	89 81       	ldd	r24, Y+1	; 0x01
    1890:	6a 81       	ldd	r22, Y+2	; 0x02
    1892:	0e 94 fb 0b 	call	0x17f6	; 0x17f6 <LCD_goToRowColumn>
	LCD_displayString(str);
    1896:	8b 81       	ldd	r24, Y+3	; 0x03
    1898:	9c 81       	ldd	r25, Y+4	; 0x04
    189a:	0e 94 d3 0b 	call	0x17a6	; 0x17a6 <LCD_displayString>

}
    189e:	0f 90       	pop	r0
    18a0:	0f 90       	pop	r0
    18a2:	0f 90       	pop	r0
    18a4:	0f 90       	pop	r0
    18a6:	cf 91       	pop	r28
    18a8:	df 91       	pop	r29
    18aa:	08 95       	ret

000018ac <LCD_intToStr>:



void LCD_intToStr(int data){
    18ac:	df 93       	push	r29
    18ae:	cf 93       	push	r28
    18b0:	cd b7       	in	r28, 0x3d	; 61
    18b2:	de b7       	in	r29, 0x3e	; 62
    18b4:	62 97       	sbiw	r28, 0x12	; 18
    18b6:	0f b6       	in	r0, 0x3f	; 63
    18b8:	f8 94       	cli
    18ba:	de bf       	out	0x3e, r29	; 62
    18bc:	0f be       	out	0x3f, r0	; 63
    18be:	cd bf       	out	0x3d, r28	; 61
    18c0:	9a 8b       	std	Y+18, r25	; 0x12
    18c2:	89 8b       	std	Y+17, r24	; 0x11
	char buff[16];
	itoa(data,buff,10);
    18c4:	89 89       	ldd	r24, Y+17	; 0x11
    18c6:	9a 89       	ldd	r25, Y+18	; 0x12
    18c8:	9e 01       	movw	r18, r28
    18ca:	2f 5f       	subi	r18, 0xFF	; 255
    18cc:	3f 4f       	sbci	r19, 0xFF	; 255
    18ce:	b9 01       	movw	r22, r18
    18d0:	4a e0       	ldi	r20, 0x0A	; 10
    18d2:	50 e0       	ldi	r21, 0x00	; 0
    18d4:	0e 94 ef 2b 	call	0x57de	; 0x57de <itoa>
	LCD_displayString(buff);
    18d8:	ce 01       	movw	r24, r28
    18da:	01 96       	adiw	r24, 0x01	; 1
    18dc:	0e 94 d3 0b 	call	0x17a6	; 0x17a6 <LCD_displayString>
}
    18e0:	62 96       	adiw	r28, 0x12	; 18
    18e2:	0f b6       	in	r0, 0x3f	; 63
    18e4:	f8 94       	cli
    18e6:	de bf       	out	0x3e, r29	; 62
    18e8:	0f be       	out	0x3f, r0	; 63
    18ea:	cd bf       	out	0x3d, r28	; 61
    18ec:	cf 91       	pop	r28
    18ee:	df 91       	pop	r29
    18f0:	08 95       	ret

000018f2 <LCD_clearScreen>:

void LCD_clearScreen(void){
    18f2:	df 93       	push	r29
    18f4:	cf 93       	push	r28
    18f6:	cd b7       	in	r28, 0x3d	; 61
    18f8:	de b7       	in	r29, 0x3e	; 62
	LCD_sendCommand(CLEAR_SCREEN);
    18fa:	81 e0       	ldi	r24, 0x01	; 1
    18fc:	0e 94 db 07 	call	0xfb6	; 0xfb6 <LCD_sendCommand>
}
    1900:	cf 91       	pop	r28
    1902:	df 91       	pop	r29
    1904:	08 95       	ret

00001906 <PWM_Timer0_Init>:
#include"lcd.h"
#include"keypad.h"



	void PWM_Timer0_Init(unsigned char set_duty_cycle){
    1906:	df 93       	push	r29
    1908:	cf 93       	push	r28
    190a:	0f 92       	push	r0
    190c:	cd b7       	in	r28, 0x3d	; 61
    190e:	de b7       	in	r29, 0x3e	; 62
    1910:	89 83       	std	Y+1, r24	; 0x01

		TCNT0 = 0; //initial timer value
    1912:	e2 e5       	ldi	r30, 0x52	; 82
    1914:	f0 e0       	ldi	r31, 0x00	; 0
    1916:	10 82       	st	Z, r1

		OCR0  = set_duty_cycle;
    1918:	ec e5       	ldi	r30, 0x5C	; 92
    191a:	f0 e0       	ldi	r31, 0x00	; 0
    191c:	89 81       	ldd	r24, Y+1	; 0x01
    191e:	80 83       	st	Z, r24

		DDRB  = DDRB | (1<<PB3); //set OC0 as output pin --> pin where the PWM signal is generated from MC.
    1920:	a7 e3       	ldi	r26, 0x37	; 55
    1922:	b0 e0       	ldi	r27, 0x00	; 0
    1924:	e7 e3       	ldi	r30, 0x37	; 55
    1926:	f0 e0       	ldi	r31, 0x00	; 0
    1928:	80 81       	ld	r24, Z
    192a:	88 60       	ori	r24, 0x08	; 8
    192c:	8c 93       	st	X, r24
		 * 1. Fast PWM mode FOC0=0
		 * 2. Fast PWM Mode WGM01=1 & WGM00=1
		 * 3. Clear OC0 when match occurs (non inverted mode) COM00=0 & COM01=1
		 * 4. clock = F_CPU/8 CS00=0 CS01=1 CS02=0
		 */
		TCCR0 = (1<<WGM00) | (1<<WGM01) | (1<<COM01) | (1<<CS01);
    192e:	e3 e5       	ldi	r30, 0x53	; 83
    1930:	f0 e0       	ldi	r31, 0x00	; 0
    1932:	8a e6       	ldi	r24, 0x6A	; 106
    1934:	80 83       	st	Z, r24
	}
    1936:	0f 90       	pop	r0
    1938:	cf 91       	pop	r28
    193a:	df 91       	pop	r29
    193c:	08 95       	ret

0000193e <main>:

int main(void){
    193e:	0f 93       	push	r16
    1940:	1f 93       	push	r17
    1942:	df 93       	push	r29
    1944:	cf 93       	push	r28
    1946:	cd b7       	in	r28, 0x3d	; 61
    1948:	de b7       	in	r29, 0x3e	; 62
    194a:	cd 55       	subi	r28, 0x5D	; 93
    194c:	d2 40       	sbci	r29, 0x02	; 2
    194e:	0f b6       	in	r0, 0x3f	; 63
    1950:	f8 94       	cli
    1952:	de bf       	out	0x3e, r29	; 62
    1954:	0f be       	out	0x3f, r0	; 63
    1956:	cd bf       	out	0x3d, r28	; 61

	/*  functions initialize */

	UART_init();
    1958:	0e 94 97 2a 	call	0x552e	; 0x552e <UART_init>
	EEPROM_init();
    195c:	0e 94 9b 05 	call	0xb36	; 0xb36 <EEPROM_init>


	/* buzzer bin */
    DDRD|=(1<<PD7);
    1960:	a1 e3       	ldi	r26, 0x31	; 49
    1962:	b0 e0       	ldi	r27, 0x00	; 0
    1964:	e1 e3       	ldi	r30, 0x31	; 49
    1966:	f0 e0       	ldi	r31, 0x00	; 0
    1968:	80 81       	ld	r24, Z
    196a:	80 68       	ori	r24, 0x80	; 128
    196c:	8c 93       	st	X, r24

	uint8 x1,x2,x3,x4,x5,x6,x7,x8;
	uint8 s1, s2, s3, s4, s5, s6, s7, s8;

/****************************************************************/
    uint8 m = 0 ;
    196e:	fe 01       	movw	r30, r28
    1970:	e3 5b       	subi	r30, 0xB3	; 179
    1972:	fd 4f       	sbci	r31, 0xFD	; 253
    1974:	10 82       	st	Z, r1

	    /******************************************/
		/****read the last password from EEPROM****/
		/******************************************/

		    EEPROM_readByte(0x01,&x1);
    1976:	9e 01       	movw	r18, r28
    1978:	2a 5a       	subi	r18, 0xAA	; 170
    197a:	3d 4f       	sbci	r19, 0xFD	; 253
    197c:	81 e0       	ldi	r24, 0x01	; 1
    197e:	90 e0       	ldi	r25, 0x00	; 0
    1980:	b9 01       	movw	r22, r18
    1982:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    1986:	fe 01       	movw	r30, r28
    1988:	e7 5b       	subi	r30, 0xB7	; 183
    198a:	fd 4f       	sbci	r31, 0xFD	; 253
    198c:	80 e0       	ldi	r24, 0x00	; 0
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	a0 e2       	ldi	r26, 0x20	; 32
    1992:	b1 e4       	ldi	r27, 0x41	; 65
    1994:	80 83       	st	Z, r24
    1996:	91 83       	std	Z+1, r25	; 0x01
    1998:	a2 83       	std	Z+2, r26	; 0x02
    199a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    199c:	8e 01       	movw	r16, r28
    199e:	0b 5b       	subi	r16, 0xBB	; 187
    19a0:	1d 4f       	sbci	r17, 0xFD	; 253
    19a2:	fe 01       	movw	r30, r28
    19a4:	e7 5b       	subi	r30, 0xB7	; 183
    19a6:	fd 4f       	sbci	r31, 0xFD	; 253
    19a8:	60 81       	ld	r22, Z
    19aa:	71 81       	ldd	r23, Z+1	; 0x01
    19ac:	82 81       	ldd	r24, Z+2	; 0x02
    19ae:	93 81       	ldd	r25, Z+3	; 0x03
    19b0:	20 e0       	ldi	r18, 0x00	; 0
    19b2:	30 e0       	ldi	r19, 0x00	; 0
    19b4:	4a e7       	ldi	r20, 0x7A	; 122
    19b6:	53 e4       	ldi	r21, 0x43	; 67
    19b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19bc:	dc 01       	movw	r26, r24
    19be:	cb 01       	movw	r24, r22
    19c0:	f8 01       	movw	r30, r16
    19c2:	80 83       	st	Z, r24
    19c4:	91 83       	std	Z+1, r25	; 0x01
    19c6:	a2 83       	std	Z+2, r26	; 0x02
    19c8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19ca:	fe 01       	movw	r30, r28
    19cc:	eb 5b       	subi	r30, 0xBB	; 187
    19ce:	fd 4f       	sbci	r31, 0xFD	; 253
    19d0:	60 81       	ld	r22, Z
    19d2:	71 81       	ldd	r23, Z+1	; 0x01
    19d4:	82 81       	ldd	r24, Z+2	; 0x02
    19d6:	93 81       	ldd	r25, Z+3	; 0x03
    19d8:	20 e0       	ldi	r18, 0x00	; 0
    19da:	30 e0       	ldi	r19, 0x00	; 0
    19dc:	40 e8       	ldi	r20, 0x80	; 128
    19de:	5f e3       	ldi	r21, 0x3F	; 63
    19e0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    19e4:	88 23       	and	r24, r24
    19e6:	44 f4       	brge	.+16     	; 0x19f8 <main+0xba>
		__ticks = 1;
    19e8:	fe 01       	movw	r30, r28
    19ea:	ed 5b       	subi	r30, 0xBD	; 189
    19ec:	fd 4f       	sbci	r31, 0xFD	; 253
    19ee:	81 e0       	ldi	r24, 0x01	; 1
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	91 83       	std	Z+1, r25	; 0x01
    19f4:	80 83       	st	Z, r24
    19f6:	64 c0       	rjmp	.+200    	; 0x1ac0 <main+0x182>
	else if (__tmp > 65535)
    19f8:	fe 01       	movw	r30, r28
    19fa:	eb 5b       	subi	r30, 0xBB	; 187
    19fc:	fd 4f       	sbci	r31, 0xFD	; 253
    19fe:	60 81       	ld	r22, Z
    1a00:	71 81       	ldd	r23, Z+1	; 0x01
    1a02:	82 81       	ldd	r24, Z+2	; 0x02
    1a04:	93 81       	ldd	r25, Z+3	; 0x03
    1a06:	20 e0       	ldi	r18, 0x00	; 0
    1a08:	3f ef       	ldi	r19, 0xFF	; 255
    1a0a:	4f e7       	ldi	r20, 0x7F	; 127
    1a0c:	57 e4       	ldi	r21, 0x47	; 71
    1a0e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1a12:	18 16       	cp	r1, r24
    1a14:	0c f0       	brlt	.+2      	; 0x1a18 <main+0xda>
    1a16:	43 c0       	rjmp	.+134    	; 0x1a9e <main+0x160>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a18:	fe 01       	movw	r30, r28
    1a1a:	e7 5b       	subi	r30, 0xB7	; 183
    1a1c:	fd 4f       	sbci	r31, 0xFD	; 253
    1a1e:	60 81       	ld	r22, Z
    1a20:	71 81       	ldd	r23, Z+1	; 0x01
    1a22:	82 81       	ldd	r24, Z+2	; 0x02
    1a24:	93 81       	ldd	r25, Z+3	; 0x03
    1a26:	20 e0       	ldi	r18, 0x00	; 0
    1a28:	30 e0       	ldi	r19, 0x00	; 0
    1a2a:	40 e2       	ldi	r20, 0x20	; 32
    1a2c:	51 e4       	ldi	r21, 0x41	; 65
    1a2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a32:	dc 01       	movw	r26, r24
    1a34:	cb 01       	movw	r24, r22
    1a36:	8e 01       	movw	r16, r28
    1a38:	0d 5b       	subi	r16, 0xBD	; 189
    1a3a:	1d 4f       	sbci	r17, 0xFD	; 253
    1a3c:	bc 01       	movw	r22, r24
    1a3e:	cd 01       	movw	r24, r26
    1a40:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a44:	dc 01       	movw	r26, r24
    1a46:	cb 01       	movw	r24, r22
    1a48:	f8 01       	movw	r30, r16
    1a4a:	91 83       	std	Z+1, r25	; 0x01
    1a4c:	80 83       	st	Z, r24
    1a4e:	1f c0       	rjmp	.+62     	; 0x1a8e <main+0x150>
    1a50:	fe 01       	movw	r30, r28
    1a52:	ef 5b       	subi	r30, 0xBF	; 191
    1a54:	fd 4f       	sbci	r31, 0xFD	; 253
    1a56:	89 e1       	ldi	r24, 0x19	; 25
    1a58:	90 e0       	ldi	r25, 0x00	; 0
    1a5a:	91 83       	std	Z+1, r25	; 0x01
    1a5c:	80 83       	st	Z, r24
    1a5e:	fe 01       	movw	r30, r28
    1a60:	ef 5b       	subi	r30, 0xBF	; 191
    1a62:	fd 4f       	sbci	r31, 0xFD	; 253
    1a64:	80 81       	ld	r24, Z
    1a66:	91 81       	ldd	r25, Z+1	; 0x01
    1a68:	01 97       	sbiw	r24, 0x01	; 1
    1a6a:	f1 f7       	brne	.-4      	; 0x1a68 <main+0x12a>
    1a6c:	fe 01       	movw	r30, r28
    1a6e:	ef 5b       	subi	r30, 0xBF	; 191
    1a70:	fd 4f       	sbci	r31, 0xFD	; 253
    1a72:	91 83       	std	Z+1, r25	; 0x01
    1a74:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a76:	de 01       	movw	r26, r28
    1a78:	ad 5b       	subi	r26, 0xBD	; 189
    1a7a:	bd 4f       	sbci	r27, 0xFD	; 253
    1a7c:	fe 01       	movw	r30, r28
    1a7e:	ed 5b       	subi	r30, 0xBD	; 189
    1a80:	fd 4f       	sbci	r31, 0xFD	; 253
    1a82:	80 81       	ld	r24, Z
    1a84:	91 81       	ldd	r25, Z+1	; 0x01
    1a86:	01 97       	sbiw	r24, 0x01	; 1
    1a88:	11 96       	adiw	r26, 0x01	; 1
    1a8a:	9c 93       	st	X, r25
    1a8c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a8e:	fe 01       	movw	r30, r28
    1a90:	ed 5b       	subi	r30, 0xBD	; 189
    1a92:	fd 4f       	sbci	r31, 0xFD	; 253
    1a94:	80 81       	ld	r24, Z
    1a96:	91 81       	ldd	r25, Z+1	; 0x01
    1a98:	00 97       	sbiw	r24, 0x00	; 0
    1a9a:	d1 f6       	brne	.-76     	; 0x1a50 <main+0x112>
    1a9c:	27 c0       	rjmp	.+78     	; 0x1aec <main+0x1ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a9e:	8e 01       	movw	r16, r28
    1aa0:	0d 5b       	subi	r16, 0xBD	; 189
    1aa2:	1d 4f       	sbci	r17, 0xFD	; 253
    1aa4:	fe 01       	movw	r30, r28
    1aa6:	eb 5b       	subi	r30, 0xBB	; 187
    1aa8:	fd 4f       	sbci	r31, 0xFD	; 253
    1aaa:	60 81       	ld	r22, Z
    1aac:	71 81       	ldd	r23, Z+1	; 0x01
    1aae:	82 81       	ldd	r24, Z+2	; 0x02
    1ab0:	93 81       	ldd	r25, Z+3	; 0x03
    1ab2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ab6:	dc 01       	movw	r26, r24
    1ab8:	cb 01       	movw	r24, r22
    1aba:	f8 01       	movw	r30, r16
    1abc:	91 83       	std	Z+1, r25	; 0x01
    1abe:	80 83       	st	Z, r24
    1ac0:	de 01       	movw	r26, r28
    1ac2:	a1 5c       	subi	r26, 0xC1	; 193
    1ac4:	bd 4f       	sbci	r27, 0xFD	; 253
    1ac6:	fe 01       	movw	r30, r28
    1ac8:	ed 5b       	subi	r30, 0xBD	; 189
    1aca:	fd 4f       	sbci	r31, 0xFD	; 253
    1acc:	80 81       	ld	r24, Z
    1ace:	91 81       	ldd	r25, Z+1	; 0x01
    1ad0:	8d 93       	st	X+, r24
    1ad2:	9c 93       	st	X, r25
    1ad4:	fe 01       	movw	r30, r28
    1ad6:	e1 5c       	subi	r30, 0xC1	; 193
    1ad8:	fd 4f       	sbci	r31, 0xFD	; 253
    1ada:	80 81       	ld	r24, Z
    1adc:	91 81       	ldd	r25, Z+1	; 0x01
    1ade:	01 97       	sbiw	r24, 0x01	; 1
    1ae0:	f1 f7       	brne	.-4      	; 0x1ade <main+0x1a0>
    1ae2:	fe 01       	movw	r30, r28
    1ae4:	e1 5c       	subi	r30, 0xC1	; 193
    1ae6:	fd 4f       	sbci	r31, 0xFD	; 253
    1ae8:	91 83       	std	Z+1, r25	; 0x01
    1aea:	80 83       	st	Z, r24
		    _delay_ms(10);
		    EEPROM_readByte(0x02,&x2);
    1aec:	9e 01       	movw	r18, r28
    1aee:	29 5a       	subi	r18, 0xA9	; 169
    1af0:	3d 4f       	sbci	r19, 0xFD	; 253
    1af2:	82 e0       	ldi	r24, 0x02	; 2
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	b9 01       	movw	r22, r18
    1af8:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    1afc:	fe 01       	movw	r30, r28
    1afe:	e5 5c       	subi	r30, 0xC5	; 197
    1b00:	fd 4f       	sbci	r31, 0xFD	; 253
    1b02:	80 e0       	ldi	r24, 0x00	; 0
    1b04:	90 e0       	ldi	r25, 0x00	; 0
    1b06:	a0 e2       	ldi	r26, 0x20	; 32
    1b08:	b1 e4       	ldi	r27, 0x41	; 65
    1b0a:	80 83       	st	Z, r24
    1b0c:	91 83       	std	Z+1, r25	; 0x01
    1b0e:	a2 83       	std	Z+2, r26	; 0x02
    1b10:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b12:	8e 01       	movw	r16, r28
    1b14:	09 5c       	subi	r16, 0xC9	; 201
    1b16:	1d 4f       	sbci	r17, 0xFD	; 253
    1b18:	fe 01       	movw	r30, r28
    1b1a:	e5 5c       	subi	r30, 0xC5	; 197
    1b1c:	fd 4f       	sbci	r31, 0xFD	; 253
    1b1e:	60 81       	ld	r22, Z
    1b20:	71 81       	ldd	r23, Z+1	; 0x01
    1b22:	82 81       	ldd	r24, Z+2	; 0x02
    1b24:	93 81       	ldd	r25, Z+3	; 0x03
    1b26:	20 e0       	ldi	r18, 0x00	; 0
    1b28:	30 e0       	ldi	r19, 0x00	; 0
    1b2a:	4a e7       	ldi	r20, 0x7A	; 122
    1b2c:	53 e4       	ldi	r21, 0x43	; 67
    1b2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b32:	dc 01       	movw	r26, r24
    1b34:	cb 01       	movw	r24, r22
    1b36:	f8 01       	movw	r30, r16
    1b38:	80 83       	st	Z, r24
    1b3a:	91 83       	std	Z+1, r25	; 0x01
    1b3c:	a2 83       	std	Z+2, r26	; 0x02
    1b3e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b40:	fe 01       	movw	r30, r28
    1b42:	e9 5c       	subi	r30, 0xC9	; 201
    1b44:	fd 4f       	sbci	r31, 0xFD	; 253
    1b46:	60 81       	ld	r22, Z
    1b48:	71 81       	ldd	r23, Z+1	; 0x01
    1b4a:	82 81       	ldd	r24, Z+2	; 0x02
    1b4c:	93 81       	ldd	r25, Z+3	; 0x03
    1b4e:	20 e0       	ldi	r18, 0x00	; 0
    1b50:	30 e0       	ldi	r19, 0x00	; 0
    1b52:	40 e8       	ldi	r20, 0x80	; 128
    1b54:	5f e3       	ldi	r21, 0x3F	; 63
    1b56:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b5a:	88 23       	and	r24, r24
    1b5c:	44 f4       	brge	.+16     	; 0x1b6e <main+0x230>
		__ticks = 1;
    1b5e:	fe 01       	movw	r30, r28
    1b60:	eb 5c       	subi	r30, 0xCB	; 203
    1b62:	fd 4f       	sbci	r31, 0xFD	; 253
    1b64:	81 e0       	ldi	r24, 0x01	; 1
    1b66:	90 e0       	ldi	r25, 0x00	; 0
    1b68:	91 83       	std	Z+1, r25	; 0x01
    1b6a:	80 83       	st	Z, r24
    1b6c:	64 c0       	rjmp	.+200    	; 0x1c36 <main+0x2f8>
	else if (__tmp > 65535)
    1b6e:	fe 01       	movw	r30, r28
    1b70:	e9 5c       	subi	r30, 0xC9	; 201
    1b72:	fd 4f       	sbci	r31, 0xFD	; 253
    1b74:	60 81       	ld	r22, Z
    1b76:	71 81       	ldd	r23, Z+1	; 0x01
    1b78:	82 81       	ldd	r24, Z+2	; 0x02
    1b7a:	93 81       	ldd	r25, Z+3	; 0x03
    1b7c:	20 e0       	ldi	r18, 0x00	; 0
    1b7e:	3f ef       	ldi	r19, 0xFF	; 255
    1b80:	4f e7       	ldi	r20, 0x7F	; 127
    1b82:	57 e4       	ldi	r21, 0x47	; 71
    1b84:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b88:	18 16       	cp	r1, r24
    1b8a:	0c f0       	brlt	.+2      	; 0x1b8e <main+0x250>
    1b8c:	43 c0       	rjmp	.+134    	; 0x1c14 <main+0x2d6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b8e:	fe 01       	movw	r30, r28
    1b90:	e5 5c       	subi	r30, 0xC5	; 197
    1b92:	fd 4f       	sbci	r31, 0xFD	; 253
    1b94:	60 81       	ld	r22, Z
    1b96:	71 81       	ldd	r23, Z+1	; 0x01
    1b98:	82 81       	ldd	r24, Z+2	; 0x02
    1b9a:	93 81       	ldd	r25, Z+3	; 0x03
    1b9c:	20 e0       	ldi	r18, 0x00	; 0
    1b9e:	30 e0       	ldi	r19, 0x00	; 0
    1ba0:	40 e2       	ldi	r20, 0x20	; 32
    1ba2:	51 e4       	ldi	r21, 0x41	; 65
    1ba4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ba8:	dc 01       	movw	r26, r24
    1baa:	cb 01       	movw	r24, r22
    1bac:	8e 01       	movw	r16, r28
    1bae:	0b 5c       	subi	r16, 0xCB	; 203
    1bb0:	1d 4f       	sbci	r17, 0xFD	; 253
    1bb2:	bc 01       	movw	r22, r24
    1bb4:	cd 01       	movw	r24, r26
    1bb6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bba:	dc 01       	movw	r26, r24
    1bbc:	cb 01       	movw	r24, r22
    1bbe:	f8 01       	movw	r30, r16
    1bc0:	91 83       	std	Z+1, r25	; 0x01
    1bc2:	80 83       	st	Z, r24
    1bc4:	1f c0       	rjmp	.+62     	; 0x1c04 <main+0x2c6>
    1bc6:	fe 01       	movw	r30, r28
    1bc8:	ed 5c       	subi	r30, 0xCD	; 205
    1bca:	fd 4f       	sbci	r31, 0xFD	; 253
    1bcc:	89 e1       	ldi	r24, 0x19	; 25
    1bce:	90 e0       	ldi	r25, 0x00	; 0
    1bd0:	91 83       	std	Z+1, r25	; 0x01
    1bd2:	80 83       	st	Z, r24
    1bd4:	fe 01       	movw	r30, r28
    1bd6:	ed 5c       	subi	r30, 0xCD	; 205
    1bd8:	fd 4f       	sbci	r31, 0xFD	; 253
    1bda:	80 81       	ld	r24, Z
    1bdc:	91 81       	ldd	r25, Z+1	; 0x01
    1bde:	01 97       	sbiw	r24, 0x01	; 1
    1be0:	f1 f7       	brne	.-4      	; 0x1bde <main+0x2a0>
    1be2:	fe 01       	movw	r30, r28
    1be4:	ed 5c       	subi	r30, 0xCD	; 205
    1be6:	fd 4f       	sbci	r31, 0xFD	; 253
    1be8:	91 83       	std	Z+1, r25	; 0x01
    1bea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bec:	de 01       	movw	r26, r28
    1bee:	ab 5c       	subi	r26, 0xCB	; 203
    1bf0:	bd 4f       	sbci	r27, 0xFD	; 253
    1bf2:	fe 01       	movw	r30, r28
    1bf4:	eb 5c       	subi	r30, 0xCB	; 203
    1bf6:	fd 4f       	sbci	r31, 0xFD	; 253
    1bf8:	80 81       	ld	r24, Z
    1bfa:	91 81       	ldd	r25, Z+1	; 0x01
    1bfc:	01 97       	sbiw	r24, 0x01	; 1
    1bfe:	11 96       	adiw	r26, 0x01	; 1
    1c00:	9c 93       	st	X, r25
    1c02:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c04:	fe 01       	movw	r30, r28
    1c06:	eb 5c       	subi	r30, 0xCB	; 203
    1c08:	fd 4f       	sbci	r31, 0xFD	; 253
    1c0a:	80 81       	ld	r24, Z
    1c0c:	91 81       	ldd	r25, Z+1	; 0x01
    1c0e:	00 97       	sbiw	r24, 0x00	; 0
    1c10:	d1 f6       	brne	.-76     	; 0x1bc6 <main+0x288>
    1c12:	27 c0       	rjmp	.+78     	; 0x1c62 <main+0x324>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c14:	8e 01       	movw	r16, r28
    1c16:	0b 5c       	subi	r16, 0xCB	; 203
    1c18:	1d 4f       	sbci	r17, 0xFD	; 253
    1c1a:	fe 01       	movw	r30, r28
    1c1c:	e9 5c       	subi	r30, 0xC9	; 201
    1c1e:	fd 4f       	sbci	r31, 0xFD	; 253
    1c20:	60 81       	ld	r22, Z
    1c22:	71 81       	ldd	r23, Z+1	; 0x01
    1c24:	82 81       	ldd	r24, Z+2	; 0x02
    1c26:	93 81       	ldd	r25, Z+3	; 0x03
    1c28:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c2c:	dc 01       	movw	r26, r24
    1c2e:	cb 01       	movw	r24, r22
    1c30:	f8 01       	movw	r30, r16
    1c32:	91 83       	std	Z+1, r25	; 0x01
    1c34:	80 83       	st	Z, r24
    1c36:	de 01       	movw	r26, r28
    1c38:	af 5c       	subi	r26, 0xCF	; 207
    1c3a:	bd 4f       	sbci	r27, 0xFD	; 253
    1c3c:	fe 01       	movw	r30, r28
    1c3e:	eb 5c       	subi	r30, 0xCB	; 203
    1c40:	fd 4f       	sbci	r31, 0xFD	; 253
    1c42:	80 81       	ld	r24, Z
    1c44:	91 81       	ldd	r25, Z+1	; 0x01
    1c46:	8d 93       	st	X+, r24
    1c48:	9c 93       	st	X, r25
    1c4a:	fe 01       	movw	r30, r28
    1c4c:	ef 5c       	subi	r30, 0xCF	; 207
    1c4e:	fd 4f       	sbci	r31, 0xFD	; 253
    1c50:	80 81       	ld	r24, Z
    1c52:	91 81       	ldd	r25, Z+1	; 0x01
    1c54:	01 97       	sbiw	r24, 0x01	; 1
    1c56:	f1 f7       	brne	.-4      	; 0x1c54 <main+0x316>
    1c58:	fe 01       	movw	r30, r28
    1c5a:	ef 5c       	subi	r30, 0xCF	; 207
    1c5c:	fd 4f       	sbci	r31, 0xFD	; 253
    1c5e:	91 83       	std	Z+1, r25	; 0x01
    1c60:	80 83       	st	Z, r24
		    _delay_ms(10);
		    EEPROM_readByte(0x03,&x3);
    1c62:	9e 01       	movw	r18, r28
    1c64:	28 5a       	subi	r18, 0xA8	; 168
    1c66:	3d 4f       	sbci	r19, 0xFD	; 253
    1c68:	83 e0       	ldi	r24, 0x03	; 3
    1c6a:	90 e0       	ldi	r25, 0x00	; 0
    1c6c:	b9 01       	movw	r22, r18
    1c6e:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    1c72:	fe 01       	movw	r30, r28
    1c74:	e3 5d       	subi	r30, 0xD3	; 211
    1c76:	fd 4f       	sbci	r31, 0xFD	; 253
    1c78:	80 e0       	ldi	r24, 0x00	; 0
    1c7a:	90 e0       	ldi	r25, 0x00	; 0
    1c7c:	a0 e2       	ldi	r26, 0x20	; 32
    1c7e:	b1 e4       	ldi	r27, 0x41	; 65
    1c80:	80 83       	st	Z, r24
    1c82:	91 83       	std	Z+1, r25	; 0x01
    1c84:	a2 83       	std	Z+2, r26	; 0x02
    1c86:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c88:	8e 01       	movw	r16, r28
    1c8a:	07 5d       	subi	r16, 0xD7	; 215
    1c8c:	1d 4f       	sbci	r17, 0xFD	; 253
    1c8e:	fe 01       	movw	r30, r28
    1c90:	e3 5d       	subi	r30, 0xD3	; 211
    1c92:	fd 4f       	sbci	r31, 0xFD	; 253
    1c94:	60 81       	ld	r22, Z
    1c96:	71 81       	ldd	r23, Z+1	; 0x01
    1c98:	82 81       	ldd	r24, Z+2	; 0x02
    1c9a:	93 81       	ldd	r25, Z+3	; 0x03
    1c9c:	20 e0       	ldi	r18, 0x00	; 0
    1c9e:	30 e0       	ldi	r19, 0x00	; 0
    1ca0:	4a e7       	ldi	r20, 0x7A	; 122
    1ca2:	53 e4       	ldi	r21, 0x43	; 67
    1ca4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ca8:	dc 01       	movw	r26, r24
    1caa:	cb 01       	movw	r24, r22
    1cac:	f8 01       	movw	r30, r16
    1cae:	80 83       	st	Z, r24
    1cb0:	91 83       	std	Z+1, r25	; 0x01
    1cb2:	a2 83       	std	Z+2, r26	; 0x02
    1cb4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1cb6:	fe 01       	movw	r30, r28
    1cb8:	e7 5d       	subi	r30, 0xD7	; 215
    1cba:	fd 4f       	sbci	r31, 0xFD	; 253
    1cbc:	60 81       	ld	r22, Z
    1cbe:	71 81       	ldd	r23, Z+1	; 0x01
    1cc0:	82 81       	ldd	r24, Z+2	; 0x02
    1cc2:	93 81       	ldd	r25, Z+3	; 0x03
    1cc4:	20 e0       	ldi	r18, 0x00	; 0
    1cc6:	30 e0       	ldi	r19, 0x00	; 0
    1cc8:	40 e8       	ldi	r20, 0x80	; 128
    1cca:	5f e3       	ldi	r21, 0x3F	; 63
    1ccc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1cd0:	88 23       	and	r24, r24
    1cd2:	44 f4       	brge	.+16     	; 0x1ce4 <main+0x3a6>
		__ticks = 1;
    1cd4:	fe 01       	movw	r30, r28
    1cd6:	e9 5d       	subi	r30, 0xD9	; 217
    1cd8:	fd 4f       	sbci	r31, 0xFD	; 253
    1cda:	81 e0       	ldi	r24, 0x01	; 1
    1cdc:	90 e0       	ldi	r25, 0x00	; 0
    1cde:	91 83       	std	Z+1, r25	; 0x01
    1ce0:	80 83       	st	Z, r24
    1ce2:	64 c0       	rjmp	.+200    	; 0x1dac <main+0x46e>
	else if (__tmp > 65535)
    1ce4:	fe 01       	movw	r30, r28
    1ce6:	e7 5d       	subi	r30, 0xD7	; 215
    1ce8:	fd 4f       	sbci	r31, 0xFD	; 253
    1cea:	60 81       	ld	r22, Z
    1cec:	71 81       	ldd	r23, Z+1	; 0x01
    1cee:	82 81       	ldd	r24, Z+2	; 0x02
    1cf0:	93 81       	ldd	r25, Z+3	; 0x03
    1cf2:	20 e0       	ldi	r18, 0x00	; 0
    1cf4:	3f ef       	ldi	r19, 0xFF	; 255
    1cf6:	4f e7       	ldi	r20, 0x7F	; 127
    1cf8:	57 e4       	ldi	r21, 0x47	; 71
    1cfa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1cfe:	18 16       	cp	r1, r24
    1d00:	0c f0       	brlt	.+2      	; 0x1d04 <main+0x3c6>
    1d02:	43 c0       	rjmp	.+134    	; 0x1d8a <main+0x44c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d04:	fe 01       	movw	r30, r28
    1d06:	e3 5d       	subi	r30, 0xD3	; 211
    1d08:	fd 4f       	sbci	r31, 0xFD	; 253
    1d0a:	60 81       	ld	r22, Z
    1d0c:	71 81       	ldd	r23, Z+1	; 0x01
    1d0e:	82 81       	ldd	r24, Z+2	; 0x02
    1d10:	93 81       	ldd	r25, Z+3	; 0x03
    1d12:	20 e0       	ldi	r18, 0x00	; 0
    1d14:	30 e0       	ldi	r19, 0x00	; 0
    1d16:	40 e2       	ldi	r20, 0x20	; 32
    1d18:	51 e4       	ldi	r21, 0x41	; 65
    1d1a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d1e:	dc 01       	movw	r26, r24
    1d20:	cb 01       	movw	r24, r22
    1d22:	8e 01       	movw	r16, r28
    1d24:	09 5d       	subi	r16, 0xD9	; 217
    1d26:	1d 4f       	sbci	r17, 0xFD	; 253
    1d28:	bc 01       	movw	r22, r24
    1d2a:	cd 01       	movw	r24, r26
    1d2c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d30:	dc 01       	movw	r26, r24
    1d32:	cb 01       	movw	r24, r22
    1d34:	f8 01       	movw	r30, r16
    1d36:	91 83       	std	Z+1, r25	; 0x01
    1d38:	80 83       	st	Z, r24
    1d3a:	1f c0       	rjmp	.+62     	; 0x1d7a <main+0x43c>
    1d3c:	fe 01       	movw	r30, r28
    1d3e:	eb 5d       	subi	r30, 0xDB	; 219
    1d40:	fd 4f       	sbci	r31, 0xFD	; 253
    1d42:	89 e1       	ldi	r24, 0x19	; 25
    1d44:	90 e0       	ldi	r25, 0x00	; 0
    1d46:	91 83       	std	Z+1, r25	; 0x01
    1d48:	80 83       	st	Z, r24
    1d4a:	fe 01       	movw	r30, r28
    1d4c:	eb 5d       	subi	r30, 0xDB	; 219
    1d4e:	fd 4f       	sbci	r31, 0xFD	; 253
    1d50:	80 81       	ld	r24, Z
    1d52:	91 81       	ldd	r25, Z+1	; 0x01
    1d54:	01 97       	sbiw	r24, 0x01	; 1
    1d56:	f1 f7       	brne	.-4      	; 0x1d54 <main+0x416>
    1d58:	fe 01       	movw	r30, r28
    1d5a:	eb 5d       	subi	r30, 0xDB	; 219
    1d5c:	fd 4f       	sbci	r31, 0xFD	; 253
    1d5e:	91 83       	std	Z+1, r25	; 0x01
    1d60:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d62:	de 01       	movw	r26, r28
    1d64:	a9 5d       	subi	r26, 0xD9	; 217
    1d66:	bd 4f       	sbci	r27, 0xFD	; 253
    1d68:	fe 01       	movw	r30, r28
    1d6a:	e9 5d       	subi	r30, 0xD9	; 217
    1d6c:	fd 4f       	sbci	r31, 0xFD	; 253
    1d6e:	80 81       	ld	r24, Z
    1d70:	91 81       	ldd	r25, Z+1	; 0x01
    1d72:	01 97       	sbiw	r24, 0x01	; 1
    1d74:	11 96       	adiw	r26, 0x01	; 1
    1d76:	9c 93       	st	X, r25
    1d78:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d7a:	fe 01       	movw	r30, r28
    1d7c:	e9 5d       	subi	r30, 0xD9	; 217
    1d7e:	fd 4f       	sbci	r31, 0xFD	; 253
    1d80:	80 81       	ld	r24, Z
    1d82:	91 81       	ldd	r25, Z+1	; 0x01
    1d84:	00 97       	sbiw	r24, 0x00	; 0
    1d86:	d1 f6       	brne	.-76     	; 0x1d3c <main+0x3fe>
    1d88:	27 c0       	rjmp	.+78     	; 0x1dd8 <main+0x49a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d8a:	8e 01       	movw	r16, r28
    1d8c:	09 5d       	subi	r16, 0xD9	; 217
    1d8e:	1d 4f       	sbci	r17, 0xFD	; 253
    1d90:	fe 01       	movw	r30, r28
    1d92:	e7 5d       	subi	r30, 0xD7	; 215
    1d94:	fd 4f       	sbci	r31, 0xFD	; 253
    1d96:	60 81       	ld	r22, Z
    1d98:	71 81       	ldd	r23, Z+1	; 0x01
    1d9a:	82 81       	ldd	r24, Z+2	; 0x02
    1d9c:	93 81       	ldd	r25, Z+3	; 0x03
    1d9e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1da2:	dc 01       	movw	r26, r24
    1da4:	cb 01       	movw	r24, r22
    1da6:	f8 01       	movw	r30, r16
    1da8:	91 83       	std	Z+1, r25	; 0x01
    1daa:	80 83       	st	Z, r24
    1dac:	de 01       	movw	r26, r28
    1dae:	ad 5d       	subi	r26, 0xDD	; 221
    1db0:	bd 4f       	sbci	r27, 0xFD	; 253
    1db2:	fe 01       	movw	r30, r28
    1db4:	e9 5d       	subi	r30, 0xD9	; 217
    1db6:	fd 4f       	sbci	r31, 0xFD	; 253
    1db8:	80 81       	ld	r24, Z
    1dba:	91 81       	ldd	r25, Z+1	; 0x01
    1dbc:	8d 93       	st	X+, r24
    1dbe:	9c 93       	st	X, r25
    1dc0:	fe 01       	movw	r30, r28
    1dc2:	ed 5d       	subi	r30, 0xDD	; 221
    1dc4:	fd 4f       	sbci	r31, 0xFD	; 253
    1dc6:	80 81       	ld	r24, Z
    1dc8:	91 81       	ldd	r25, Z+1	; 0x01
    1dca:	01 97       	sbiw	r24, 0x01	; 1
    1dcc:	f1 f7       	brne	.-4      	; 0x1dca <main+0x48c>
    1dce:	fe 01       	movw	r30, r28
    1dd0:	ed 5d       	subi	r30, 0xDD	; 221
    1dd2:	fd 4f       	sbci	r31, 0xFD	; 253
    1dd4:	91 83       	std	Z+1, r25	; 0x01
    1dd6:	80 83       	st	Z, r24
		    _delay_ms(10);
		    EEPROM_readByte(0x04,&x4);
    1dd8:	9e 01       	movw	r18, r28
    1dda:	27 5a       	subi	r18, 0xA7	; 167
    1ddc:	3d 4f       	sbci	r19, 0xFD	; 253
    1dde:	84 e0       	ldi	r24, 0x04	; 4
    1de0:	90 e0       	ldi	r25, 0x00	; 0
    1de2:	b9 01       	movw	r22, r18
    1de4:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    1de8:	fe 01       	movw	r30, r28
    1dea:	e1 5e       	subi	r30, 0xE1	; 225
    1dec:	fd 4f       	sbci	r31, 0xFD	; 253
    1dee:	80 e0       	ldi	r24, 0x00	; 0
    1df0:	90 e0       	ldi	r25, 0x00	; 0
    1df2:	a0 e2       	ldi	r26, 0x20	; 32
    1df4:	b1 e4       	ldi	r27, 0x41	; 65
    1df6:	80 83       	st	Z, r24
    1df8:	91 83       	std	Z+1, r25	; 0x01
    1dfa:	a2 83       	std	Z+2, r26	; 0x02
    1dfc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1dfe:	8e 01       	movw	r16, r28
    1e00:	05 5e       	subi	r16, 0xE5	; 229
    1e02:	1d 4f       	sbci	r17, 0xFD	; 253
    1e04:	fe 01       	movw	r30, r28
    1e06:	e1 5e       	subi	r30, 0xE1	; 225
    1e08:	fd 4f       	sbci	r31, 0xFD	; 253
    1e0a:	60 81       	ld	r22, Z
    1e0c:	71 81       	ldd	r23, Z+1	; 0x01
    1e0e:	82 81       	ldd	r24, Z+2	; 0x02
    1e10:	93 81       	ldd	r25, Z+3	; 0x03
    1e12:	20 e0       	ldi	r18, 0x00	; 0
    1e14:	30 e0       	ldi	r19, 0x00	; 0
    1e16:	4a e7       	ldi	r20, 0x7A	; 122
    1e18:	53 e4       	ldi	r21, 0x43	; 67
    1e1a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e1e:	dc 01       	movw	r26, r24
    1e20:	cb 01       	movw	r24, r22
    1e22:	f8 01       	movw	r30, r16
    1e24:	80 83       	st	Z, r24
    1e26:	91 83       	std	Z+1, r25	; 0x01
    1e28:	a2 83       	std	Z+2, r26	; 0x02
    1e2a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e2c:	fe 01       	movw	r30, r28
    1e2e:	e5 5e       	subi	r30, 0xE5	; 229
    1e30:	fd 4f       	sbci	r31, 0xFD	; 253
    1e32:	60 81       	ld	r22, Z
    1e34:	71 81       	ldd	r23, Z+1	; 0x01
    1e36:	82 81       	ldd	r24, Z+2	; 0x02
    1e38:	93 81       	ldd	r25, Z+3	; 0x03
    1e3a:	20 e0       	ldi	r18, 0x00	; 0
    1e3c:	30 e0       	ldi	r19, 0x00	; 0
    1e3e:	40 e8       	ldi	r20, 0x80	; 128
    1e40:	5f e3       	ldi	r21, 0x3F	; 63
    1e42:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e46:	88 23       	and	r24, r24
    1e48:	44 f4       	brge	.+16     	; 0x1e5a <main+0x51c>
		__ticks = 1;
    1e4a:	fe 01       	movw	r30, r28
    1e4c:	e7 5e       	subi	r30, 0xE7	; 231
    1e4e:	fd 4f       	sbci	r31, 0xFD	; 253
    1e50:	81 e0       	ldi	r24, 0x01	; 1
    1e52:	90 e0       	ldi	r25, 0x00	; 0
    1e54:	91 83       	std	Z+1, r25	; 0x01
    1e56:	80 83       	st	Z, r24
    1e58:	64 c0       	rjmp	.+200    	; 0x1f22 <main+0x5e4>
	else if (__tmp > 65535)
    1e5a:	fe 01       	movw	r30, r28
    1e5c:	e5 5e       	subi	r30, 0xE5	; 229
    1e5e:	fd 4f       	sbci	r31, 0xFD	; 253
    1e60:	60 81       	ld	r22, Z
    1e62:	71 81       	ldd	r23, Z+1	; 0x01
    1e64:	82 81       	ldd	r24, Z+2	; 0x02
    1e66:	93 81       	ldd	r25, Z+3	; 0x03
    1e68:	20 e0       	ldi	r18, 0x00	; 0
    1e6a:	3f ef       	ldi	r19, 0xFF	; 255
    1e6c:	4f e7       	ldi	r20, 0x7F	; 127
    1e6e:	57 e4       	ldi	r21, 0x47	; 71
    1e70:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e74:	18 16       	cp	r1, r24
    1e76:	0c f0       	brlt	.+2      	; 0x1e7a <main+0x53c>
    1e78:	43 c0       	rjmp	.+134    	; 0x1f00 <main+0x5c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e7a:	fe 01       	movw	r30, r28
    1e7c:	e1 5e       	subi	r30, 0xE1	; 225
    1e7e:	fd 4f       	sbci	r31, 0xFD	; 253
    1e80:	60 81       	ld	r22, Z
    1e82:	71 81       	ldd	r23, Z+1	; 0x01
    1e84:	82 81       	ldd	r24, Z+2	; 0x02
    1e86:	93 81       	ldd	r25, Z+3	; 0x03
    1e88:	20 e0       	ldi	r18, 0x00	; 0
    1e8a:	30 e0       	ldi	r19, 0x00	; 0
    1e8c:	40 e2       	ldi	r20, 0x20	; 32
    1e8e:	51 e4       	ldi	r21, 0x41	; 65
    1e90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e94:	dc 01       	movw	r26, r24
    1e96:	cb 01       	movw	r24, r22
    1e98:	8e 01       	movw	r16, r28
    1e9a:	07 5e       	subi	r16, 0xE7	; 231
    1e9c:	1d 4f       	sbci	r17, 0xFD	; 253
    1e9e:	bc 01       	movw	r22, r24
    1ea0:	cd 01       	movw	r24, r26
    1ea2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ea6:	dc 01       	movw	r26, r24
    1ea8:	cb 01       	movw	r24, r22
    1eaa:	f8 01       	movw	r30, r16
    1eac:	91 83       	std	Z+1, r25	; 0x01
    1eae:	80 83       	st	Z, r24
    1eb0:	1f c0       	rjmp	.+62     	; 0x1ef0 <main+0x5b2>
    1eb2:	fe 01       	movw	r30, r28
    1eb4:	e9 5e       	subi	r30, 0xE9	; 233
    1eb6:	fd 4f       	sbci	r31, 0xFD	; 253
    1eb8:	89 e1       	ldi	r24, 0x19	; 25
    1eba:	90 e0       	ldi	r25, 0x00	; 0
    1ebc:	91 83       	std	Z+1, r25	; 0x01
    1ebe:	80 83       	st	Z, r24
    1ec0:	fe 01       	movw	r30, r28
    1ec2:	e9 5e       	subi	r30, 0xE9	; 233
    1ec4:	fd 4f       	sbci	r31, 0xFD	; 253
    1ec6:	80 81       	ld	r24, Z
    1ec8:	91 81       	ldd	r25, Z+1	; 0x01
    1eca:	01 97       	sbiw	r24, 0x01	; 1
    1ecc:	f1 f7       	brne	.-4      	; 0x1eca <main+0x58c>
    1ece:	fe 01       	movw	r30, r28
    1ed0:	e9 5e       	subi	r30, 0xE9	; 233
    1ed2:	fd 4f       	sbci	r31, 0xFD	; 253
    1ed4:	91 83       	std	Z+1, r25	; 0x01
    1ed6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ed8:	de 01       	movw	r26, r28
    1eda:	a7 5e       	subi	r26, 0xE7	; 231
    1edc:	bd 4f       	sbci	r27, 0xFD	; 253
    1ede:	fe 01       	movw	r30, r28
    1ee0:	e7 5e       	subi	r30, 0xE7	; 231
    1ee2:	fd 4f       	sbci	r31, 0xFD	; 253
    1ee4:	80 81       	ld	r24, Z
    1ee6:	91 81       	ldd	r25, Z+1	; 0x01
    1ee8:	01 97       	sbiw	r24, 0x01	; 1
    1eea:	11 96       	adiw	r26, 0x01	; 1
    1eec:	9c 93       	st	X, r25
    1eee:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ef0:	fe 01       	movw	r30, r28
    1ef2:	e7 5e       	subi	r30, 0xE7	; 231
    1ef4:	fd 4f       	sbci	r31, 0xFD	; 253
    1ef6:	80 81       	ld	r24, Z
    1ef8:	91 81       	ldd	r25, Z+1	; 0x01
    1efa:	00 97       	sbiw	r24, 0x00	; 0
    1efc:	d1 f6       	brne	.-76     	; 0x1eb2 <main+0x574>
    1efe:	27 c0       	rjmp	.+78     	; 0x1f4e <main+0x610>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f00:	8e 01       	movw	r16, r28
    1f02:	07 5e       	subi	r16, 0xE7	; 231
    1f04:	1d 4f       	sbci	r17, 0xFD	; 253
    1f06:	fe 01       	movw	r30, r28
    1f08:	e5 5e       	subi	r30, 0xE5	; 229
    1f0a:	fd 4f       	sbci	r31, 0xFD	; 253
    1f0c:	60 81       	ld	r22, Z
    1f0e:	71 81       	ldd	r23, Z+1	; 0x01
    1f10:	82 81       	ldd	r24, Z+2	; 0x02
    1f12:	93 81       	ldd	r25, Z+3	; 0x03
    1f14:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f18:	dc 01       	movw	r26, r24
    1f1a:	cb 01       	movw	r24, r22
    1f1c:	f8 01       	movw	r30, r16
    1f1e:	91 83       	std	Z+1, r25	; 0x01
    1f20:	80 83       	st	Z, r24
    1f22:	de 01       	movw	r26, r28
    1f24:	ab 5e       	subi	r26, 0xEB	; 235
    1f26:	bd 4f       	sbci	r27, 0xFD	; 253
    1f28:	fe 01       	movw	r30, r28
    1f2a:	e7 5e       	subi	r30, 0xE7	; 231
    1f2c:	fd 4f       	sbci	r31, 0xFD	; 253
    1f2e:	80 81       	ld	r24, Z
    1f30:	91 81       	ldd	r25, Z+1	; 0x01
    1f32:	8d 93       	st	X+, r24
    1f34:	9c 93       	st	X, r25
    1f36:	fe 01       	movw	r30, r28
    1f38:	eb 5e       	subi	r30, 0xEB	; 235
    1f3a:	fd 4f       	sbci	r31, 0xFD	; 253
    1f3c:	80 81       	ld	r24, Z
    1f3e:	91 81       	ldd	r25, Z+1	; 0x01
    1f40:	01 97       	sbiw	r24, 0x01	; 1
    1f42:	f1 f7       	brne	.-4      	; 0x1f40 <main+0x602>
    1f44:	fe 01       	movw	r30, r28
    1f46:	eb 5e       	subi	r30, 0xEB	; 235
    1f48:	fd 4f       	sbci	r31, 0xFD	; 253
    1f4a:	91 83       	std	Z+1, r25	; 0x01
    1f4c:	80 83       	st	Z, r24
		    _delay_ms(10);
		    EEPROM_readByte(0x05,&x5);
    1f4e:	9e 01       	movw	r18, r28
    1f50:	26 5a       	subi	r18, 0xA6	; 166
    1f52:	3d 4f       	sbci	r19, 0xFD	; 253
    1f54:	85 e0       	ldi	r24, 0x05	; 5
    1f56:	90 e0       	ldi	r25, 0x00	; 0
    1f58:	b9 01       	movw	r22, r18
    1f5a:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    1f5e:	fe 01       	movw	r30, r28
    1f60:	ef 5e       	subi	r30, 0xEF	; 239
    1f62:	fd 4f       	sbci	r31, 0xFD	; 253
    1f64:	80 e0       	ldi	r24, 0x00	; 0
    1f66:	90 e0       	ldi	r25, 0x00	; 0
    1f68:	a0 e2       	ldi	r26, 0x20	; 32
    1f6a:	b1 e4       	ldi	r27, 0x41	; 65
    1f6c:	80 83       	st	Z, r24
    1f6e:	91 83       	std	Z+1, r25	; 0x01
    1f70:	a2 83       	std	Z+2, r26	; 0x02
    1f72:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f74:	8e 01       	movw	r16, r28
    1f76:	03 5f       	subi	r16, 0xF3	; 243
    1f78:	1d 4f       	sbci	r17, 0xFD	; 253
    1f7a:	fe 01       	movw	r30, r28
    1f7c:	ef 5e       	subi	r30, 0xEF	; 239
    1f7e:	fd 4f       	sbci	r31, 0xFD	; 253
    1f80:	60 81       	ld	r22, Z
    1f82:	71 81       	ldd	r23, Z+1	; 0x01
    1f84:	82 81       	ldd	r24, Z+2	; 0x02
    1f86:	93 81       	ldd	r25, Z+3	; 0x03
    1f88:	20 e0       	ldi	r18, 0x00	; 0
    1f8a:	30 e0       	ldi	r19, 0x00	; 0
    1f8c:	4a e7       	ldi	r20, 0x7A	; 122
    1f8e:	53 e4       	ldi	r21, 0x43	; 67
    1f90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f94:	dc 01       	movw	r26, r24
    1f96:	cb 01       	movw	r24, r22
    1f98:	f8 01       	movw	r30, r16
    1f9a:	80 83       	st	Z, r24
    1f9c:	91 83       	std	Z+1, r25	; 0x01
    1f9e:	a2 83       	std	Z+2, r26	; 0x02
    1fa0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1fa2:	fe 01       	movw	r30, r28
    1fa4:	e3 5f       	subi	r30, 0xF3	; 243
    1fa6:	fd 4f       	sbci	r31, 0xFD	; 253
    1fa8:	60 81       	ld	r22, Z
    1faa:	71 81       	ldd	r23, Z+1	; 0x01
    1fac:	82 81       	ldd	r24, Z+2	; 0x02
    1fae:	93 81       	ldd	r25, Z+3	; 0x03
    1fb0:	20 e0       	ldi	r18, 0x00	; 0
    1fb2:	30 e0       	ldi	r19, 0x00	; 0
    1fb4:	40 e8       	ldi	r20, 0x80	; 128
    1fb6:	5f e3       	ldi	r21, 0x3F	; 63
    1fb8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1fbc:	88 23       	and	r24, r24
    1fbe:	44 f4       	brge	.+16     	; 0x1fd0 <main+0x692>
		__ticks = 1;
    1fc0:	fe 01       	movw	r30, r28
    1fc2:	e5 5f       	subi	r30, 0xF5	; 245
    1fc4:	fd 4f       	sbci	r31, 0xFD	; 253
    1fc6:	81 e0       	ldi	r24, 0x01	; 1
    1fc8:	90 e0       	ldi	r25, 0x00	; 0
    1fca:	91 83       	std	Z+1, r25	; 0x01
    1fcc:	80 83       	st	Z, r24
    1fce:	64 c0       	rjmp	.+200    	; 0x2098 <main+0x75a>
	else if (__tmp > 65535)
    1fd0:	fe 01       	movw	r30, r28
    1fd2:	e3 5f       	subi	r30, 0xF3	; 243
    1fd4:	fd 4f       	sbci	r31, 0xFD	; 253
    1fd6:	60 81       	ld	r22, Z
    1fd8:	71 81       	ldd	r23, Z+1	; 0x01
    1fda:	82 81       	ldd	r24, Z+2	; 0x02
    1fdc:	93 81       	ldd	r25, Z+3	; 0x03
    1fde:	20 e0       	ldi	r18, 0x00	; 0
    1fe0:	3f ef       	ldi	r19, 0xFF	; 255
    1fe2:	4f e7       	ldi	r20, 0x7F	; 127
    1fe4:	57 e4       	ldi	r21, 0x47	; 71
    1fe6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1fea:	18 16       	cp	r1, r24
    1fec:	0c f0       	brlt	.+2      	; 0x1ff0 <main+0x6b2>
    1fee:	43 c0       	rjmp	.+134    	; 0x2076 <main+0x738>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ff0:	fe 01       	movw	r30, r28
    1ff2:	ef 5e       	subi	r30, 0xEF	; 239
    1ff4:	fd 4f       	sbci	r31, 0xFD	; 253
    1ff6:	60 81       	ld	r22, Z
    1ff8:	71 81       	ldd	r23, Z+1	; 0x01
    1ffa:	82 81       	ldd	r24, Z+2	; 0x02
    1ffc:	93 81       	ldd	r25, Z+3	; 0x03
    1ffe:	20 e0       	ldi	r18, 0x00	; 0
    2000:	30 e0       	ldi	r19, 0x00	; 0
    2002:	40 e2       	ldi	r20, 0x20	; 32
    2004:	51 e4       	ldi	r21, 0x41	; 65
    2006:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    200a:	dc 01       	movw	r26, r24
    200c:	cb 01       	movw	r24, r22
    200e:	8e 01       	movw	r16, r28
    2010:	05 5f       	subi	r16, 0xF5	; 245
    2012:	1d 4f       	sbci	r17, 0xFD	; 253
    2014:	bc 01       	movw	r22, r24
    2016:	cd 01       	movw	r24, r26
    2018:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    201c:	dc 01       	movw	r26, r24
    201e:	cb 01       	movw	r24, r22
    2020:	f8 01       	movw	r30, r16
    2022:	91 83       	std	Z+1, r25	; 0x01
    2024:	80 83       	st	Z, r24
    2026:	1f c0       	rjmp	.+62     	; 0x2066 <main+0x728>
    2028:	fe 01       	movw	r30, r28
    202a:	e7 5f       	subi	r30, 0xF7	; 247
    202c:	fd 4f       	sbci	r31, 0xFD	; 253
    202e:	89 e1       	ldi	r24, 0x19	; 25
    2030:	90 e0       	ldi	r25, 0x00	; 0
    2032:	91 83       	std	Z+1, r25	; 0x01
    2034:	80 83       	st	Z, r24
    2036:	fe 01       	movw	r30, r28
    2038:	e7 5f       	subi	r30, 0xF7	; 247
    203a:	fd 4f       	sbci	r31, 0xFD	; 253
    203c:	80 81       	ld	r24, Z
    203e:	91 81       	ldd	r25, Z+1	; 0x01
    2040:	01 97       	sbiw	r24, 0x01	; 1
    2042:	f1 f7       	brne	.-4      	; 0x2040 <main+0x702>
    2044:	fe 01       	movw	r30, r28
    2046:	e7 5f       	subi	r30, 0xF7	; 247
    2048:	fd 4f       	sbci	r31, 0xFD	; 253
    204a:	91 83       	std	Z+1, r25	; 0x01
    204c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    204e:	de 01       	movw	r26, r28
    2050:	a5 5f       	subi	r26, 0xF5	; 245
    2052:	bd 4f       	sbci	r27, 0xFD	; 253
    2054:	fe 01       	movw	r30, r28
    2056:	e5 5f       	subi	r30, 0xF5	; 245
    2058:	fd 4f       	sbci	r31, 0xFD	; 253
    205a:	80 81       	ld	r24, Z
    205c:	91 81       	ldd	r25, Z+1	; 0x01
    205e:	01 97       	sbiw	r24, 0x01	; 1
    2060:	11 96       	adiw	r26, 0x01	; 1
    2062:	9c 93       	st	X, r25
    2064:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2066:	fe 01       	movw	r30, r28
    2068:	e5 5f       	subi	r30, 0xF5	; 245
    206a:	fd 4f       	sbci	r31, 0xFD	; 253
    206c:	80 81       	ld	r24, Z
    206e:	91 81       	ldd	r25, Z+1	; 0x01
    2070:	00 97       	sbiw	r24, 0x00	; 0
    2072:	d1 f6       	brne	.-76     	; 0x2028 <main+0x6ea>
    2074:	27 c0       	rjmp	.+78     	; 0x20c4 <main+0x786>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2076:	8e 01       	movw	r16, r28
    2078:	05 5f       	subi	r16, 0xF5	; 245
    207a:	1d 4f       	sbci	r17, 0xFD	; 253
    207c:	fe 01       	movw	r30, r28
    207e:	e3 5f       	subi	r30, 0xF3	; 243
    2080:	fd 4f       	sbci	r31, 0xFD	; 253
    2082:	60 81       	ld	r22, Z
    2084:	71 81       	ldd	r23, Z+1	; 0x01
    2086:	82 81       	ldd	r24, Z+2	; 0x02
    2088:	93 81       	ldd	r25, Z+3	; 0x03
    208a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    208e:	dc 01       	movw	r26, r24
    2090:	cb 01       	movw	r24, r22
    2092:	f8 01       	movw	r30, r16
    2094:	91 83       	std	Z+1, r25	; 0x01
    2096:	80 83       	st	Z, r24
    2098:	de 01       	movw	r26, r28
    209a:	a9 5f       	subi	r26, 0xF9	; 249
    209c:	bd 4f       	sbci	r27, 0xFD	; 253
    209e:	fe 01       	movw	r30, r28
    20a0:	e5 5f       	subi	r30, 0xF5	; 245
    20a2:	fd 4f       	sbci	r31, 0xFD	; 253
    20a4:	80 81       	ld	r24, Z
    20a6:	91 81       	ldd	r25, Z+1	; 0x01
    20a8:	8d 93       	st	X+, r24
    20aa:	9c 93       	st	X, r25
    20ac:	fe 01       	movw	r30, r28
    20ae:	e9 5f       	subi	r30, 0xF9	; 249
    20b0:	fd 4f       	sbci	r31, 0xFD	; 253
    20b2:	80 81       	ld	r24, Z
    20b4:	91 81       	ldd	r25, Z+1	; 0x01
    20b6:	01 97       	sbiw	r24, 0x01	; 1
    20b8:	f1 f7       	brne	.-4      	; 0x20b6 <main+0x778>
    20ba:	fe 01       	movw	r30, r28
    20bc:	e9 5f       	subi	r30, 0xF9	; 249
    20be:	fd 4f       	sbci	r31, 0xFD	; 253
    20c0:	91 83       	std	Z+1, r25	; 0x01
    20c2:	80 83       	st	Z, r24
		    _delay_ms(10);
		    EEPROM_readByte(0x06,&x6);
    20c4:	9e 01       	movw	r18, r28
    20c6:	25 5a       	subi	r18, 0xA5	; 165
    20c8:	3d 4f       	sbci	r19, 0xFD	; 253
    20ca:	86 e0       	ldi	r24, 0x06	; 6
    20cc:	90 e0       	ldi	r25, 0x00	; 0
    20ce:	b9 01       	movw	r22, r18
    20d0:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    20d4:	fe 01       	movw	r30, r28
    20d6:	ed 5f       	subi	r30, 0xFD	; 253
    20d8:	fd 4f       	sbci	r31, 0xFD	; 253
    20da:	80 e0       	ldi	r24, 0x00	; 0
    20dc:	90 e0       	ldi	r25, 0x00	; 0
    20de:	a0 e2       	ldi	r26, 0x20	; 32
    20e0:	b1 e4       	ldi	r27, 0x41	; 65
    20e2:	80 83       	st	Z, r24
    20e4:	91 83       	std	Z+1, r25	; 0x01
    20e6:	a2 83       	std	Z+2, r26	; 0x02
    20e8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20ea:	8e 01       	movw	r16, r28
    20ec:	01 50       	subi	r16, 0x01	; 1
    20ee:	1e 4f       	sbci	r17, 0xFE	; 254
    20f0:	fe 01       	movw	r30, r28
    20f2:	ed 5f       	subi	r30, 0xFD	; 253
    20f4:	fd 4f       	sbci	r31, 0xFD	; 253
    20f6:	60 81       	ld	r22, Z
    20f8:	71 81       	ldd	r23, Z+1	; 0x01
    20fa:	82 81       	ldd	r24, Z+2	; 0x02
    20fc:	93 81       	ldd	r25, Z+3	; 0x03
    20fe:	20 e0       	ldi	r18, 0x00	; 0
    2100:	30 e0       	ldi	r19, 0x00	; 0
    2102:	4a e7       	ldi	r20, 0x7A	; 122
    2104:	53 e4       	ldi	r21, 0x43	; 67
    2106:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    210a:	dc 01       	movw	r26, r24
    210c:	cb 01       	movw	r24, r22
    210e:	f8 01       	movw	r30, r16
    2110:	80 83       	st	Z, r24
    2112:	91 83       	std	Z+1, r25	; 0x01
    2114:	a2 83       	std	Z+2, r26	; 0x02
    2116:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2118:	fe 01       	movw	r30, r28
    211a:	e1 50       	subi	r30, 0x01	; 1
    211c:	fe 4f       	sbci	r31, 0xFE	; 254
    211e:	60 81       	ld	r22, Z
    2120:	71 81       	ldd	r23, Z+1	; 0x01
    2122:	82 81       	ldd	r24, Z+2	; 0x02
    2124:	93 81       	ldd	r25, Z+3	; 0x03
    2126:	20 e0       	ldi	r18, 0x00	; 0
    2128:	30 e0       	ldi	r19, 0x00	; 0
    212a:	40 e8       	ldi	r20, 0x80	; 128
    212c:	5f e3       	ldi	r21, 0x3F	; 63
    212e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2132:	88 23       	and	r24, r24
    2134:	44 f4       	brge	.+16     	; 0x2146 <main+0x808>
		__ticks = 1;
    2136:	fe 01       	movw	r30, r28
    2138:	e3 50       	subi	r30, 0x03	; 3
    213a:	fe 4f       	sbci	r31, 0xFE	; 254
    213c:	81 e0       	ldi	r24, 0x01	; 1
    213e:	90 e0       	ldi	r25, 0x00	; 0
    2140:	91 83       	std	Z+1, r25	; 0x01
    2142:	80 83       	st	Z, r24
    2144:	64 c0       	rjmp	.+200    	; 0x220e <main+0x8d0>
	else if (__tmp > 65535)
    2146:	fe 01       	movw	r30, r28
    2148:	e1 50       	subi	r30, 0x01	; 1
    214a:	fe 4f       	sbci	r31, 0xFE	; 254
    214c:	60 81       	ld	r22, Z
    214e:	71 81       	ldd	r23, Z+1	; 0x01
    2150:	82 81       	ldd	r24, Z+2	; 0x02
    2152:	93 81       	ldd	r25, Z+3	; 0x03
    2154:	20 e0       	ldi	r18, 0x00	; 0
    2156:	3f ef       	ldi	r19, 0xFF	; 255
    2158:	4f e7       	ldi	r20, 0x7F	; 127
    215a:	57 e4       	ldi	r21, 0x47	; 71
    215c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2160:	18 16       	cp	r1, r24
    2162:	0c f0       	brlt	.+2      	; 0x2166 <main+0x828>
    2164:	43 c0       	rjmp	.+134    	; 0x21ec <main+0x8ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2166:	fe 01       	movw	r30, r28
    2168:	ed 5f       	subi	r30, 0xFD	; 253
    216a:	fd 4f       	sbci	r31, 0xFD	; 253
    216c:	60 81       	ld	r22, Z
    216e:	71 81       	ldd	r23, Z+1	; 0x01
    2170:	82 81       	ldd	r24, Z+2	; 0x02
    2172:	93 81       	ldd	r25, Z+3	; 0x03
    2174:	20 e0       	ldi	r18, 0x00	; 0
    2176:	30 e0       	ldi	r19, 0x00	; 0
    2178:	40 e2       	ldi	r20, 0x20	; 32
    217a:	51 e4       	ldi	r21, 0x41	; 65
    217c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2180:	dc 01       	movw	r26, r24
    2182:	cb 01       	movw	r24, r22
    2184:	8e 01       	movw	r16, r28
    2186:	03 50       	subi	r16, 0x03	; 3
    2188:	1e 4f       	sbci	r17, 0xFE	; 254
    218a:	bc 01       	movw	r22, r24
    218c:	cd 01       	movw	r24, r26
    218e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2192:	dc 01       	movw	r26, r24
    2194:	cb 01       	movw	r24, r22
    2196:	f8 01       	movw	r30, r16
    2198:	91 83       	std	Z+1, r25	; 0x01
    219a:	80 83       	st	Z, r24
    219c:	1f c0       	rjmp	.+62     	; 0x21dc <main+0x89e>
    219e:	fe 01       	movw	r30, r28
    21a0:	e5 50       	subi	r30, 0x05	; 5
    21a2:	fe 4f       	sbci	r31, 0xFE	; 254
    21a4:	89 e1       	ldi	r24, 0x19	; 25
    21a6:	90 e0       	ldi	r25, 0x00	; 0
    21a8:	91 83       	std	Z+1, r25	; 0x01
    21aa:	80 83       	st	Z, r24
    21ac:	fe 01       	movw	r30, r28
    21ae:	e5 50       	subi	r30, 0x05	; 5
    21b0:	fe 4f       	sbci	r31, 0xFE	; 254
    21b2:	80 81       	ld	r24, Z
    21b4:	91 81       	ldd	r25, Z+1	; 0x01
    21b6:	01 97       	sbiw	r24, 0x01	; 1
    21b8:	f1 f7       	brne	.-4      	; 0x21b6 <main+0x878>
    21ba:	fe 01       	movw	r30, r28
    21bc:	e5 50       	subi	r30, 0x05	; 5
    21be:	fe 4f       	sbci	r31, 0xFE	; 254
    21c0:	91 83       	std	Z+1, r25	; 0x01
    21c2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21c4:	de 01       	movw	r26, r28
    21c6:	a3 50       	subi	r26, 0x03	; 3
    21c8:	be 4f       	sbci	r27, 0xFE	; 254
    21ca:	fe 01       	movw	r30, r28
    21cc:	e3 50       	subi	r30, 0x03	; 3
    21ce:	fe 4f       	sbci	r31, 0xFE	; 254
    21d0:	80 81       	ld	r24, Z
    21d2:	91 81       	ldd	r25, Z+1	; 0x01
    21d4:	01 97       	sbiw	r24, 0x01	; 1
    21d6:	11 96       	adiw	r26, 0x01	; 1
    21d8:	9c 93       	st	X, r25
    21da:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21dc:	fe 01       	movw	r30, r28
    21de:	e3 50       	subi	r30, 0x03	; 3
    21e0:	fe 4f       	sbci	r31, 0xFE	; 254
    21e2:	80 81       	ld	r24, Z
    21e4:	91 81       	ldd	r25, Z+1	; 0x01
    21e6:	00 97       	sbiw	r24, 0x00	; 0
    21e8:	d1 f6       	brne	.-76     	; 0x219e <main+0x860>
    21ea:	27 c0       	rjmp	.+78     	; 0x223a <main+0x8fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21ec:	8e 01       	movw	r16, r28
    21ee:	03 50       	subi	r16, 0x03	; 3
    21f0:	1e 4f       	sbci	r17, 0xFE	; 254
    21f2:	fe 01       	movw	r30, r28
    21f4:	e1 50       	subi	r30, 0x01	; 1
    21f6:	fe 4f       	sbci	r31, 0xFE	; 254
    21f8:	60 81       	ld	r22, Z
    21fa:	71 81       	ldd	r23, Z+1	; 0x01
    21fc:	82 81       	ldd	r24, Z+2	; 0x02
    21fe:	93 81       	ldd	r25, Z+3	; 0x03
    2200:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2204:	dc 01       	movw	r26, r24
    2206:	cb 01       	movw	r24, r22
    2208:	f8 01       	movw	r30, r16
    220a:	91 83       	std	Z+1, r25	; 0x01
    220c:	80 83       	st	Z, r24
    220e:	de 01       	movw	r26, r28
    2210:	a7 50       	subi	r26, 0x07	; 7
    2212:	be 4f       	sbci	r27, 0xFE	; 254
    2214:	fe 01       	movw	r30, r28
    2216:	e3 50       	subi	r30, 0x03	; 3
    2218:	fe 4f       	sbci	r31, 0xFE	; 254
    221a:	80 81       	ld	r24, Z
    221c:	91 81       	ldd	r25, Z+1	; 0x01
    221e:	8d 93       	st	X+, r24
    2220:	9c 93       	st	X, r25
    2222:	fe 01       	movw	r30, r28
    2224:	e7 50       	subi	r30, 0x07	; 7
    2226:	fe 4f       	sbci	r31, 0xFE	; 254
    2228:	80 81       	ld	r24, Z
    222a:	91 81       	ldd	r25, Z+1	; 0x01
    222c:	01 97       	sbiw	r24, 0x01	; 1
    222e:	f1 f7       	brne	.-4      	; 0x222c <main+0x8ee>
    2230:	fe 01       	movw	r30, r28
    2232:	e7 50       	subi	r30, 0x07	; 7
    2234:	fe 4f       	sbci	r31, 0xFE	; 254
    2236:	91 83       	std	Z+1, r25	; 0x01
    2238:	80 83       	st	Z, r24
		    _delay_ms(10);
		    EEPROM_readByte(0x07,&x7);
    223a:	9e 01       	movw	r18, r28
    223c:	24 5a       	subi	r18, 0xA4	; 164
    223e:	3d 4f       	sbci	r19, 0xFD	; 253
    2240:	87 e0       	ldi	r24, 0x07	; 7
    2242:	90 e0       	ldi	r25, 0x00	; 0
    2244:	b9 01       	movw	r22, r18
    2246:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    224a:	fe 01       	movw	r30, r28
    224c:	eb 50       	subi	r30, 0x0B	; 11
    224e:	fe 4f       	sbci	r31, 0xFE	; 254
    2250:	80 e0       	ldi	r24, 0x00	; 0
    2252:	90 e0       	ldi	r25, 0x00	; 0
    2254:	a0 e2       	ldi	r26, 0x20	; 32
    2256:	b1 e4       	ldi	r27, 0x41	; 65
    2258:	80 83       	st	Z, r24
    225a:	91 83       	std	Z+1, r25	; 0x01
    225c:	a2 83       	std	Z+2, r26	; 0x02
    225e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2260:	8e 01       	movw	r16, r28
    2262:	0f 50       	subi	r16, 0x0F	; 15
    2264:	1e 4f       	sbci	r17, 0xFE	; 254
    2266:	fe 01       	movw	r30, r28
    2268:	eb 50       	subi	r30, 0x0B	; 11
    226a:	fe 4f       	sbci	r31, 0xFE	; 254
    226c:	60 81       	ld	r22, Z
    226e:	71 81       	ldd	r23, Z+1	; 0x01
    2270:	82 81       	ldd	r24, Z+2	; 0x02
    2272:	93 81       	ldd	r25, Z+3	; 0x03
    2274:	20 e0       	ldi	r18, 0x00	; 0
    2276:	30 e0       	ldi	r19, 0x00	; 0
    2278:	4a e7       	ldi	r20, 0x7A	; 122
    227a:	53 e4       	ldi	r21, 0x43	; 67
    227c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2280:	dc 01       	movw	r26, r24
    2282:	cb 01       	movw	r24, r22
    2284:	f8 01       	movw	r30, r16
    2286:	80 83       	st	Z, r24
    2288:	91 83       	std	Z+1, r25	; 0x01
    228a:	a2 83       	std	Z+2, r26	; 0x02
    228c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    228e:	fe 01       	movw	r30, r28
    2290:	ef 50       	subi	r30, 0x0F	; 15
    2292:	fe 4f       	sbci	r31, 0xFE	; 254
    2294:	60 81       	ld	r22, Z
    2296:	71 81       	ldd	r23, Z+1	; 0x01
    2298:	82 81       	ldd	r24, Z+2	; 0x02
    229a:	93 81       	ldd	r25, Z+3	; 0x03
    229c:	20 e0       	ldi	r18, 0x00	; 0
    229e:	30 e0       	ldi	r19, 0x00	; 0
    22a0:	40 e8       	ldi	r20, 0x80	; 128
    22a2:	5f e3       	ldi	r21, 0x3F	; 63
    22a4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    22a8:	88 23       	and	r24, r24
    22aa:	44 f4       	brge	.+16     	; 0x22bc <main+0x97e>
		__ticks = 1;
    22ac:	fe 01       	movw	r30, r28
    22ae:	e1 51       	subi	r30, 0x11	; 17
    22b0:	fe 4f       	sbci	r31, 0xFE	; 254
    22b2:	81 e0       	ldi	r24, 0x01	; 1
    22b4:	90 e0       	ldi	r25, 0x00	; 0
    22b6:	91 83       	std	Z+1, r25	; 0x01
    22b8:	80 83       	st	Z, r24
    22ba:	64 c0       	rjmp	.+200    	; 0x2384 <main+0xa46>
	else if (__tmp > 65535)
    22bc:	fe 01       	movw	r30, r28
    22be:	ef 50       	subi	r30, 0x0F	; 15
    22c0:	fe 4f       	sbci	r31, 0xFE	; 254
    22c2:	60 81       	ld	r22, Z
    22c4:	71 81       	ldd	r23, Z+1	; 0x01
    22c6:	82 81       	ldd	r24, Z+2	; 0x02
    22c8:	93 81       	ldd	r25, Z+3	; 0x03
    22ca:	20 e0       	ldi	r18, 0x00	; 0
    22cc:	3f ef       	ldi	r19, 0xFF	; 255
    22ce:	4f e7       	ldi	r20, 0x7F	; 127
    22d0:	57 e4       	ldi	r21, 0x47	; 71
    22d2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    22d6:	18 16       	cp	r1, r24
    22d8:	0c f0       	brlt	.+2      	; 0x22dc <main+0x99e>
    22da:	43 c0       	rjmp	.+134    	; 0x2362 <main+0xa24>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22dc:	fe 01       	movw	r30, r28
    22de:	eb 50       	subi	r30, 0x0B	; 11
    22e0:	fe 4f       	sbci	r31, 0xFE	; 254
    22e2:	60 81       	ld	r22, Z
    22e4:	71 81       	ldd	r23, Z+1	; 0x01
    22e6:	82 81       	ldd	r24, Z+2	; 0x02
    22e8:	93 81       	ldd	r25, Z+3	; 0x03
    22ea:	20 e0       	ldi	r18, 0x00	; 0
    22ec:	30 e0       	ldi	r19, 0x00	; 0
    22ee:	40 e2       	ldi	r20, 0x20	; 32
    22f0:	51 e4       	ldi	r21, 0x41	; 65
    22f2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22f6:	dc 01       	movw	r26, r24
    22f8:	cb 01       	movw	r24, r22
    22fa:	8e 01       	movw	r16, r28
    22fc:	01 51       	subi	r16, 0x11	; 17
    22fe:	1e 4f       	sbci	r17, 0xFE	; 254
    2300:	bc 01       	movw	r22, r24
    2302:	cd 01       	movw	r24, r26
    2304:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2308:	dc 01       	movw	r26, r24
    230a:	cb 01       	movw	r24, r22
    230c:	f8 01       	movw	r30, r16
    230e:	91 83       	std	Z+1, r25	; 0x01
    2310:	80 83       	st	Z, r24
    2312:	1f c0       	rjmp	.+62     	; 0x2352 <main+0xa14>
    2314:	fe 01       	movw	r30, r28
    2316:	e3 51       	subi	r30, 0x13	; 19
    2318:	fe 4f       	sbci	r31, 0xFE	; 254
    231a:	89 e1       	ldi	r24, 0x19	; 25
    231c:	90 e0       	ldi	r25, 0x00	; 0
    231e:	91 83       	std	Z+1, r25	; 0x01
    2320:	80 83       	st	Z, r24
    2322:	fe 01       	movw	r30, r28
    2324:	e3 51       	subi	r30, 0x13	; 19
    2326:	fe 4f       	sbci	r31, 0xFE	; 254
    2328:	80 81       	ld	r24, Z
    232a:	91 81       	ldd	r25, Z+1	; 0x01
    232c:	01 97       	sbiw	r24, 0x01	; 1
    232e:	f1 f7       	brne	.-4      	; 0x232c <main+0x9ee>
    2330:	fe 01       	movw	r30, r28
    2332:	e3 51       	subi	r30, 0x13	; 19
    2334:	fe 4f       	sbci	r31, 0xFE	; 254
    2336:	91 83       	std	Z+1, r25	; 0x01
    2338:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    233a:	de 01       	movw	r26, r28
    233c:	a1 51       	subi	r26, 0x11	; 17
    233e:	be 4f       	sbci	r27, 0xFE	; 254
    2340:	fe 01       	movw	r30, r28
    2342:	e1 51       	subi	r30, 0x11	; 17
    2344:	fe 4f       	sbci	r31, 0xFE	; 254
    2346:	80 81       	ld	r24, Z
    2348:	91 81       	ldd	r25, Z+1	; 0x01
    234a:	01 97       	sbiw	r24, 0x01	; 1
    234c:	11 96       	adiw	r26, 0x01	; 1
    234e:	9c 93       	st	X, r25
    2350:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2352:	fe 01       	movw	r30, r28
    2354:	e1 51       	subi	r30, 0x11	; 17
    2356:	fe 4f       	sbci	r31, 0xFE	; 254
    2358:	80 81       	ld	r24, Z
    235a:	91 81       	ldd	r25, Z+1	; 0x01
    235c:	00 97       	sbiw	r24, 0x00	; 0
    235e:	d1 f6       	brne	.-76     	; 0x2314 <main+0x9d6>
    2360:	27 c0       	rjmp	.+78     	; 0x23b0 <main+0xa72>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2362:	8e 01       	movw	r16, r28
    2364:	01 51       	subi	r16, 0x11	; 17
    2366:	1e 4f       	sbci	r17, 0xFE	; 254
    2368:	fe 01       	movw	r30, r28
    236a:	ef 50       	subi	r30, 0x0F	; 15
    236c:	fe 4f       	sbci	r31, 0xFE	; 254
    236e:	60 81       	ld	r22, Z
    2370:	71 81       	ldd	r23, Z+1	; 0x01
    2372:	82 81       	ldd	r24, Z+2	; 0x02
    2374:	93 81       	ldd	r25, Z+3	; 0x03
    2376:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    237a:	dc 01       	movw	r26, r24
    237c:	cb 01       	movw	r24, r22
    237e:	f8 01       	movw	r30, r16
    2380:	91 83       	std	Z+1, r25	; 0x01
    2382:	80 83       	st	Z, r24
    2384:	de 01       	movw	r26, r28
    2386:	a5 51       	subi	r26, 0x15	; 21
    2388:	be 4f       	sbci	r27, 0xFE	; 254
    238a:	fe 01       	movw	r30, r28
    238c:	e1 51       	subi	r30, 0x11	; 17
    238e:	fe 4f       	sbci	r31, 0xFE	; 254
    2390:	80 81       	ld	r24, Z
    2392:	91 81       	ldd	r25, Z+1	; 0x01
    2394:	8d 93       	st	X+, r24
    2396:	9c 93       	st	X, r25
    2398:	fe 01       	movw	r30, r28
    239a:	e5 51       	subi	r30, 0x15	; 21
    239c:	fe 4f       	sbci	r31, 0xFE	; 254
    239e:	80 81       	ld	r24, Z
    23a0:	91 81       	ldd	r25, Z+1	; 0x01
    23a2:	01 97       	sbiw	r24, 0x01	; 1
    23a4:	f1 f7       	brne	.-4      	; 0x23a2 <main+0xa64>
    23a6:	fe 01       	movw	r30, r28
    23a8:	e5 51       	subi	r30, 0x15	; 21
    23aa:	fe 4f       	sbci	r31, 0xFE	; 254
    23ac:	91 83       	std	Z+1, r25	; 0x01
    23ae:	80 83       	st	Z, r24
		    _delay_ms(10);
		    EEPROM_readByte(0x08,&x8);
    23b0:	9e 01       	movw	r18, r28
    23b2:	23 5a       	subi	r18, 0xA3	; 163
    23b4:	3d 4f       	sbci	r19, 0xFD	; 253
    23b6:	88 e0       	ldi	r24, 0x08	; 8
    23b8:	90 e0       	ldi	r25, 0x00	; 0
    23ba:	b9 01       	movw	r22, r18
    23bc:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    23c0:	fe 01       	movw	r30, r28
    23c2:	e9 51       	subi	r30, 0x19	; 25
    23c4:	fe 4f       	sbci	r31, 0xFE	; 254
    23c6:	80 e0       	ldi	r24, 0x00	; 0
    23c8:	90 e0       	ldi	r25, 0x00	; 0
    23ca:	a0 e2       	ldi	r26, 0x20	; 32
    23cc:	b1 e4       	ldi	r27, 0x41	; 65
    23ce:	80 83       	st	Z, r24
    23d0:	91 83       	std	Z+1, r25	; 0x01
    23d2:	a2 83       	std	Z+2, r26	; 0x02
    23d4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23d6:	8e 01       	movw	r16, r28
    23d8:	0d 51       	subi	r16, 0x1D	; 29
    23da:	1e 4f       	sbci	r17, 0xFE	; 254
    23dc:	fe 01       	movw	r30, r28
    23de:	e9 51       	subi	r30, 0x19	; 25
    23e0:	fe 4f       	sbci	r31, 0xFE	; 254
    23e2:	60 81       	ld	r22, Z
    23e4:	71 81       	ldd	r23, Z+1	; 0x01
    23e6:	82 81       	ldd	r24, Z+2	; 0x02
    23e8:	93 81       	ldd	r25, Z+3	; 0x03
    23ea:	20 e0       	ldi	r18, 0x00	; 0
    23ec:	30 e0       	ldi	r19, 0x00	; 0
    23ee:	4a e7       	ldi	r20, 0x7A	; 122
    23f0:	53 e4       	ldi	r21, 0x43	; 67
    23f2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23f6:	dc 01       	movw	r26, r24
    23f8:	cb 01       	movw	r24, r22
    23fa:	f8 01       	movw	r30, r16
    23fc:	80 83       	st	Z, r24
    23fe:	91 83       	std	Z+1, r25	; 0x01
    2400:	a2 83       	std	Z+2, r26	; 0x02
    2402:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2404:	fe 01       	movw	r30, r28
    2406:	ed 51       	subi	r30, 0x1D	; 29
    2408:	fe 4f       	sbci	r31, 0xFE	; 254
    240a:	60 81       	ld	r22, Z
    240c:	71 81       	ldd	r23, Z+1	; 0x01
    240e:	82 81       	ldd	r24, Z+2	; 0x02
    2410:	93 81       	ldd	r25, Z+3	; 0x03
    2412:	20 e0       	ldi	r18, 0x00	; 0
    2414:	30 e0       	ldi	r19, 0x00	; 0
    2416:	40 e8       	ldi	r20, 0x80	; 128
    2418:	5f e3       	ldi	r21, 0x3F	; 63
    241a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    241e:	88 23       	and	r24, r24
    2420:	44 f4       	brge	.+16     	; 0x2432 <main+0xaf4>
		__ticks = 1;
    2422:	fe 01       	movw	r30, r28
    2424:	ef 51       	subi	r30, 0x1F	; 31
    2426:	fe 4f       	sbci	r31, 0xFE	; 254
    2428:	81 e0       	ldi	r24, 0x01	; 1
    242a:	90 e0       	ldi	r25, 0x00	; 0
    242c:	91 83       	std	Z+1, r25	; 0x01
    242e:	80 83       	st	Z, r24
    2430:	64 c0       	rjmp	.+200    	; 0x24fa <main+0xbbc>
	else if (__tmp > 65535)
    2432:	fe 01       	movw	r30, r28
    2434:	ed 51       	subi	r30, 0x1D	; 29
    2436:	fe 4f       	sbci	r31, 0xFE	; 254
    2438:	60 81       	ld	r22, Z
    243a:	71 81       	ldd	r23, Z+1	; 0x01
    243c:	82 81       	ldd	r24, Z+2	; 0x02
    243e:	93 81       	ldd	r25, Z+3	; 0x03
    2440:	20 e0       	ldi	r18, 0x00	; 0
    2442:	3f ef       	ldi	r19, 0xFF	; 255
    2444:	4f e7       	ldi	r20, 0x7F	; 127
    2446:	57 e4       	ldi	r21, 0x47	; 71
    2448:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    244c:	18 16       	cp	r1, r24
    244e:	0c f0       	brlt	.+2      	; 0x2452 <main+0xb14>
    2450:	43 c0       	rjmp	.+134    	; 0x24d8 <main+0xb9a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2452:	fe 01       	movw	r30, r28
    2454:	e9 51       	subi	r30, 0x19	; 25
    2456:	fe 4f       	sbci	r31, 0xFE	; 254
    2458:	60 81       	ld	r22, Z
    245a:	71 81       	ldd	r23, Z+1	; 0x01
    245c:	82 81       	ldd	r24, Z+2	; 0x02
    245e:	93 81       	ldd	r25, Z+3	; 0x03
    2460:	20 e0       	ldi	r18, 0x00	; 0
    2462:	30 e0       	ldi	r19, 0x00	; 0
    2464:	40 e2       	ldi	r20, 0x20	; 32
    2466:	51 e4       	ldi	r21, 0x41	; 65
    2468:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    246c:	dc 01       	movw	r26, r24
    246e:	cb 01       	movw	r24, r22
    2470:	8e 01       	movw	r16, r28
    2472:	0f 51       	subi	r16, 0x1F	; 31
    2474:	1e 4f       	sbci	r17, 0xFE	; 254
    2476:	bc 01       	movw	r22, r24
    2478:	cd 01       	movw	r24, r26
    247a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    247e:	dc 01       	movw	r26, r24
    2480:	cb 01       	movw	r24, r22
    2482:	f8 01       	movw	r30, r16
    2484:	91 83       	std	Z+1, r25	; 0x01
    2486:	80 83       	st	Z, r24
    2488:	1f c0       	rjmp	.+62     	; 0x24c8 <main+0xb8a>
    248a:	fe 01       	movw	r30, r28
    248c:	e1 52       	subi	r30, 0x21	; 33
    248e:	fe 4f       	sbci	r31, 0xFE	; 254
    2490:	89 e1       	ldi	r24, 0x19	; 25
    2492:	90 e0       	ldi	r25, 0x00	; 0
    2494:	91 83       	std	Z+1, r25	; 0x01
    2496:	80 83       	st	Z, r24
    2498:	fe 01       	movw	r30, r28
    249a:	e1 52       	subi	r30, 0x21	; 33
    249c:	fe 4f       	sbci	r31, 0xFE	; 254
    249e:	80 81       	ld	r24, Z
    24a0:	91 81       	ldd	r25, Z+1	; 0x01
    24a2:	01 97       	sbiw	r24, 0x01	; 1
    24a4:	f1 f7       	brne	.-4      	; 0x24a2 <main+0xb64>
    24a6:	fe 01       	movw	r30, r28
    24a8:	e1 52       	subi	r30, 0x21	; 33
    24aa:	fe 4f       	sbci	r31, 0xFE	; 254
    24ac:	91 83       	std	Z+1, r25	; 0x01
    24ae:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24b0:	de 01       	movw	r26, r28
    24b2:	af 51       	subi	r26, 0x1F	; 31
    24b4:	be 4f       	sbci	r27, 0xFE	; 254
    24b6:	fe 01       	movw	r30, r28
    24b8:	ef 51       	subi	r30, 0x1F	; 31
    24ba:	fe 4f       	sbci	r31, 0xFE	; 254
    24bc:	80 81       	ld	r24, Z
    24be:	91 81       	ldd	r25, Z+1	; 0x01
    24c0:	01 97       	sbiw	r24, 0x01	; 1
    24c2:	11 96       	adiw	r26, 0x01	; 1
    24c4:	9c 93       	st	X, r25
    24c6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24c8:	fe 01       	movw	r30, r28
    24ca:	ef 51       	subi	r30, 0x1F	; 31
    24cc:	fe 4f       	sbci	r31, 0xFE	; 254
    24ce:	80 81       	ld	r24, Z
    24d0:	91 81       	ldd	r25, Z+1	; 0x01
    24d2:	00 97       	sbiw	r24, 0x00	; 0
    24d4:	d1 f6       	brne	.-76     	; 0x248a <main+0xb4c>
    24d6:	27 c0       	rjmp	.+78     	; 0x2526 <main+0xbe8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24d8:	8e 01       	movw	r16, r28
    24da:	0f 51       	subi	r16, 0x1F	; 31
    24dc:	1e 4f       	sbci	r17, 0xFE	; 254
    24de:	fe 01       	movw	r30, r28
    24e0:	ed 51       	subi	r30, 0x1D	; 29
    24e2:	fe 4f       	sbci	r31, 0xFE	; 254
    24e4:	60 81       	ld	r22, Z
    24e6:	71 81       	ldd	r23, Z+1	; 0x01
    24e8:	82 81       	ldd	r24, Z+2	; 0x02
    24ea:	93 81       	ldd	r25, Z+3	; 0x03
    24ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24f0:	dc 01       	movw	r26, r24
    24f2:	cb 01       	movw	r24, r22
    24f4:	f8 01       	movw	r30, r16
    24f6:	91 83       	std	Z+1, r25	; 0x01
    24f8:	80 83       	st	Z, r24
    24fa:	de 01       	movw	r26, r28
    24fc:	a3 52       	subi	r26, 0x23	; 35
    24fe:	be 4f       	sbci	r27, 0xFE	; 254
    2500:	fe 01       	movw	r30, r28
    2502:	ef 51       	subi	r30, 0x1F	; 31
    2504:	fe 4f       	sbci	r31, 0xFE	; 254
    2506:	80 81       	ld	r24, Z
    2508:	91 81       	ldd	r25, Z+1	; 0x01
    250a:	8d 93       	st	X+, r24
    250c:	9c 93       	st	X, r25
    250e:	fe 01       	movw	r30, r28
    2510:	e3 52       	subi	r30, 0x23	; 35
    2512:	fe 4f       	sbci	r31, 0xFE	; 254
    2514:	80 81       	ld	r24, Z
    2516:	91 81       	ldd	r25, Z+1	; 0x01
    2518:	01 97       	sbiw	r24, 0x01	; 1
    251a:	f1 f7       	brne	.-4      	; 0x2518 <main+0xbda>
    251c:	fe 01       	movw	r30, r28
    251e:	e3 52       	subi	r30, 0x23	; 35
    2520:	fe 4f       	sbci	r31, 0xFE	; 254
    2522:	91 83       	std	Z+1, r25	; 0x01
    2524:	80 83       	st	Z, r24

		/************************************************************/
		/*** send the last password to the other micro-controller ***/
		/************************************************************/

		    UART_sendByte(x1);
    2526:	fe 01       	movw	r30, r28
    2528:	ea 5a       	subi	r30, 0xAA	; 170
    252a:	fd 4f       	sbci	r31, 0xFD	; 253
    252c:	80 81       	ld	r24, Z
    252e:	0e 94 ba 2a 	call	0x5574	; 0x5574 <UART_sendByte>
    2532:	fe 01       	movw	r30, r28
    2534:	e7 52       	subi	r30, 0x27	; 39
    2536:	fe 4f       	sbci	r31, 0xFE	; 254
    2538:	80 e0       	ldi	r24, 0x00	; 0
    253a:	90 e0       	ldi	r25, 0x00	; 0
    253c:	a0 e8       	ldi	r26, 0x80	; 128
    253e:	bf e3       	ldi	r27, 0x3F	; 63
    2540:	80 83       	st	Z, r24
    2542:	91 83       	std	Z+1, r25	; 0x01
    2544:	a2 83       	std	Z+2, r26	; 0x02
    2546:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2548:	8e 01       	movw	r16, r28
    254a:	0b 52       	subi	r16, 0x2B	; 43
    254c:	1e 4f       	sbci	r17, 0xFE	; 254
    254e:	fe 01       	movw	r30, r28
    2550:	e7 52       	subi	r30, 0x27	; 39
    2552:	fe 4f       	sbci	r31, 0xFE	; 254
    2554:	60 81       	ld	r22, Z
    2556:	71 81       	ldd	r23, Z+1	; 0x01
    2558:	82 81       	ldd	r24, Z+2	; 0x02
    255a:	93 81       	ldd	r25, Z+3	; 0x03
    255c:	20 e0       	ldi	r18, 0x00	; 0
    255e:	30 e0       	ldi	r19, 0x00	; 0
    2560:	4a e7       	ldi	r20, 0x7A	; 122
    2562:	53 e4       	ldi	r21, 0x43	; 67
    2564:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2568:	dc 01       	movw	r26, r24
    256a:	cb 01       	movw	r24, r22
    256c:	f8 01       	movw	r30, r16
    256e:	80 83       	st	Z, r24
    2570:	91 83       	std	Z+1, r25	; 0x01
    2572:	a2 83       	std	Z+2, r26	; 0x02
    2574:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2576:	fe 01       	movw	r30, r28
    2578:	eb 52       	subi	r30, 0x2B	; 43
    257a:	fe 4f       	sbci	r31, 0xFE	; 254
    257c:	60 81       	ld	r22, Z
    257e:	71 81       	ldd	r23, Z+1	; 0x01
    2580:	82 81       	ldd	r24, Z+2	; 0x02
    2582:	93 81       	ldd	r25, Z+3	; 0x03
    2584:	20 e0       	ldi	r18, 0x00	; 0
    2586:	30 e0       	ldi	r19, 0x00	; 0
    2588:	40 e8       	ldi	r20, 0x80	; 128
    258a:	5f e3       	ldi	r21, 0x3F	; 63
    258c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2590:	88 23       	and	r24, r24
    2592:	44 f4       	brge	.+16     	; 0x25a4 <main+0xc66>
		__ticks = 1;
    2594:	fe 01       	movw	r30, r28
    2596:	ed 52       	subi	r30, 0x2D	; 45
    2598:	fe 4f       	sbci	r31, 0xFE	; 254
    259a:	81 e0       	ldi	r24, 0x01	; 1
    259c:	90 e0       	ldi	r25, 0x00	; 0
    259e:	91 83       	std	Z+1, r25	; 0x01
    25a0:	80 83       	st	Z, r24
    25a2:	64 c0       	rjmp	.+200    	; 0x266c <main+0xd2e>
	else if (__tmp > 65535)
    25a4:	fe 01       	movw	r30, r28
    25a6:	eb 52       	subi	r30, 0x2B	; 43
    25a8:	fe 4f       	sbci	r31, 0xFE	; 254
    25aa:	60 81       	ld	r22, Z
    25ac:	71 81       	ldd	r23, Z+1	; 0x01
    25ae:	82 81       	ldd	r24, Z+2	; 0x02
    25b0:	93 81       	ldd	r25, Z+3	; 0x03
    25b2:	20 e0       	ldi	r18, 0x00	; 0
    25b4:	3f ef       	ldi	r19, 0xFF	; 255
    25b6:	4f e7       	ldi	r20, 0x7F	; 127
    25b8:	57 e4       	ldi	r21, 0x47	; 71
    25ba:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    25be:	18 16       	cp	r1, r24
    25c0:	0c f0       	brlt	.+2      	; 0x25c4 <main+0xc86>
    25c2:	43 c0       	rjmp	.+134    	; 0x264a <main+0xd0c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25c4:	fe 01       	movw	r30, r28
    25c6:	e7 52       	subi	r30, 0x27	; 39
    25c8:	fe 4f       	sbci	r31, 0xFE	; 254
    25ca:	60 81       	ld	r22, Z
    25cc:	71 81       	ldd	r23, Z+1	; 0x01
    25ce:	82 81       	ldd	r24, Z+2	; 0x02
    25d0:	93 81       	ldd	r25, Z+3	; 0x03
    25d2:	20 e0       	ldi	r18, 0x00	; 0
    25d4:	30 e0       	ldi	r19, 0x00	; 0
    25d6:	40 e2       	ldi	r20, 0x20	; 32
    25d8:	51 e4       	ldi	r21, 0x41	; 65
    25da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25de:	dc 01       	movw	r26, r24
    25e0:	cb 01       	movw	r24, r22
    25e2:	8e 01       	movw	r16, r28
    25e4:	0d 52       	subi	r16, 0x2D	; 45
    25e6:	1e 4f       	sbci	r17, 0xFE	; 254
    25e8:	bc 01       	movw	r22, r24
    25ea:	cd 01       	movw	r24, r26
    25ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25f0:	dc 01       	movw	r26, r24
    25f2:	cb 01       	movw	r24, r22
    25f4:	f8 01       	movw	r30, r16
    25f6:	91 83       	std	Z+1, r25	; 0x01
    25f8:	80 83       	st	Z, r24
    25fa:	1f c0       	rjmp	.+62     	; 0x263a <main+0xcfc>
    25fc:	fe 01       	movw	r30, r28
    25fe:	ef 52       	subi	r30, 0x2F	; 47
    2600:	fe 4f       	sbci	r31, 0xFE	; 254
    2602:	89 e1       	ldi	r24, 0x19	; 25
    2604:	90 e0       	ldi	r25, 0x00	; 0
    2606:	91 83       	std	Z+1, r25	; 0x01
    2608:	80 83       	st	Z, r24
    260a:	fe 01       	movw	r30, r28
    260c:	ef 52       	subi	r30, 0x2F	; 47
    260e:	fe 4f       	sbci	r31, 0xFE	; 254
    2610:	80 81       	ld	r24, Z
    2612:	91 81       	ldd	r25, Z+1	; 0x01
    2614:	01 97       	sbiw	r24, 0x01	; 1
    2616:	f1 f7       	brne	.-4      	; 0x2614 <main+0xcd6>
    2618:	fe 01       	movw	r30, r28
    261a:	ef 52       	subi	r30, 0x2F	; 47
    261c:	fe 4f       	sbci	r31, 0xFE	; 254
    261e:	91 83       	std	Z+1, r25	; 0x01
    2620:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2622:	de 01       	movw	r26, r28
    2624:	ad 52       	subi	r26, 0x2D	; 45
    2626:	be 4f       	sbci	r27, 0xFE	; 254
    2628:	fe 01       	movw	r30, r28
    262a:	ed 52       	subi	r30, 0x2D	; 45
    262c:	fe 4f       	sbci	r31, 0xFE	; 254
    262e:	80 81       	ld	r24, Z
    2630:	91 81       	ldd	r25, Z+1	; 0x01
    2632:	01 97       	sbiw	r24, 0x01	; 1
    2634:	11 96       	adiw	r26, 0x01	; 1
    2636:	9c 93       	st	X, r25
    2638:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    263a:	fe 01       	movw	r30, r28
    263c:	ed 52       	subi	r30, 0x2D	; 45
    263e:	fe 4f       	sbci	r31, 0xFE	; 254
    2640:	80 81       	ld	r24, Z
    2642:	91 81       	ldd	r25, Z+1	; 0x01
    2644:	00 97       	sbiw	r24, 0x00	; 0
    2646:	d1 f6       	brne	.-76     	; 0x25fc <main+0xcbe>
    2648:	27 c0       	rjmp	.+78     	; 0x2698 <main+0xd5a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    264a:	8e 01       	movw	r16, r28
    264c:	0d 52       	subi	r16, 0x2D	; 45
    264e:	1e 4f       	sbci	r17, 0xFE	; 254
    2650:	fe 01       	movw	r30, r28
    2652:	eb 52       	subi	r30, 0x2B	; 43
    2654:	fe 4f       	sbci	r31, 0xFE	; 254
    2656:	60 81       	ld	r22, Z
    2658:	71 81       	ldd	r23, Z+1	; 0x01
    265a:	82 81       	ldd	r24, Z+2	; 0x02
    265c:	93 81       	ldd	r25, Z+3	; 0x03
    265e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2662:	dc 01       	movw	r26, r24
    2664:	cb 01       	movw	r24, r22
    2666:	f8 01       	movw	r30, r16
    2668:	91 83       	std	Z+1, r25	; 0x01
    266a:	80 83       	st	Z, r24
    266c:	de 01       	movw	r26, r28
    266e:	a1 53       	subi	r26, 0x31	; 49
    2670:	be 4f       	sbci	r27, 0xFE	; 254
    2672:	fe 01       	movw	r30, r28
    2674:	ed 52       	subi	r30, 0x2D	; 45
    2676:	fe 4f       	sbci	r31, 0xFE	; 254
    2678:	80 81       	ld	r24, Z
    267a:	91 81       	ldd	r25, Z+1	; 0x01
    267c:	8d 93       	st	X+, r24
    267e:	9c 93       	st	X, r25
    2680:	fe 01       	movw	r30, r28
    2682:	e1 53       	subi	r30, 0x31	; 49
    2684:	fe 4f       	sbci	r31, 0xFE	; 254
    2686:	80 81       	ld	r24, Z
    2688:	91 81       	ldd	r25, Z+1	; 0x01
    268a:	01 97       	sbiw	r24, 0x01	; 1
    268c:	f1 f7       	brne	.-4      	; 0x268a <main+0xd4c>
    268e:	fe 01       	movw	r30, r28
    2690:	e1 53       	subi	r30, 0x31	; 49
    2692:	fe 4f       	sbci	r31, 0xFE	; 254
    2694:	91 83       	std	Z+1, r25	; 0x01
    2696:	80 83       	st	Z, r24
		    _delay_ms(1);
		    UART_sendByte(x2);
    2698:	fe 01       	movw	r30, r28
    269a:	e9 5a       	subi	r30, 0xA9	; 169
    269c:	fd 4f       	sbci	r31, 0xFD	; 253
    269e:	80 81       	ld	r24, Z
    26a0:	0e 94 ba 2a 	call	0x5574	; 0x5574 <UART_sendByte>
    26a4:	fe 01       	movw	r30, r28
    26a6:	e5 53       	subi	r30, 0x35	; 53
    26a8:	fe 4f       	sbci	r31, 0xFE	; 254
    26aa:	80 e0       	ldi	r24, 0x00	; 0
    26ac:	90 e0       	ldi	r25, 0x00	; 0
    26ae:	a0 e8       	ldi	r26, 0x80	; 128
    26b0:	bf e3       	ldi	r27, 0x3F	; 63
    26b2:	80 83       	st	Z, r24
    26b4:	91 83       	std	Z+1, r25	; 0x01
    26b6:	a2 83       	std	Z+2, r26	; 0x02
    26b8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26ba:	8e 01       	movw	r16, r28
    26bc:	09 53       	subi	r16, 0x39	; 57
    26be:	1e 4f       	sbci	r17, 0xFE	; 254
    26c0:	fe 01       	movw	r30, r28
    26c2:	e5 53       	subi	r30, 0x35	; 53
    26c4:	fe 4f       	sbci	r31, 0xFE	; 254
    26c6:	60 81       	ld	r22, Z
    26c8:	71 81       	ldd	r23, Z+1	; 0x01
    26ca:	82 81       	ldd	r24, Z+2	; 0x02
    26cc:	93 81       	ldd	r25, Z+3	; 0x03
    26ce:	20 e0       	ldi	r18, 0x00	; 0
    26d0:	30 e0       	ldi	r19, 0x00	; 0
    26d2:	4a e7       	ldi	r20, 0x7A	; 122
    26d4:	53 e4       	ldi	r21, 0x43	; 67
    26d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26da:	dc 01       	movw	r26, r24
    26dc:	cb 01       	movw	r24, r22
    26de:	f8 01       	movw	r30, r16
    26e0:	80 83       	st	Z, r24
    26e2:	91 83       	std	Z+1, r25	; 0x01
    26e4:	a2 83       	std	Z+2, r26	; 0x02
    26e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26e8:	fe 01       	movw	r30, r28
    26ea:	e9 53       	subi	r30, 0x39	; 57
    26ec:	fe 4f       	sbci	r31, 0xFE	; 254
    26ee:	60 81       	ld	r22, Z
    26f0:	71 81       	ldd	r23, Z+1	; 0x01
    26f2:	82 81       	ldd	r24, Z+2	; 0x02
    26f4:	93 81       	ldd	r25, Z+3	; 0x03
    26f6:	20 e0       	ldi	r18, 0x00	; 0
    26f8:	30 e0       	ldi	r19, 0x00	; 0
    26fa:	40 e8       	ldi	r20, 0x80	; 128
    26fc:	5f e3       	ldi	r21, 0x3F	; 63
    26fe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2702:	88 23       	and	r24, r24
    2704:	44 f4       	brge	.+16     	; 0x2716 <main+0xdd8>
		__ticks = 1;
    2706:	fe 01       	movw	r30, r28
    2708:	eb 53       	subi	r30, 0x3B	; 59
    270a:	fe 4f       	sbci	r31, 0xFE	; 254
    270c:	81 e0       	ldi	r24, 0x01	; 1
    270e:	90 e0       	ldi	r25, 0x00	; 0
    2710:	91 83       	std	Z+1, r25	; 0x01
    2712:	80 83       	st	Z, r24
    2714:	64 c0       	rjmp	.+200    	; 0x27de <main+0xea0>
	else if (__tmp > 65535)
    2716:	fe 01       	movw	r30, r28
    2718:	e9 53       	subi	r30, 0x39	; 57
    271a:	fe 4f       	sbci	r31, 0xFE	; 254
    271c:	60 81       	ld	r22, Z
    271e:	71 81       	ldd	r23, Z+1	; 0x01
    2720:	82 81       	ldd	r24, Z+2	; 0x02
    2722:	93 81       	ldd	r25, Z+3	; 0x03
    2724:	20 e0       	ldi	r18, 0x00	; 0
    2726:	3f ef       	ldi	r19, 0xFF	; 255
    2728:	4f e7       	ldi	r20, 0x7F	; 127
    272a:	57 e4       	ldi	r21, 0x47	; 71
    272c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2730:	18 16       	cp	r1, r24
    2732:	0c f0       	brlt	.+2      	; 0x2736 <main+0xdf8>
    2734:	43 c0       	rjmp	.+134    	; 0x27bc <main+0xe7e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2736:	fe 01       	movw	r30, r28
    2738:	e5 53       	subi	r30, 0x35	; 53
    273a:	fe 4f       	sbci	r31, 0xFE	; 254
    273c:	60 81       	ld	r22, Z
    273e:	71 81       	ldd	r23, Z+1	; 0x01
    2740:	82 81       	ldd	r24, Z+2	; 0x02
    2742:	93 81       	ldd	r25, Z+3	; 0x03
    2744:	20 e0       	ldi	r18, 0x00	; 0
    2746:	30 e0       	ldi	r19, 0x00	; 0
    2748:	40 e2       	ldi	r20, 0x20	; 32
    274a:	51 e4       	ldi	r21, 0x41	; 65
    274c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2750:	dc 01       	movw	r26, r24
    2752:	cb 01       	movw	r24, r22
    2754:	8e 01       	movw	r16, r28
    2756:	0b 53       	subi	r16, 0x3B	; 59
    2758:	1e 4f       	sbci	r17, 0xFE	; 254
    275a:	bc 01       	movw	r22, r24
    275c:	cd 01       	movw	r24, r26
    275e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2762:	dc 01       	movw	r26, r24
    2764:	cb 01       	movw	r24, r22
    2766:	f8 01       	movw	r30, r16
    2768:	91 83       	std	Z+1, r25	; 0x01
    276a:	80 83       	st	Z, r24
    276c:	1f c0       	rjmp	.+62     	; 0x27ac <main+0xe6e>
    276e:	fe 01       	movw	r30, r28
    2770:	ed 53       	subi	r30, 0x3D	; 61
    2772:	fe 4f       	sbci	r31, 0xFE	; 254
    2774:	89 e1       	ldi	r24, 0x19	; 25
    2776:	90 e0       	ldi	r25, 0x00	; 0
    2778:	91 83       	std	Z+1, r25	; 0x01
    277a:	80 83       	st	Z, r24
    277c:	fe 01       	movw	r30, r28
    277e:	ed 53       	subi	r30, 0x3D	; 61
    2780:	fe 4f       	sbci	r31, 0xFE	; 254
    2782:	80 81       	ld	r24, Z
    2784:	91 81       	ldd	r25, Z+1	; 0x01
    2786:	01 97       	sbiw	r24, 0x01	; 1
    2788:	f1 f7       	brne	.-4      	; 0x2786 <main+0xe48>
    278a:	fe 01       	movw	r30, r28
    278c:	ed 53       	subi	r30, 0x3D	; 61
    278e:	fe 4f       	sbci	r31, 0xFE	; 254
    2790:	91 83       	std	Z+1, r25	; 0x01
    2792:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2794:	de 01       	movw	r26, r28
    2796:	ab 53       	subi	r26, 0x3B	; 59
    2798:	be 4f       	sbci	r27, 0xFE	; 254
    279a:	fe 01       	movw	r30, r28
    279c:	eb 53       	subi	r30, 0x3B	; 59
    279e:	fe 4f       	sbci	r31, 0xFE	; 254
    27a0:	80 81       	ld	r24, Z
    27a2:	91 81       	ldd	r25, Z+1	; 0x01
    27a4:	01 97       	sbiw	r24, 0x01	; 1
    27a6:	11 96       	adiw	r26, 0x01	; 1
    27a8:	9c 93       	st	X, r25
    27aa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27ac:	fe 01       	movw	r30, r28
    27ae:	eb 53       	subi	r30, 0x3B	; 59
    27b0:	fe 4f       	sbci	r31, 0xFE	; 254
    27b2:	80 81       	ld	r24, Z
    27b4:	91 81       	ldd	r25, Z+1	; 0x01
    27b6:	00 97       	sbiw	r24, 0x00	; 0
    27b8:	d1 f6       	brne	.-76     	; 0x276e <main+0xe30>
    27ba:	27 c0       	rjmp	.+78     	; 0x280a <main+0xecc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27bc:	8e 01       	movw	r16, r28
    27be:	0b 53       	subi	r16, 0x3B	; 59
    27c0:	1e 4f       	sbci	r17, 0xFE	; 254
    27c2:	fe 01       	movw	r30, r28
    27c4:	e9 53       	subi	r30, 0x39	; 57
    27c6:	fe 4f       	sbci	r31, 0xFE	; 254
    27c8:	60 81       	ld	r22, Z
    27ca:	71 81       	ldd	r23, Z+1	; 0x01
    27cc:	82 81       	ldd	r24, Z+2	; 0x02
    27ce:	93 81       	ldd	r25, Z+3	; 0x03
    27d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27d4:	dc 01       	movw	r26, r24
    27d6:	cb 01       	movw	r24, r22
    27d8:	f8 01       	movw	r30, r16
    27da:	91 83       	std	Z+1, r25	; 0x01
    27dc:	80 83       	st	Z, r24
    27de:	de 01       	movw	r26, r28
    27e0:	af 53       	subi	r26, 0x3F	; 63
    27e2:	be 4f       	sbci	r27, 0xFE	; 254
    27e4:	fe 01       	movw	r30, r28
    27e6:	eb 53       	subi	r30, 0x3B	; 59
    27e8:	fe 4f       	sbci	r31, 0xFE	; 254
    27ea:	80 81       	ld	r24, Z
    27ec:	91 81       	ldd	r25, Z+1	; 0x01
    27ee:	8d 93       	st	X+, r24
    27f0:	9c 93       	st	X, r25
    27f2:	fe 01       	movw	r30, r28
    27f4:	ef 53       	subi	r30, 0x3F	; 63
    27f6:	fe 4f       	sbci	r31, 0xFE	; 254
    27f8:	80 81       	ld	r24, Z
    27fa:	91 81       	ldd	r25, Z+1	; 0x01
    27fc:	01 97       	sbiw	r24, 0x01	; 1
    27fe:	f1 f7       	brne	.-4      	; 0x27fc <main+0xebe>
    2800:	fe 01       	movw	r30, r28
    2802:	ef 53       	subi	r30, 0x3F	; 63
    2804:	fe 4f       	sbci	r31, 0xFE	; 254
    2806:	91 83       	std	Z+1, r25	; 0x01
    2808:	80 83       	st	Z, r24
		    _delay_ms(1);
		    UART_sendByte(x3);
    280a:	fe 01       	movw	r30, r28
    280c:	e8 5a       	subi	r30, 0xA8	; 168
    280e:	fd 4f       	sbci	r31, 0xFD	; 253
    2810:	80 81       	ld	r24, Z
    2812:	0e 94 ba 2a 	call	0x5574	; 0x5574 <UART_sendByte>
    2816:	fe 01       	movw	r30, r28
    2818:	e3 54       	subi	r30, 0x43	; 67
    281a:	fe 4f       	sbci	r31, 0xFE	; 254
    281c:	80 e0       	ldi	r24, 0x00	; 0
    281e:	90 e0       	ldi	r25, 0x00	; 0
    2820:	a0 e8       	ldi	r26, 0x80	; 128
    2822:	bf e3       	ldi	r27, 0x3F	; 63
    2824:	80 83       	st	Z, r24
    2826:	91 83       	std	Z+1, r25	; 0x01
    2828:	a2 83       	std	Z+2, r26	; 0x02
    282a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    282c:	8e 01       	movw	r16, r28
    282e:	07 54       	subi	r16, 0x47	; 71
    2830:	1e 4f       	sbci	r17, 0xFE	; 254
    2832:	fe 01       	movw	r30, r28
    2834:	e3 54       	subi	r30, 0x43	; 67
    2836:	fe 4f       	sbci	r31, 0xFE	; 254
    2838:	60 81       	ld	r22, Z
    283a:	71 81       	ldd	r23, Z+1	; 0x01
    283c:	82 81       	ldd	r24, Z+2	; 0x02
    283e:	93 81       	ldd	r25, Z+3	; 0x03
    2840:	20 e0       	ldi	r18, 0x00	; 0
    2842:	30 e0       	ldi	r19, 0x00	; 0
    2844:	4a e7       	ldi	r20, 0x7A	; 122
    2846:	53 e4       	ldi	r21, 0x43	; 67
    2848:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    284c:	dc 01       	movw	r26, r24
    284e:	cb 01       	movw	r24, r22
    2850:	f8 01       	movw	r30, r16
    2852:	80 83       	st	Z, r24
    2854:	91 83       	std	Z+1, r25	; 0x01
    2856:	a2 83       	std	Z+2, r26	; 0x02
    2858:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    285a:	fe 01       	movw	r30, r28
    285c:	e7 54       	subi	r30, 0x47	; 71
    285e:	fe 4f       	sbci	r31, 0xFE	; 254
    2860:	60 81       	ld	r22, Z
    2862:	71 81       	ldd	r23, Z+1	; 0x01
    2864:	82 81       	ldd	r24, Z+2	; 0x02
    2866:	93 81       	ldd	r25, Z+3	; 0x03
    2868:	20 e0       	ldi	r18, 0x00	; 0
    286a:	30 e0       	ldi	r19, 0x00	; 0
    286c:	40 e8       	ldi	r20, 0x80	; 128
    286e:	5f e3       	ldi	r21, 0x3F	; 63
    2870:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2874:	88 23       	and	r24, r24
    2876:	44 f4       	brge	.+16     	; 0x2888 <main+0xf4a>
		__ticks = 1;
    2878:	fe 01       	movw	r30, r28
    287a:	e9 54       	subi	r30, 0x49	; 73
    287c:	fe 4f       	sbci	r31, 0xFE	; 254
    287e:	81 e0       	ldi	r24, 0x01	; 1
    2880:	90 e0       	ldi	r25, 0x00	; 0
    2882:	91 83       	std	Z+1, r25	; 0x01
    2884:	80 83       	st	Z, r24
    2886:	64 c0       	rjmp	.+200    	; 0x2950 <main+0x1012>
	else if (__tmp > 65535)
    2888:	fe 01       	movw	r30, r28
    288a:	e7 54       	subi	r30, 0x47	; 71
    288c:	fe 4f       	sbci	r31, 0xFE	; 254
    288e:	60 81       	ld	r22, Z
    2890:	71 81       	ldd	r23, Z+1	; 0x01
    2892:	82 81       	ldd	r24, Z+2	; 0x02
    2894:	93 81       	ldd	r25, Z+3	; 0x03
    2896:	20 e0       	ldi	r18, 0x00	; 0
    2898:	3f ef       	ldi	r19, 0xFF	; 255
    289a:	4f e7       	ldi	r20, 0x7F	; 127
    289c:	57 e4       	ldi	r21, 0x47	; 71
    289e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    28a2:	18 16       	cp	r1, r24
    28a4:	0c f0       	brlt	.+2      	; 0x28a8 <main+0xf6a>
    28a6:	43 c0       	rjmp	.+134    	; 0x292e <main+0xff0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28a8:	fe 01       	movw	r30, r28
    28aa:	e3 54       	subi	r30, 0x43	; 67
    28ac:	fe 4f       	sbci	r31, 0xFE	; 254
    28ae:	60 81       	ld	r22, Z
    28b0:	71 81       	ldd	r23, Z+1	; 0x01
    28b2:	82 81       	ldd	r24, Z+2	; 0x02
    28b4:	93 81       	ldd	r25, Z+3	; 0x03
    28b6:	20 e0       	ldi	r18, 0x00	; 0
    28b8:	30 e0       	ldi	r19, 0x00	; 0
    28ba:	40 e2       	ldi	r20, 0x20	; 32
    28bc:	51 e4       	ldi	r21, 0x41	; 65
    28be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28c2:	dc 01       	movw	r26, r24
    28c4:	cb 01       	movw	r24, r22
    28c6:	8e 01       	movw	r16, r28
    28c8:	09 54       	subi	r16, 0x49	; 73
    28ca:	1e 4f       	sbci	r17, 0xFE	; 254
    28cc:	bc 01       	movw	r22, r24
    28ce:	cd 01       	movw	r24, r26
    28d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28d4:	dc 01       	movw	r26, r24
    28d6:	cb 01       	movw	r24, r22
    28d8:	f8 01       	movw	r30, r16
    28da:	91 83       	std	Z+1, r25	; 0x01
    28dc:	80 83       	st	Z, r24
    28de:	1f c0       	rjmp	.+62     	; 0x291e <main+0xfe0>
    28e0:	fe 01       	movw	r30, r28
    28e2:	eb 54       	subi	r30, 0x4B	; 75
    28e4:	fe 4f       	sbci	r31, 0xFE	; 254
    28e6:	89 e1       	ldi	r24, 0x19	; 25
    28e8:	90 e0       	ldi	r25, 0x00	; 0
    28ea:	91 83       	std	Z+1, r25	; 0x01
    28ec:	80 83       	st	Z, r24
    28ee:	fe 01       	movw	r30, r28
    28f0:	eb 54       	subi	r30, 0x4B	; 75
    28f2:	fe 4f       	sbci	r31, 0xFE	; 254
    28f4:	80 81       	ld	r24, Z
    28f6:	91 81       	ldd	r25, Z+1	; 0x01
    28f8:	01 97       	sbiw	r24, 0x01	; 1
    28fa:	f1 f7       	brne	.-4      	; 0x28f8 <main+0xfba>
    28fc:	fe 01       	movw	r30, r28
    28fe:	eb 54       	subi	r30, 0x4B	; 75
    2900:	fe 4f       	sbci	r31, 0xFE	; 254
    2902:	91 83       	std	Z+1, r25	; 0x01
    2904:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2906:	de 01       	movw	r26, r28
    2908:	a9 54       	subi	r26, 0x49	; 73
    290a:	be 4f       	sbci	r27, 0xFE	; 254
    290c:	fe 01       	movw	r30, r28
    290e:	e9 54       	subi	r30, 0x49	; 73
    2910:	fe 4f       	sbci	r31, 0xFE	; 254
    2912:	80 81       	ld	r24, Z
    2914:	91 81       	ldd	r25, Z+1	; 0x01
    2916:	01 97       	sbiw	r24, 0x01	; 1
    2918:	11 96       	adiw	r26, 0x01	; 1
    291a:	9c 93       	st	X, r25
    291c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    291e:	fe 01       	movw	r30, r28
    2920:	e9 54       	subi	r30, 0x49	; 73
    2922:	fe 4f       	sbci	r31, 0xFE	; 254
    2924:	80 81       	ld	r24, Z
    2926:	91 81       	ldd	r25, Z+1	; 0x01
    2928:	00 97       	sbiw	r24, 0x00	; 0
    292a:	d1 f6       	brne	.-76     	; 0x28e0 <main+0xfa2>
    292c:	27 c0       	rjmp	.+78     	; 0x297c <main+0x103e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    292e:	8e 01       	movw	r16, r28
    2930:	09 54       	subi	r16, 0x49	; 73
    2932:	1e 4f       	sbci	r17, 0xFE	; 254
    2934:	fe 01       	movw	r30, r28
    2936:	e7 54       	subi	r30, 0x47	; 71
    2938:	fe 4f       	sbci	r31, 0xFE	; 254
    293a:	60 81       	ld	r22, Z
    293c:	71 81       	ldd	r23, Z+1	; 0x01
    293e:	82 81       	ldd	r24, Z+2	; 0x02
    2940:	93 81       	ldd	r25, Z+3	; 0x03
    2942:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2946:	dc 01       	movw	r26, r24
    2948:	cb 01       	movw	r24, r22
    294a:	f8 01       	movw	r30, r16
    294c:	91 83       	std	Z+1, r25	; 0x01
    294e:	80 83       	st	Z, r24
    2950:	de 01       	movw	r26, r28
    2952:	ad 54       	subi	r26, 0x4D	; 77
    2954:	be 4f       	sbci	r27, 0xFE	; 254
    2956:	fe 01       	movw	r30, r28
    2958:	e9 54       	subi	r30, 0x49	; 73
    295a:	fe 4f       	sbci	r31, 0xFE	; 254
    295c:	80 81       	ld	r24, Z
    295e:	91 81       	ldd	r25, Z+1	; 0x01
    2960:	8d 93       	st	X+, r24
    2962:	9c 93       	st	X, r25
    2964:	fe 01       	movw	r30, r28
    2966:	ed 54       	subi	r30, 0x4D	; 77
    2968:	fe 4f       	sbci	r31, 0xFE	; 254
    296a:	80 81       	ld	r24, Z
    296c:	91 81       	ldd	r25, Z+1	; 0x01
    296e:	01 97       	sbiw	r24, 0x01	; 1
    2970:	f1 f7       	brne	.-4      	; 0x296e <main+0x1030>
    2972:	fe 01       	movw	r30, r28
    2974:	ed 54       	subi	r30, 0x4D	; 77
    2976:	fe 4f       	sbci	r31, 0xFE	; 254
    2978:	91 83       	std	Z+1, r25	; 0x01
    297a:	80 83       	st	Z, r24
		    _delay_ms(1);
		    UART_sendByte(x4);
    297c:	fe 01       	movw	r30, r28
    297e:	e7 5a       	subi	r30, 0xA7	; 167
    2980:	fd 4f       	sbci	r31, 0xFD	; 253
    2982:	80 81       	ld	r24, Z
    2984:	0e 94 ba 2a 	call	0x5574	; 0x5574 <UART_sendByte>
    2988:	fe 01       	movw	r30, r28
    298a:	e1 55       	subi	r30, 0x51	; 81
    298c:	fe 4f       	sbci	r31, 0xFE	; 254
    298e:	80 e0       	ldi	r24, 0x00	; 0
    2990:	90 e0       	ldi	r25, 0x00	; 0
    2992:	a0 e8       	ldi	r26, 0x80	; 128
    2994:	bf e3       	ldi	r27, 0x3F	; 63
    2996:	80 83       	st	Z, r24
    2998:	91 83       	std	Z+1, r25	; 0x01
    299a:	a2 83       	std	Z+2, r26	; 0x02
    299c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    299e:	8e 01       	movw	r16, r28
    29a0:	05 55       	subi	r16, 0x55	; 85
    29a2:	1e 4f       	sbci	r17, 0xFE	; 254
    29a4:	fe 01       	movw	r30, r28
    29a6:	e1 55       	subi	r30, 0x51	; 81
    29a8:	fe 4f       	sbci	r31, 0xFE	; 254
    29aa:	60 81       	ld	r22, Z
    29ac:	71 81       	ldd	r23, Z+1	; 0x01
    29ae:	82 81       	ldd	r24, Z+2	; 0x02
    29b0:	93 81       	ldd	r25, Z+3	; 0x03
    29b2:	20 e0       	ldi	r18, 0x00	; 0
    29b4:	30 e0       	ldi	r19, 0x00	; 0
    29b6:	4a e7       	ldi	r20, 0x7A	; 122
    29b8:	53 e4       	ldi	r21, 0x43	; 67
    29ba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29be:	dc 01       	movw	r26, r24
    29c0:	cb 01       	movw	r24, r22
    29c2:	f8 01       	movw	r30, r16
    29c4:	80 83       	st	Z, r24
    29c6:	91 83       	std	Z+1, r25	; 0x01
    29c8:	a2 83       	std	Z+2, r26	; 0x02
    29ca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    29cc:	fe 01       	movw	r30, r28
    29ce:	e5 55       	subi	r30, 0x55	; 85
    29d0:	fe 4f       	sbci	r31, 0xFE	; 254
    29d2:	60 81       	ld	r22, Z
    29d4:	71 81       	ldd	r23, Z+1	; 0x01
    29d6:	82 81       	ldd	r24, Z+2	; 0x02
    29d8:	93 81       	ldd	r25, Z+3	; 0x03
    29da:	20 e0       	ldi	r18, 0x00	; 0
    29dc:	30 e0       	ldi	r19, 0x00	; 0
    29de:	40 e8       	ldi	r20, 0x80	; 128
    29e0:	5f e3       	ldi	r21, 0x3F	; 63
    29e2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    29e6:	88 23       	and	r24, r24
    29e8:	44 f4       	brge	.+16     	; 0x29fa <main+0x10bc>
		__ticks = 1;
    29ea:	fe 01       	movw	r30, r28
    29ec:	e7 55       	subi	r30, 0x57	; 87
    29ee:	fe 4f       	sbci	r31, 0xFE	; 254
    29f0:	81 e0       	ldi	r24, 0x01	; 1
    29f2:	90 e0       	ldi	r25, 0x00	; 0
    29f4:	91 83       	std	Z+1, r25	; 0x01
    29f6:	80 83       	st	Z, r24
    29f8:	64 c0       	rjmp	.+200    	; 0x2ac2 <main+0x1184>
	else if (__tmp > 65535)
    29fa:	fe 01       	movw	r30, r28
    29fc:	e5 55       	subi	r30, 0x55	; 85
    29fe:	fe 4f       	sbci	r31, 0xFE	; 254
    2a00:	60 81       	ld	r22, Z
    2a02:	71 81       	ldd	r23, Z+1	; 0x01
    2a04:	82 81       	ldd	r24, Z+2	; 0x02
    2a06:	93 81       	ldd	r25, Z+3	; 0x03
    2a08:	20 e0       	ldi	r18, 0x00	; 0
    2a0a:	3f ef       	ldi	r19, 0xFF	; 255
    2a0c:	4f e7       	ldi	r20, 0x7F	; 127
    2a0e:	57 e4       	ldi	r21, 0x47	; 71
    2a10:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a14:	18 16       	cp	r1, r24
    2a16:	0c f0       	brlt	.+2      	; 0x2a1a <main+0x10dc>
    2a18:	43 c0       	rjmp	.+134    	; 0x2aa0 <main+0x1162>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a1a:	fe 01       	movw	r30, r28
    2a1c:	e1 55       	subi	r30, 0x51	; 81
    2a1e:	fe 4f       	sbci	r31, 0xFE	; 254
    2a20:	60 81       	ld	r22, Z
    2a22:	71 81       	ldd	r23, Z+1	; 0x01
    2a24:	82 81       	ldd	r24, Z+2	; 0x02
    2a26:	93 81       	ldd	r25, Z+3	; 0x03
    2a28:	20 e0       	ldi	r18, 0x00	; 0
    2a2a:	30 e0       	ldi	r19, 0x00	; 0
    2a2c:	40 e2       	ldi	r20, 0x20	; 32
    2a2e:	51 e4       	ldi	r21, 0x41	; 65
    2a30:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a34:	dc 01       	movw	r26, r24
    2a36:	cb 01       	movw	r24, r22
    2a38:	8e 01       	movw	r16, r28
    2a3a:	07 55       	subi	r16, 0x57	; 87
    2a3c:	1e 4f       	sbci	r17, 0xFE	; 254
    2a3e:	bc 01       	movw	r22, r24
    2a40:	cd 01       	movw	r24, r26
    2a42:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a46:	dc 01       	movw	r26, r24
    2a48:	cb 01       	movw	r24, r22
    2a4a:	f8 01       	movw	r30, r16
    2a4c:	91 83       	std	Z+1, r25	; 0x01
    2a4e:	80 83       	st	Z, r24
    2a50:	1f c0       	rjmp	.+62     	; 0x2a90 <main+0x1152>
    2a52:	fe 01       	movw	r30, r28
    2a54:	e9 55       	subi	r30, 0x59	; 89
    2a56:	fe 4f       	sbci	r31, 0xFE	; 254
    2a58:	89 e1       	ldi	r24, 0x19	; 25
    2a5a:	90 e0       	ldi	r25, 0x00	; 0
    2a5c:	91 83       	std	Z+1, r25	; 0x01
    2a5e:	80 83       	st	Z, r24
    2a60:	fe 01       	movw	r30, r28
    2a62:	e9 55       	subi	r30, 0x59	; 89
    2a64:	fe 4f       	sbci	r31, 0xFE	; 254
    2a66:	80 81       	ld	r24, Z
    2a68:	91 81       	ldd	r25, Z+1	; 0x01
    2a6a:	01 97       	sbiw	r24, 0x01	; 1
    2a6c:	f1 f7       	brne	.-4      	; 0x2a6a <main+0x112c>
    2a6e:	fe 01       	movw	r30, r28
    2a70:	e9 55       	subi	r30, 0x59	; 89
    2a72:	fe 4f       	sbci	r31, 0xFE	; 254
    2a74:	91 83       	std	Z+1, r25	; 0x01
    2a76:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a78:	de 01       	movw	r26, r28
    2a7a:	a7 55       	subi	r26, 0x57	; 87
    2a7c:	be 4f       	sbci	r27, 0xFE	; 254
    2a7e:	fe 01       	movw	r30, r28
    2a80:	e7 55       	subi	r30, 0x57	; 87
    2a82:	fe 4f       	sbci	r31, 0xFE	; 254
    2a84:	80 81       	ld	r24, Z
    2a86:	91 81       	ldd	r25, Z+1	; 0x01
    2a88:	01 97       	sbiw	r24, 0x01	; 1
    2a8a:	11 96       	adiw	r26, 0x01	; 1
    2a8c:	9c 93       	st	X, r25
    2a8e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a90:	fe 01       	movw	r30, r28
    2a92:	e7 55       	subi	r30, 0x57	; 87
    2a94:	fe 4f       	sbci	r31, 0xFE	; 254
    2a96:	80 81       	ld	r24, Z
    2a98:	91 81       	ldd	r25, Z+1	; 0x01
    2a9a:	00 97       	sbiw	r24, 0x00	; 0
    2a9c:	d1 f6       	brne	.-76     	; 0x2a52 <main+0x1114>
    2a9e:	27 c0       	rjmp	.+78     	; 0x2aee <main+0x11b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2aa0:	8e 01       	movw	r16, r28
    2aa2:	07 55       	subi	r16, 0x57	; 87
    2aa4:	1e 4f       	sbci	r17, 0xFE	; 254
    2aa6:	fe 01       	movw	r30, r28
    2aa8:	e5 55       	subi	r30, 0x55	; 85
    2aaa:	fe 4f       	sbci	r31, 0xFE	; 254
    2aac:	60 81       	ld	r22, Z
    2aae:	71 81       	ldd	r23, Z+1	; 0x01
    2ab0:	82 81       	ldd	r24, Z+2	; 0x02
    2ab2:	93 81       	ldd	r25, Z+3	; 0x03
    2ab4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ab8:	dc 01       	movw	r26, r24
    2aba:	cb 01       	movw	r24, r22
    2abc:	f8 01       	movw	r30, r16
    2abe:	91 83       	std	Z+1, r25	; 0x01
    2ac0:	80 83       	st	Z, r24
    2ac2:	de 01       	movw	r26, r28
    2ac4:	ab 55       	subi	r26, 0x5B	; 91
    2ac6:	be 4f       	sbci	r27, 0xFE	; 254
    2ac8:	fe 01       	movw	r30, r28
    2aca:	e7 55       	subi	r30, 0x57	; 87
    2acc:	fe 4f       	sbci	r31, 0xFE	; 254
    2ace:	80 81       	ld	r24, Z
    2ad0:	91 81       	ldd	r25, Z+1	; 0x01
    2ad2:	8d 93       	st	X+, r24
    2ad4:	9c 93       	st	X, r25
    2ad6:	fe 01       	movw	r30, r28
    2ad8:	eb 55       	subi	r30, 0x5B	; 91
    2ada:	fe 4f       	sbci	r31, 0xFE	; 254
    2adc:	80 81       	ld	r24, Z
    2ade:	91 81       	ldd	r25, Z+1	; 0x01
    2ae0:	01 97       	sbiw	r24, 0x01	; 1
    2ae2:	f1 f7       	brne	.-4      	; 0x2ae0 <main+0x11a2>
    2ae4:	fe 01       	movw	r30, r28
    2ae6:	eb 55       	subi	r30, 0x5B	; 91
    2ae8:	fe 4f       	sbci	r31, 0xFE	; 254
    2aea:	91 83       	std	Z+1, r25	; 0x01
    2aec:	80 83       	st	Z, r24
		    _delay_ms(1);
		    UART_sendByte(x5);
    2aee:	fe 01       	movw	r30, r28
    2af0:	e6 5a       	subi	r30, 0xA6	; 166
    2af2:	fd 4f       	sbci	r31, 0xFD	; 253
    2af4:	80 81       	ld	r24, Z
    2af6:	0e 94 ba 2a 	call	0x5574	; 0x5574 <UART_sendByte>
    2afa:	fe 01       	movw	r30, r28
    2afc:	ef 55       	subi	r30, 0x5F	; 95
    2afe:	fe 4f       	sbci	r31, 0xFE	; 254
    2b00:	80 e0       	ldi	r24, 0x00	; 0
    2b02:	90 e0       	ldi	r25, 0x00	; 0
    2b04:	a0 e8       	ldi	r26, 0x80	; 128
    2b06:	bf e3       	ldi	r27, 0x3F	; 63
    2b08:	80 83       	st	Z, r24
    2b0a:	91 83       	std	Z+1, r25	; 0x01
    2b0c:	a2 83       	std	Z+2, r26	; 0x02
    2b0e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b10:	8e 01       	movw	r16, r28
    2b12:	03 56       	subi	r16, 0x63	; 99
    2b14:	1e 4f       	sbci	r17, 0xFE	; 254
    2b16:	fe 01       	movw	r30, r28
    2b18:	ef 55       	subi	r30, 0x5F	; 95
    2b1a:	fe 4f       	sbci	r31, 0xFE	; 254
    2b1c:	60 81       	ld	r22, Z
    2b1e:	71 81       	ldd	r23, Z+1	; 0x01
    2b20:	82 81       	ldd	r24, Z+2	; 0x02
    2b22:	93 81       	ldd	r25, Z+3	; 0x03
    2b24:	20 e0       	ldi	r18, 0x00	; 0
    2b26:	30 e0       	ldi	r19, 0x00	; 0
    2b28:	4a e7       	ldi	r20, 0x7A	; 122
    2b2a:	53 e4       	ldi	r21, 0x43	; 67
    2b2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b30:	dc 01       	movw	r26, r24
    2b32:	cb 01       	movw	r24, r22
    2b34:	f8 01       	movw	r30, r16
    2b36:	80 83       	st	Z, r24
    2b38:	91 83       	std	Z+1, r25	; 0x01
    2b3a:	a2 83       	std	Z+2, r26	; 0x02
    2b3c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b3e:	fe 01       	movw	r30, r28
    2b40:	e3 56       	subi	r30, 0x63	; 99
    2b42:	fe 4f       	sbci	r31, 0xFE	; 254
    2b44:	60 81       	ld	r22, Z
    2b46:	71 81       	ldd	r23, Z+1	; 0x01
    2b48:	82 81       	ldd	r24, Z+2	; 0x02
    2b4a:	93 81       	ldd	r25, Z+3	; 0x03
    2b4c:	20 e0       	ldi	r18, 0x00	; 0
    2b4e:	30 e0       	ldi	r19, 0x00	; 0
    2b50:	40 e8       	ldi	r20, 0x80	; 128
    2b52:	5f e3       	ldi	r21, 0x3F	; 63
    2b54:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b58:	88 23       	and	r24, r24
    2b5a:	44 f4       	brge	.+16     	; 0x2b6c <main+0x122e>
		__ticks = 1;
    2b5c:	fe 01       	movw	r30, r28
    2b5e:	e5 56       	subi	r30, 0x65	; 101
    2b60:	fe 4f       	sbci	r31, 0xFE	; 254
    2b62:	81 e0       	ldi	r24, 0x01	; 1
    2b64:	90 e0       	ldi	r25, 0x00	; 0
    2b66:	91 83       	std	Z+1, r25	; 0x01
    2b68:	80 83       	st	Z, r24
    2b6a:	64 c0       	rjmp	.+200    	; 0x2c34 <main+0x12f6>
	else if (__tmp > 65535)
    2b6c:	fe 01       	movw	r30, r28
    2b6e:	e3 56       	subi	r30, 0x63	; 99
    2b70:	fe 4f       	sbci	r31, 0xFE	; 254
    2b72:	60 81       	ld	r22, Z
    2b74:	71 81       	ldd	r23, Z+1	; 0x01
    2b76:	82 81       	ldd	r24, Z+2	; 0x02
    2b78:	93 81       	ldd	r25, Z+3	; 0x03
    2b7a:	20 e0       	ldi	r18, 0x00	; 0
    2b7c:	3f ef       	ldi	r19, 0xFF	; 255
    2b7e:	4f e7       	ldi	r20, 0x7F	; 127
    2b80:	57 e4       	ldi	r21, 0x47	; 71
    2b82:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b86:	18 16       	cp	r1, r24
    2b88:	0c f0       	brlt	.+2      	; 0x2b8c <main+0x124e>
    2b8a:	43 c0       	rjmp	.+134    	; 0x2c12 <main+0x12d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b8c:	fe 01       	movw	r30, r28
    2b8e:	ef 55       	subi	r30, 0x5F	; 95
    2b90:	fe 4f       	sbci	r31, 0xFE	; 254
    2b92:	60 81       	ld	r22, Z
    2b94:	71 81       	ldd	r23, Z+1	; 0x01
    2b96:	82 81       	ldd	r24, Z+2	; 0x02
    2b98:	93 81       	ldd	r25, Z+3	; 0x03
    2b9a:	20 e0       	ldi	r18, 0x00	; 0
    2b9c:	30 e0       	ldi	r19, 0x00	; 0
    2b9e:	40 e2       	ldi	r20, 0x20	; 32
    2ba0:	51 e4       	ldi	r21, 0x41	; 65
    2ba2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ba6:	dc 01       	movw	r26, r24
    2ba8:	cb 01       	movw	r24, r22
    2baa:	8e 01       	movw	r16, r28
    2bac:	05 56       	subi	r16, 0x65	; 101
    2bae:	1e 4f       	sbci	r17, 0xFE	; 254
    2bb0:	bc 01       	movw	r22, r24
    2bb2:	cd 01       	movw	r24, r26
    2bb4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bb8:	dc 01       	movw	r26, r24
    2bba:	cb 01       	movw	r24, r22
    2bbc:	f8 01       	movw	r30, r16
    2bbe:	91 83       	std	Z+1, r25	; 0x01
    2bc0:	80 83       	st	Z, r24
    2bc2:	1f c0       	rjmp	.+62     	; 0x2c02 <main+0x12c4>
    2bc4:	fe 01       	movw	r30, r28
    2bc6:	e7 56       	subi	r30, 0x67	; 103
    2bc8:	fe 4f       	sbci	r31, 0xFE	; 254
    2bca:	89 e1       	ldi	r24, 0x19	; 25
    2bcc:	90 e0       	ldi	r25, 0x00	; 0
    2bce:	91 83       	std	Z+1, r25	; 0x01
    2bd0:	80 83       	st	Z, r24
    2bd2:	fe 01       	movw	r30, r28
    2bd4:	e7 56       	subi	r30, 0x67	; 103
    2bd6:	fe 4f       	sbci	r31, 0xFE	; 254
    2bd8:	80 81       	ld	r24, Z
    2bda:	91 81       	ldd	r25, Z+1	; 0x01
    2bdc:	01 97       	sbiw	r24, 0x01	; 1
    2bde:	f1 f7       	brne	.-4      	; 0x2bdc <main+0x129e>
    2be0:	fe 01       	movw	r30, r28
    2be2:	e7 56       	subi	r30, 0x67	; 103
    2be4:	fe 4f       	sbci	r31, 0xFE	; 254
    2be6:	91 83       	std	Z+1, r25	; 0x01
    2be8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bea:	de 01       	movw	r26, r28
    2bec:	a5 56       	subi	r26, 0x65	; 101
    2bee:	be 4f       	sbci	r27, 0xFE	; 254
    2bf0:	fe 01       	movw	r30, r28
    2bf2:	e5 56       	subi	r30, 0x65	; 101
    2bf4:	fe 4f       	sbci	r31, 0xFE	; 254
    2bf6:	80 81       	ld	r24, Z
    2bf8:	91 81       	ldd	r25, Z+1	; 0x01
    2bfa:	01 97       	sbiw	r24, 0x01	; 1
    2bfc:	11 96       	adiw	r26, 0x01	; 1
    2bfe:	9c 93       	st	X, r25
    2c00:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c02:	fe 01       	movw	r30, r28
    2c04:	e5 56       	subi	r30, 0x65	; 101
    2c06:	fe 4f       	sbci	r31, 0xFE	; 254
    2c08:	80 81       	ld	r24, Z
    2c0a:	91 81       	ldd	r25, Z+1	; 0x01
    2c0c:	00 97       	sbiw	r24, 0x00	; 0
    2c0e:	d1 f6       	brne	.-76     	; 0x2bc4 <main+0x1286>
    2c10:	27 c0       	rjmp	.+78     	; 0x2c60 <main+0x1322>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c12:	8e 01       	movw	r16, r28
    2c14:	05 56       	subi	r16, 0x65	; 101
    2c16:	1e 4f       	sbci	r17, 0xFE	; 254
    2c18:	fe 01       	movw	r30, r28
    2c1a:	e3 56       	subi	r30, 0x63	; 99
    2c1c:	fe 4f       	sbci	r31, 0xFE	; 254
    2c1e:	60 81       	ld	r22, Z
    2c20:	71 81       	ldd	r23, Z+1	; 0x01
    2c22:	82 81       	ldd	r24, Z+2	; 0x02
    2c24:	93 81       	ldd	r25, Z+3	; 0x03
    2c26:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c2a:	dc 01       	movw	r26, r24
    2c2c:	cb 01       	movw	r24, r22
    2c2e:	f8 01       	movw	r30, r16
    2c30:	91 83       	std	Z+1, r25	; 0x01
    2c32:	80 83       	st	Z, r24
    2c34:	de 01       	movw	r26, r28
    2c36:	a9 56       	subi	r26, 0x69	; 105
    2c38:	be 4f       	sbci	r27, 0xFE	; 254
    2c3a:	fe 01       	movw	r30, r28
    2c3c:	e5 56       	subi	r30, 0x65	; 101
    2c3e:	fe 4f       	sbci	r31, 0xFE	; 254
    2c40:	80 81       	ld	r24, Z
    2c42:	91 81       	ldd	r25, Z+1	; 0x01
    2c44:	8d 93       	st	X+, r24
    2c46:	9c 93       	st	X, r25
    2c48:	fe 01       	movw	r30, r28
    2c4a:	e9 56       	subi	r30, 0x69	; 105
    2c4c:	fe 4f       	sbci	r31, 0xFE	; 254
    2c4e:	80 81       	ld	r24, Z
    2c50:	91 81       	ldd	r25, Z+1	; 0x01
    2c52:	01 97       	sbiw	r24, 0x01	; 1
    2c54:	f1 f7       	brne	.-4      	; 0x2c52 <main+0x1314>
    2c56:	fe 01       	movw	r30, r28
    2c58:	e9 56       	subi	r30, 0x69	; 105
    2c5a:	fe 4f       	sbci	r31, 0xFE	; 254
    2c5c:	91 83       	std	Z+1, r25	; 0x01
    2c5e:	80 83       	st	Z, r24
		    _delay_ms(1);
		    UART_sendByte(x6);
    2c60:	fe 01       	movw	r30, r28
    2c62:	e5 5a       	subi	r30, 0xA5	; 165
    2c64:	fd 4f       	sbci	r31, 0xFD	; 253
    2c66:	80 81       	ld	r24, Z
    2c68:	0e 94 ba 2a 	call	0x5574	; 0x5574 <UART_sendByte>
    2c6c:	fe 01       	movw	r30, r28
    2c6e:	ed 56       	subi	r30, 0x6D	; 109
    2c70:	fe 4f       	sbci	r31, 0xFE	; 254
    2c72:	80 e0       	ldi	r24, 0x00	; 0
    2c74:	90 e0       	ldi	r25, 0x00	; 0
    2c76:	a0 e8       	ldi	r26, 0x80	; 128
    2c78:	bf e3       	ldi	r27, 0x3F	; 63
    2c7a:	80 83       	st	Z, r24
    2c7c:	91 83       	std	Z+1, r25	; 0x01
    2c7e:	a2 83       	std	Z+2, r26	; 0x02
    2c80:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c82:	8e 01       	movw	r16, r28
    2c84:	01 57       	subi	r16, 0x71	; 113
    2c86:	1e 4f       	sbci	r17, 0xFE	; 254
    2c88:	fe 01       	movw	r30, r28
    2c8a:	ed 56       	subi	r30, 0x6D	; 109
    2c8c:	fe 4f       	sbci	r31, 0xFE	; 254
    2c8e:	60 81       	ld	r22, Z
    2c90:	71 81       	ldd	r23, Z+1	; 0x01
    2c92:	82 81       	ldd	r24, Z+2	; 0x02
    2c94:	93 81       	ldd	r25, Z+3	; 0x03
    2c96:	20 e0       	ldi	r18, 0x00	; 0
    2c98:	30 e0       	ldi	r19, 0x00	; 0
    2c9a:	4a e7       	ldi	r20, 0x7A	; 122
    2c9c:	53 e4       	ldi	r21, 0x43	; 67
    2c9e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ca2:	dc 01       	movw	r26, r24
    2ca4:	cb 01       	movw	r24, r22
    2ca6:	f8 01       	movw	r30, r16
    2ca8:	80 83       	st	Z, r24
    2caa:	91 83       	std	Z+1, r25	; 0x01
    2cac:	a2 83       	std	Z+2, r26	; 0x02
    2cae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2cb0:	fe 01       	movw	r30, r28
    2cb2:	e1 57       	subi	r30, 0x71	; 113
    2cb4:	fe 4f       	sbci	r31, 0xFE	; 254
    2cb6:	60 81       	ld	r22, Z
    2cb8:	71 81       	ldd	r23, Z+1	; 0x01
    2cba:	82 81       	ldd	r24, Z+2	; 0x02
    2cbc:	93 81       	ldd	r25, Z+3	; 0x03
    2cbe:	20 e0       	ldi	r18, 0x00	; 0
    2cc0:	30 e0       	ldi	r19, 0x00	; 0
    2cc2:	40 e8       	ldi	r20, 0x80	; 128
    2cc4:	5f e3       	ldi	r21, 0x3F	; 63
    2cc6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2cca:	88 23       	and	r24, r24
    2ccc:	44 f4       	brge	.+16     	; 0x2cde <main+0x13a0>
		__ticks = 1;
    2cce:	fe 01       	movw	r30, r28
    2cd0:	e3 57       	subi	r30, 0x73	; 115
    2cd2:	fe 4f       	sbci	r31, 0xFE	; 254
    2cd4:	81 e0       	ldi	r24, 0x01	; 1
    2cd6:	90 e0       	ldi	r25, 0x00	; 0
    2cd8:	91 83       	std	Z+1, r25	; 0x01
    2cda:	80 83       	st	Z, r24
    2cdc:	64 c0       	rjmp	.+200    	; 0x2da6 <main+0x1468>
	else if (__tmp > 65535)
    2cde:	fe 01       	movw	r30, r28
    2ce0:	e1 57       	subi	r30, 0x71	; 113
    2ce2:	fe 4f       	sbci	r31, 0xFE	; 254
    2ce4:	60 81       	ld	r22, Z
    2ce6:	71 81       	ldd	r23, Z+1	; 0x01
    2ce8:	82 81       	ldd	r24, Z+2	; 0x02
    2cea:	93 81       	ldd	r25, Z+3	; 0x03
    2cec:	20 e0       	ldi	r18, 0x00	; 0
    2cee:	3f ef       	ldi	r19, 0xFF	; 255
    2cf0:	4f e7       	ldi	r20, 0x7F	; 127
    2cf2:	57 e4       	ldi	r21, 0x47	; 71
    2cf4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2cf8:	18 16       	cp	r1, r24
    2cfa:	0c f0       	brlt	.+2      	; 0x2cfe <main+0x13c0>
    2cfc:	43 c0       	rjmp	.+134    	; 0x2d84 <main+0x1446>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cfe:	fe 01       	movw	r30, r28
    2d00:	ed 56       	subi	r30, 0x6D	; 109
    2d02:	fe 4f       	sbci	r31, 0xFE	; 254
    2d04:	60 81       	ld	r22, Z
    2d06:	71 81       	ldd	r23, Z+1	; 0x01
    2d08:	82 81       	ldd	r24, Z+2	; 0x02
    2d0a:	93 81       	ldd	r25, Z+3	; 0x03
    2d0c:	20 e0       	ldi	r18, 0x00	; 0
    2d0e:	30 e0       	ldi	r19, 0x00	; 0
    2d10:	40 e2       	ldi	r20, 0x20	; 32
    2d12:	51 e4       	ldi	r21, 0x41	; 65
    2d14:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d18:	dc 01       	movw	r26, r24
    2d1a:	cb 01       	movw	r24, r22
    2d1c:	8e 01       	movw	r16, r28
    2d1e:	03 57       	subi	r16, 0x73	; 115
    2d20:	1e 4f       	sbci	r17, 0xFE	; 254
    2d22:	bc 01       	movw	r22, r24
    2d24:	cd 01       	movw	r24, r26
    2d26:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d2a:	dc 01       	movw	r26, r24
    2d2c:	cb 01       	movw	r24, r22
    2d2e:	f8 01       	movw	r30, r16
    2d30:	91 83       	std	Z+1, r25	; 0x01
    2d32:	80 83       	st	Z, r24
    2d34:	1f c0       	rjmp	.+62     	; 0x2d74 <main+0x1436>
    2d36:	fe 01       	movw	r30, r28
    2d38:	e5 57       	subi	r30, 0x75	; 117
    2d3a:	fe 4f       	sbci	r31, 0xFE	; 254
    2d3c:	89 e1       	ldi	r24, 0x19	; 25
    2d3e:	90 e0       	ldi	r25, 0x00	; 0
    2d40:	91 83       	std	Z+1, r25	; 0x01
    2d42:	80 83       	st	Z, r24
    2d44:	fe 01       	movw	r30, r28
    2d46:	e5 57       	subi	r30, 0x75	; 117
    2d48:	fe 4f       	sbci	r31, 0xFE	; 254
    2d4a:	80 81       	ld	r24, Z
    2d4c:	91 81       	ldd	r25, Z+1	; 0x01
    2d4e:	01 97       	sbiw	r24, 0x01	; 1
    2d50:	f1 f7       	brne	.-4      	; 0x2d4e <main+0x1410>
    2d52:	fe 01       	movw	r30, r28
    2d54:	e5 57       	subi	r30, 0x75	; 117
    2d56:	fe 4f       	sbci	r31, 0xFE	; 254
    2d58:	91 83       	std	Z+1, r25	; 0x01
    2d5a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d5c:	de 01       	movw	r26, r28
    2d5e:	a3 57       	subi	r26, 0x73	; 115
    2d60:	be 4f       	sbci	r27, 0xFE	; 254
    2d62:	fe 01       	movw	r30, r28
    2d64:	e3 57       	subi	r30, 0x73	; 115
    2d66:	fe 4f       	sbci	r31, 0xFE	; 254
    2d68:	80 81       	ld	r24, Z
    2d6a:	91 81       	ldd	r25, Z+1	; 0x01
    2d6c:	01 97       	sbiw	r24, 0x01	; 1
    2d6e:	11 96       	adiw	r26, 0x01	; 1
    2d70:	9c 93       	st	X, r25
    2d72:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d74:	fe 01       	movw	r30, r28
    2d76:	e3 57       	subi	r30, 0x73	; 115
    2d78:	fe 4f       	sbci	r31, 0xFE	; 254
    2d7a:	80 81       	ld	r24, Z
    2d7c:	91 81       	ldd	r25, Z+1	; 0x01
    2d7e:	00 97       	sbiw	r24, 0x00	; 0
    2d80:	d1 f6       	brne	.-76     	; 0x2d36 <main+0x13f8>
    2d82:	27 c0       	rjmp	.+78     	; 0x2dd2 <main+0x1494>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d84:	8e 01       	movw	r16, r28
    2d86:	03 57       	subi	r16, 0x73	; 115
    2d88:	1e 4f       	sbci	r17, 0xFE	; 254
    2d8a:	fe 01       	movw	r30, r28
    2d8c:	e1 57       	subi	r30, 0x71	; 113
    2d8e:	fe 4f       	sbci	r31, 0xFE	; 254
    2d90:	60 81       	ld	r22, Z
    2d92:	71 81       	ldd	r23, Z+1	; 0x01
    2d94:	82 81       	ldd	r24, Z+2	; 0x02
    2d96:	93 81       	ldd	r25, Z+3	; 0x03
    2d98:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d9c:	dc 01       	movw	r26, r24
    2d9e:	cb 01       	movw	r24, r22
    2da0:	f8 01       	movw	r30, r16
    2da2:	91 83       	std	Z+1, r25	; 0x01
    2da4:	80 83       	st	Z, r24
    2da6:	de 01       	movw	r26, r28
    2da8:	a7 57       	subi	r26, 0x77	; 119
    2daa:	be 4f       	sbci	r27, 0xFE	; 254
    2dac:	fe 01       	movw	r30, r28
    2dae:	e3 57       	subi	r30, 0x73	; 115
    2db0:	fe 4f       	sbci	r31, 0xFE	; 254
    2db2:	80 81       	ld	r24, Z
    2db4:	91 81       	ldd	r25, Z+1	; 0x01
    2db6:	8d 93       	st	X+, r24
    2db8:	9c 93       	st	X, r25
    2dba:	fe 01       	movw	r30, r28
    2dbc:	e7 57       	subi	r30, 0x77	; 119
    2dbe:	fe 4f       	sbci	r31, 0xFE	; 254
    2dc0:	80 81       	ld	r24, Z
    2dc2:	91 81       	ldd	r25, Z+1	; 0x01
    2dc4:	01 97       	sbiw	r24, 0x01	; 1
    2dc6:	f1 f7       	brne	.-4      	; 0x2dc4 <main+0x1486>
    2dc8:	fe 01       	movw	r30, r28
    2dca:	e7 57       	subi	r30, 0x77	; 119
    2dcc:	fe 4f       	sbci	r31, 0xFE	; 254
    2dce:	91 83       	std	Z+1, r25	; 0x01
    2dd0:	80 83       	st	Z, r24
		    _delay_ms(1);
		    UART_sendByte(x7);
    2dd2:	fe 01       	movw	r30, r28
    2dd4:	e4 5a       	subi	r30, 0xA4	; 164
    2dd6:	fd 4f       	sbci	r31, 0xFD	; 253
    2dd8:	80 81       	ld	r24, Z
    2dda:	0e 94 ba 2a 	call	0x5574	; 0x5574 <UART_sendByte>
    2dde:	fe 01       	movw	r30, r28
    2de0:	eb 57       	subi	r30, 0x7B	; 123
    2de2:	fe 4f       	sbci	r31, 0xFE	; 254
    2de4:	80 e0       	ldi	r24, 0x00	; 0
    2de6:	90 e0       	ldi	r25, 0x00	; 0
    2de8:	a0 e8       	ldi	r26, 0x80	; 128
    2dea:	bf e3       	ldi	r27, 0x3F	; 63
    2dec:	80 83       	st	Z, r24
    2dee:	91 83       	std	Z+1, r25	; 0x01
    2df0:	a2 83       	std	Z+2, r26	; 0x02
    2df2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2df4:	8e 01       	movw	r16, r28
    2df6:	0f 57       	subi	r16, 0x7F	; 127
    2df8:	1e 4f       	sbci	r17, 0xFE	; 254
    2dfa:	fe 01       	movw	r30, r28
    2dfc:	eb 57       	subi	r30, 0x7B	; 123
    2dfe:	fe 4f       	sbci	r31, 0xFE	; 254
    2e00:	60 81       	ld	r22, Z
    2e02:	71 81       	ldd	r23, Z+1	; 0x01
    2e04:	82 81       	ldd	r24, Z+2	; 0x02
    2e06:	93 81       	ldd	r25, Z+3	; 0x03
    2e08:	20 e0       	ldi	r18, 0x00	; 0
    2e0a:	30 e0       	ldi	r19, 0x00	; 0
    2e0c:	4a e7       	ldi	r20, 0x7A	; 122
    2e0e:	53 e4       	ldi	r21, 0x43	; 67
    2e10:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e14:	dc 01       	movw	r26, r24
    2e16:	cb 01       	movw	r24, r22
    2e18:	f8 01       	movw	r30, r16
    2e1a:	80 83       	st	Z, r24
    2e1c:	91 83       	std	Z+1, r25	; 0x01
    2e1e:	a2 83       	std	Z+2, r26	; 0x02
    2e20:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e22:	fe 01       	movw	r30, r28
    2e24:	ef 57       	subi	r30, 0x7F	; 127
    2e26:	fe 4f       	sbci	r31, 0xFE	; 254
    2e28:	60 81       	ld	r22, Z
    2e2a:	71 81       	ldd	r23, Z+1	; 0x01
    2e2c:	82 81       	ldd	r24, Z+2	; 0x02
    2e2e:	93 81       	ldd	r25, Z+3	; 0x03
    2e30:	20 e0       	ldi	r18, 0x00	; 0
    2e32:	30 e0       	ldi	r19, 0x00	; 0
    2e34:	40 e8       	ldi	r20, 0x80	; 128
    2e36:	5f e3       	ldi	r21, 0x3F	; 63
    2e38:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2e3c:	88 23       	and	r24, r24
    2e3e:	44 f4       	brge	.+16     	; 0x2e50 <main+0x1512>
		__ticks = 1;
    2e40:	fe 01       	movw	r30, r28
    2e42:	e1 58       	subi	r30, 0x81	; 129
    2e44:	fe 4f       	sbci	r31, 0xFE	; 254
    2e46:	81 e0       	ldi	r24, 0x01	; 1
    2e48:	90 e0       	ldi	r25, 0x00	; 0
    2e4a:	91 83       	std	Z+1, r25	; 0x01
    2e4c:	80 83       	st	Z, r24
    2e4e:	64 c0       	rjmp	.+200    	; 0x2f18 <main+0x15da>
	else if (__tmp > 65535)
    2e50:	fe 01       	movw	r30, r28
    2e52:	ef 57       	subi	r30, 0x7F	; 127
    2e54:	fe 4f       	sbci	r31, 0xFE	; 254
    2e56:	60 81       	ld	r22, Z
    2e58:	71 81       	ldd	r23, Z+1	; 0x01
    2e5a:	82 81       	ldd	r24, Z+2	; 0x02
    2e5c:	93 81       	ldd	r25, Z+3	; 0x03
    2e5e:	20 e0       	ldi	r18, 0x00	; 0
    2e60:	3f ef       	ldi	r19, 0xFF	; 255
    2e62:	4f e7       	ldi	r20, 0x7F	; 127
    2e64:	57 e4       	ldi	r21, 0x47	; 71
    2e66:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2e6a:	18 16       	cp	r1, r24
    2e6c:	0c f0       	brlt	.+2      	; 0x2e70 <main+0x1532>
    2e6e:	43 c0       	rjmp	.+134    	; 0x2ef6 <main+0x15b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e70:	fe 01       	movw	r30, r28
    2e72:	eb 57       	subi	r30, 0x7B	; 123
    2e74:	fe 4f       	sbci	r31, 0xFE	; 254
    2e76:	60 81       	ld	r22, Z
    2e78:	71 81       	ldd	r23, Z+1	; 0x01
    2e7a:	82 81       	ldd	r24, Z+2	; 0x02
    2e7c:	93 81       	ldd	r25, Z+3	; 0x03
    2e7e:	20 e0       	ldi	r18, 0x00	; 0
    2e80:	30 e0       	ldi	r19, 0x00	; 0
    2e82:	40 e2       	ldi	r20, 0x20	; 32
    2e84:	51 e4       	ldi	r21, 0x41	; 65
    2e86:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e8a:	dc 01       	movw	r26, r24
    2e8c:	cb 01       	movw	r24, r22
    2e8e:	8e 01       	movw	r16, r28
    2e90:	01 58       	subi	r16, 0x81	; 129
    2e92:	1e 4f       	sbci	r17, 0xFE	; 254
    2e94:	bc 01       	movw	r22, r24
    2e96:	cd 01       	movw	r24, r26
    2e98:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e9c:	dc 01       	movw	r26, r24
    2e9e:	cb 01       	movw	r24, r22
    2ea0:	f8 01       	movw	r30, r16
    2ea2:	91 83       	std	Z+1, r25	; 0x01
    2ea4:	80 83       	st	Z, r24
    2ea6:	1f c0       	rjmp	.+62     	; 0x2ee6 <main+0x15a8>
    2ea8:	fe 01       	movw	r30, r28
    2eaa:	e3 58       	subi	r30, 0x83	; 131
    2eac:	fe 4f       	sbci	r31, 0xFE	; 254
    2eae:	89 e1       	ldi	r24, 0x19	; 25
    2eb0:	90 e0       	ldi	r25, 0x00	; 0
    2eb2:	91 83       	std	Z+1, r25	; 0x01
    2eb4:	80 83       	st	Z, r24
    2eb6:	fe 01       	movw	r30, r28
    2eb8:	e3 58       	subi	r30, 0x83	; 131
    2eba:	fe 4f       	sbci	r31, 0xFE	; 254
    2ebc:	80 81       	ld	r24, Z
    2ebe:	91 81       	ldd	r25, Z+1	; 0x01
    2ec0:	01 97       	sbiw	r24, 0x01	; 1
    2ec2:	f1 f7       	brne	.-4      	; 0x2ec0 <main+0x1582>
    2ec4:	fe 01       	movw	r30, r28
    2ec6:	e3 58       	subi	r30, 0x83	; 131
    2ec8:	fe 4f       	sbci	r31, 0xFE	; 254
    2eca:	91 83       	std	Z+1, r25	; 0x01
    2ecc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ece:	de 01       	movw	r26, r28
    2ed0:	a1 58       	subi	r26, 0x81	; 129
    2ed2:	be 4f       	sbci	r27, 0xFE	; 254
    2ed4:	fe 01       	movw	r30, r28
    2ed6:	e1 58       	subi	r30, 0x81	; 129
    2ed8:	fe 4f       	sbci	r31, 0xFE	; 254
    2eda:	80 81       	ld	r24, Z
    2edc:	91 81       	ldd	r25, Z+1	; 0x01
    2ede:	01 97       	sbiw	r24, 0x01	; 1
    2ee0:	11 96       	adiw	r26, 0x01	; 1
    2ee2:	9c 93       	st	X, r25
    2ee4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ee6:	fe 01       	movw	r30, r28
    2ee8:	e1 58       	subi	r30, 0x81	; 129
    2eea:	fe 4f       	sbci	r31, 0xFE	; 254
    2eec:	80 81       	ld	r24, Z
    2eee:	91 81       	ldd	r25, Z+1	; 0x01
    2ef0:	00 97       	sbiw	r24, 0x00	; 0
    2ef2:	d1 f6       	brne	.-76     	; 0x2ea8 <main+0x156a>
    2ef4:	27 c0       	rjmp	.+78     	; 0x2f44 <main+0x1606>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ef6:	8e 01       	movw	r16, r28
    2ef8:	01 58       	subi	r16, 0x81	; 129
    2efa:	1e 4f       	sbci	r17, 0xFE	; 254
    2efc:	fe 01       	movw	r30, r28
    2efe:	ef 57       	subi	r30, 0x7F	; 127
    2f00:	fe 4f       	sbci	r31, 0xFE	; 254
    2f02:	60 81       	ld	r22, Z
    2f04:	71 81       	ldd	r23, Z+1	; 0x01
    2f06:	82 81       	ldd	r24, Z+2	; 0x02
    2f08:	93 81       	ldd	r25, Z+3	; 0x03
    2f0a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f0e:	dc 01       	movw	r26, r24
    2f10:	cb 01       	movw	r24, r22
    2f12:	f8 01       	movw	r30, r16
    2f14:	91 83       	std	Z+1, r25	; 0x01
    2f16:	80 83       	st	Z, r24
    2f18:	de 01       	movw	r26, r28
    2f1a:	a5 58       	subi	r26, 0x85	; 133
    2f1c:	be 4f       	sbci	r27, 0xFE	; 254
    2f1e:	fe 01       	movw	r30, r28
    2f20:	e1 58       	subi	r30, 0x81	; 129
    2f22:	fe 4f       	sbci	r31, 0xFE	; 254
    2f24:	80 81       	ld	r24, Z
    2f26:	91 81       	ldd	r25, Z+1	; 0x01
    2f28:	8d 93       	st	X+, r24
    2f2a:	9c 93       	st	X, r25
    2f2c:	fe 01       	movw	r30, r28
    2f2e:	e5 58       	subi	r30, 0x85	; 133
    2f30:	fe 4f       	sbci	r31, 0xFE	; 254
    2f32:	80 81       	ld	r24, Z
    2f34:	91 81       	ldd	r25, Z+1	; 0x01
    2f36:	01 97       	sbiw	r24, 0x01	; 1
    2f38:	f1 f7       	brne	.-4      	; 0x2f36 <main+0x15f8>
    2f3a:	fe 01       	movw	r30, r28
    2f3c:	e5 58       	subi	r30, 0x85	; 133
    2f3e:	fe 4f       	sbci	r31, 0xFE	; 254
    2f40:	91 83       	std	Z+1, r25	; 0x01
    2f42:	80 83       	st	Z, r24
		    _delay_ms(1);
		    UART_sendByte(x8);
    2f44:	fe 01       	movw	r30, r28
    2f46:	e3 5a       	subi	r30, 0xA3	; 163
    2f48:	fd 4f       	sbci	r31, 0xFD	; 253
    2f4a:	80 81       	ld	r24, Z
    2f4c:	0e 94 ba 2a 	call	0x5574	; 0x5574 <UART_sendByte>
    2f50:	fe 01       	movw	r30, r28
    2f52:	e9 58       	subi	r30, 0x89	; 137
    2f54:	fe 4f       	sbci	r31, 0xFE	; 254
    2f56:	80 e0       	ldi	r24, 0x00	; 0
    2f58:	90 e0       	ldi	r25, 0x00	; 0
    2f5a:	a0 e8       	ldi	r26, 0x80	; 128
    2f5c:	bf e3       	ldi	r27, 0x3F	; 63
    2f5e:	80 83       	st	Z, r24
    2f60:	91 83       	std	Z+1, r25	; 0x01
    2f62:	a2 83       	std	Z+2, r26	; 0x02
    2f64:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f66:	8e 01       	movw	r16, r28
    2f68:	0d 58       	subi	r16, 0x8D	; 141
    2f6a:	1e 4f       	sbci	r17, 0xFE	; 254
    2f6c:	fe 01       	movw	r30, r28
    2f6e:	e9 58       	subi	r30, 0x89	; 137
    2f70:	fe 4f       	sbci	r31, 0xFE	; 254
    2f72:	60 81       	ld	r22, Z
    2f74:	71 81       	ldd	r23, Z+1	; 0x01
    2f76:	82 81       	ldd	r24, Z+2	; 0x02
    2f78:	93 81       	ldd	r25, Z+3	; 0x03
    2f7a:	20 e0       	ldi	r18, 0x00	; 0
    2f7c:	30 e0       	ldi	r19, 0x00	; 0
    2f7e:	4a e7       	ldi	r20, 0x7A	; 122
    2f80:	53 e4       	ldi	r21, 0x43	; 67
    2f82:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f86:	dc 01       	movw	r26, r24
    2f88:	cb 01       	movw	r24, r22
    2f8a:	f8 01       	movw	r30, r16
    2f8c:	80 83       	st	Z, r24
    2f8e:	91 83       	std	Z+1, r25	; 0x01
    2f90:	a2 83       	std	Z+2, r26	; 0x02
    2f92:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f94:	fe 01       	movw	r30, r28
    2f96:	ed 58       	subi	r30, 0x8D	; 141
    2f98:	fe 4f       	sbci	r31, 0xFE	; 254
    2f9a:	60 81       	ld	r22, Z
    2f9c:	71 81       	ldd	r23, Z+1	; 0x01
    2f9e:	82 81       	ldd	r24, Z+2	; 0x02
    2fa0:	93 81       	ldd	r25, Z+3	; 0x03
    2fa2:	20 e0       	ldi	r18, 0x00	; 0
    2fa4:	30 e0       	ldi	r19, 0x00	; 0
    2fa6:	40 e8       	ldi	r20, 0x80	; 128
    2fa8:	5f e3       	ldi	r21, 0x3F	; 63
    2faa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2fae:	88 23       	and	r24, r24
    2fb0:	44 f4       	brge	.+16     	; 0x2fc2 <main+0x1684>
		__ticks = 1;
    2fb2:	fe 01       	movw	r30, r28
    2fb4:	ef 58       	subi	r30, 0x8F	; 143
    2fb6:	fe 4f       	sbci	r31, 0xFE	; 254
    2fb8:	81 e0       	ldi	r24, 0x01	; 1
    2fba:	90 e0       	ldi	r25, 0x00	; 0
    2fbc:	91 83       	std	Z+1, r25	; 0x01
    2fbe:	80 83       	st	Z, r24
    2fc0:	64 c0       	rjmp	.+200    	; 0x308a <main+0x174c>
	else if (__tmp > 65535)
    2fc2:	fe 01       	movw	r30, r28
    2fc4:	ed 58       	subi	r30, 0x8D	; 141
    2fc6:	fe 4f       	sbci	r31, 0xFE	; 254
    2fc8:	60 81       	ld	r22, Z
    2fca:	71 81       	ldd	r23, Z+1	; 0x01
    2fcc:	82 81       	ldd	r24, Z+2	; 0x02
    2fce:	93 81       	ldd	r25, Z+3	; 0x03
    2fd0:	20 e0       	ldi	r18, 0x00	; 0
    2fd2:	3f ef       	ldi	r19, 0xFF	; 255
    2fd4:	4f e7       	ldi	r20, 0x7F	; 127
    2fd6:	57 e4       	ldi	r21, 0x47	; 71
    2fd8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2fdc:	18 16       	cp	r1, r24
    2fde:	0c f0       	brlt	.+2      	; 0x2fe2 <main+0x16a4>
    2fe0:	43 c0       	rjmp	.+134    	; 0x3068 <main+0x172a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fe2:	fe 01       	movw	r30, r28
    2fe4:	e9 58       	subi	r30, 0x89	; 137
    2fe6:	fe 4f       	sbci	r31, 0xFE	; 254
    2fe8:	60 81       	ld	r22, Z
    2fea:	71 81       	ldd	r23, Z+1	; 0x01
    2fec:	82 81       	ldd	r24, Z+2	; 0x02
    2fee:	93 81       	ldd	r25, Z+3	; 0x03
    2ff0:	20 e0       	ldi	r18, 0x00	; 0
    2ff2:	30 e0       	ldi	r19, 0x00	; 0
    2ff4:	40 e2       	ldi	r20, 0x20	; 32
    2ff6:	51 e4       	ldi	r21, 0x41	; 65
    2ff8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ffc:	dc 01       	movw	r26, r24
    2ffe:	cb 01       	movw	r24, r22
    3000:	8e 01       	movw	r16, r28
    3002:	0f 58       	subi	r16, 0x8F	; 143
    3004:	1e 4f       	sbci	r17, 0xFE	; 254
    3006:	bc 01       	movw	r22, r24
    3008:	cd 01       	movw	r24, r26
    300a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    300e:	dc 01       	movw	r26, r24
    3010:	cb 01       	movw	r24, r22
    3012:	f8 01       	movw	r30, r16
    3014:	91 83       	std	Z+1, r25	; 0x01
    3016:	80 83       	st	Z, r24
    3018:	1f c0       	rjmp	.+62     	; 0x3058 <main+0x171a>
    301a:	fe 01       	movw	r30, r28
    301c:	e1 59       	subi	r30, 0x91	; 145
    301e:	fe 4f       	sbci	r31, 0xFE	; 254
    3020:	89 e1       	ldi	r24, 0x19	; 25
    3022:	90 e0       	ldi	r25, 0x00	; 0
    3024:	91 83       	std	Z+1, r25	; 0x01
    3026:	80 83       	st	Z, r24
    3028:	fe 01       	movw	r30, r28
    302a:	e1 59       	subi	r30, 0x91	; 145
    302c:	fe 4f       	sbci	r31, 0xFE	; 254
    302e:	80 81       	ld	r24, Z
    3030:	91 81       	ldd	r25, Z+1	; 0x01
    3032:	01 97       	sbiw	r24, 0x01	; 1
    3034:	f1 f7       	brne	.-4      	; 0x3032 <main+0x16f4>
    3036:	fe 01       	movw	r30, r28
    3038:	e1 59       	subi	r30, 0x91	; 145
    303a:	fe 4f       	sbci	r31, 0xFE	; 254
    303c:	91 83       	std	Z+1, r25	; 0x01
    303e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3040:	de 01       	movw	r26, r28
    3042:	af 58       	subi	r26, 0x8F	; 143
    3044:	be 4f       	sbci	r27, 0xFE	; 254
    3046:	fe 01       	movw	r30, r28
    3048:	ef 58       	subi	r30, 0x8F	; 143
    304a:	fe 4f       	sbci	r31, 0xFE	; 254
    304c:	80 81       	ld	r24, Z
    304e:	91 81       	ldd	r25, Z+1	; 0x01
    3050:	01 97       	sbiw	r24, 0x01	; 1
    3052:	11 96       	adiw	r26, 0x01	; 1
    3054:	9c 93       	st	X, r25
    3056:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3058:	fe 01       	movw	r30, r28
    305a:	ef 58       	subi	r30, 0x8F	; 143
    305c:	fe 4f       	sbci	r31, 0xFE	; 254
    305e:	80 81       	ld	r24, Z
    3060:	91 81       	ldd	r25, Z+1	; 0x01
    3062:	00 97       	sbiw	r24, 0x00	; 0
    3064:	d1 f6       	brne	.-76     	; 0x301a <main+0x16dc>
    3066:	27 c0       	rjmp	.+78     	; 0x30b6 <main+0x1778>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3068:	8e 01       	movw	r16, r28
    306a:	0f 58       	subi	r16, 0x8F	; 143
    306c:	1e 4f       	sbci	r17, 0xFE	; 254
    306e:	fe 01       	movw	r30, r28
    3070:	ed 58       	subi	r30, 0x8D	; 141
    3072:	fe 4f       	sbci	r31, 0xFE	; 254
    3074:	60 81       	ld	r22, Z
    3076:	71 81       	ldd	r23, Z+1	; 0x01
    3078:	82 81       	ldd	r24, Z+2	; 0x02
    307a:	93 81       	ldd	r25, Z+3	; 0x03
    307c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3080:	dc 01       	movw	r26, r24
    3082:	cb 01       	movw	r24, r22
    3084:	f8 01       	movw	r30, r16
    3086:	91 83       	std	Z+1, r25	; 0x01
    3088:	80 83       	st	Z, r24
    308a:	de 01       	movw	r26, r28
    308c:	a3 59       	subi	r26, 0x93	; 147
    308e:	be 4f       	sbci	r27, 0xFE	; 254
    3090:	fe 01       	movw	r30, r28
    3092:	ef 58       	subi	r30, 0x8F	; 143
    3094:	fe 4f       	sbci	r31, 0xFE	; 254
    3096:	80 81       	ld	r24, Z
    3098:	91 81       	ldd	r25, Z+1	; 0x01
    309a:	8d 93       	st	X+, r24
    309c:	9c 93       	st	X, r25
    309e:	fe 01       	movw	r30, r28
    30a0:	e3 59       	subi	r30, 0x93	; 147
    30a2:	fe 4f       	sbci	r31, 0xFE	; 254
    30a4:	80 81       	ld	r24, Z
    30a6:	91 81       	ldd	r25, Z+1	; 0x01
    30a8:	01 97       	sbiw	r24, 0x01	; 1
    30aa:	f1 f7       	brne	.-4      	; 0x30a8 <main+0x176a>
    30ac:	fe 01       	movw	r30, r28
    30ae:	e3 59       	subi	r30, 0x93	; 147
    30b0:	fe 4f       	sbci	r31, 0xFE	; 254
    30b2:	91 83       	std	Z+1, r25	; 0x01
    30b4:	80 83       	st	Z, r24

/****************************************************************/

	while(1){

		m = UART_reseiveByte();
    30b6:	0e 94 d1 2a 	call	0x55a2	; 0x55a2 <UART_reseiveByte>
    30ba:	fe 01       	movw	r30, r28
    30bc:	e3 5b       	subi	r30, 0xB3	; 179
    30be:	fd 4f       	sbci	r31, 0xFD	; 253
    30c0:	80 83       	st	Z, r24

		if(m==1){
    30c2:	fe 01       	movw	r30, r28
    30c4:	e3 5b       	subi	r30, 0xB3	; 179
    30c6:	fd 4f       	sbci	r31, 0xFD	; 253
    30c8:	80 81       	ld	r24, Z
    30ca:	81 30       	cpi	r24, 0x01	; 1
    30cc:	09 f0       	breq	.+2      	; 0x30d0 <main+0x1792>
    30ce:	d7 c0       	rjmp	.+430    	; 0x327e <main+0x1940>
//if the press == 1 we rotate the motor clockwise (open the door)
			PWM_Timer0_Init(128);
    30d0:	80 e8       	ldi	r24, 0x80	; 128
    30d2:	0e 94 83 0c 	call	0x1906	; 0x1906 <PWM_Timer0_Init>

			DDRA|=(1<<PA0)|(1<<PA1);
    30d6:	aa e3       	ldi	r26, 0x3A	; 58
    30d8:	b0 e0       	ldi	r27, 0x00	; 0
    30da:	ea e3       	ldi	r30, 0x3A	; 58
    30dc:	f0 e0       	ldi	r31, 0x00	; 0
    30de:	80 81       	ld	r24, Z
    30e0:	83 60       	ori	r24, 0x03	; 3
    30e2:	8c 93       	st	X, r24
			PORTA=(1<<PA0);
    30e4:	eb e3       	ldi	r30, 0x3B	; 59
    30e6:	f0 e0       	ldi	r31, 0x00	; 0
    30e8:	81 e0       	ldi	r24, 0x01	; 1
    30ea:	80 83       	st	Z, r24
			PORTA&=~(1<<PA1);
    30ec:	ab e3       	ldi	r26, 0x3B	; 59
    30ee:	b0 e0       	ldi	r27, 0x00	; 0
    30f0:	eb e3       	ldi	r30, 0x3B	; 59
    30f2:	f0 e0       	ldi	r31, 0x00	; 0
    30f4:	80 81       	ld	r24, Z
    30f6:	8d 7f       	andi	r24, 0xFD	; 253
    30f8:	8c 93       	st	X, r24
    30fa:	fe 01       	movw	r30, r28
    30fc:	e7 59       	subi	r30, 0x97	; 151
    30fe:	fe 4f       	sbci	r31, 0xFE	; 254
    3100:	80 e0       	ldi	r24, 0x00	; 0
    3102:	90 e0       	ldi	r25, 0x00	; 0
    3104:	aa ef       	ldi	r26, 0xFA	; 250
    3106:	b4 e4       	ldi	r27, 0x44	; 68
    3108:	80 83       	st	Z, r24
    310a:	91 83       	std	Z+1, r25	; 0x01
    310c:	a2 83       	std	Z+2, r26	; 0x02
    310e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3110:	8e 01       	movw	r16, r28
    3112:	0b 59       	subi	r16, 0x9B	; 155
    3114:	1e 4f       	sbci	r17, 0xFE	; 254
    3116:	fe 01       	movw	r30, r28
    3118:	e7 59       	subi	r30, 0x97	; 151
    311a:	fe 4f       	sbci	r31, 0xFE	; 254
    311c:	60 81       	ld	r22, Z
    311e:	71 81       	ldd	r23, Z+1	; 0x01
    3120:	82 81       	ldd	r24, Z+2	; 0x02
    3122:	93 81       	ldd	r25, Z+3	; 0x03
    3124:	20 e0       	ldi	r18, 0x00	; 0
    3126:	30 e0       	ldi	r19, 0x00	; 0
    3128:	4a e7       	ldi	r20, 0x7A	; 122
    312a:	53 e4       	ldi	r21, 0x43	; 67
    312c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3130:	dc 01       	movw	r26, r24
    3132:	cb 01       	movw	r24, r22
    3134:	f8 01       	movw	r30, r16
    3136:	80 83       	st	Z, r24
    3138:	91 83       	std	Z+1, r25	; 0x01
    313a:	a2 83       	std	Z+2, r26	; 0x02
    313c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    313e:	fe 01       	movw	r30, r28
    3140:	eb 59       	subi	r30, 0x9B	; 155
    3142:	fe 4f       	sbci	r31, 0xFE	; 254
    3144:	60 81       	ld	r22, Z
    3146:	71 81       	ldd	r23, Z+1	; 0x01
    3148:	82 81       	ldd	r24, Z+2	; 0x02
    314a:	93 81       	ldd	r25, Z+3	; 0x03
    314c:	20 e0       	ldi	r18, 0x00	; 0
    314e:	30 e0       	ldi	r19, 0x00	; 0
    3150:	40 e8       	ldi	r20, 0x80	; 128
    3152:	5f e3       	ldi	r21, 0x3F	; 63
    3154:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3158:	88 23       	and	r24, r24
    315a:	44 f4       	brge	.+16     	; 0x316c <main+0x182e>
		__ticks = 1;
    315c:	fe 01       	movw	r30, r28
    315e:	ed 59       	subi	r30, 0x9D	; 157
    3160:	fe 4f       	sbci	r31, 0xFE	; 254
    3162:	81 e0       	ldi	r24, 0x01	; 1
    3164:	90 e0       	ldi	r25, 0x00	; 0
    3166:	91 83       	std	Z+1, r25	; 0x01
    3168:	80 83       	st	Z, r24
    316a:	64 c0       	rjmp	.+200    	; 0x3234 <main+0x18f6>
	else if (__tmp > 65535)
    316c:	fe 01       	movw	r30, r28
    316e:	eb 59       	subi	r30, 0x9B	; 155
    3170:	fe 4f       	sbci	r31, 0xFE	; 254
    3172:	60 81       	ld	r22, Z
    3174:	71 81       	ldd	r23, Z+1	; 0x01
    3176:	82 81       	ldd	r24, Z+2	; 0x02
    3178:	93 81       	ldd	r25, Z+3	; 0x03
    317a:	20 e0       	ldi	r18, 0x00	; 0
    317c:	3f ef       	ldi	r19, 0xFF	; 255
    317e:	4f e7       	ldi	r20, 0x7F	; 127
    3180:	57 e4       	ldi	r21, 0x47	; 71
    3182:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3186:	18 16       	cp	r1, r24
    3188:	0c f0       	brlt	.+2      	; 0x318c <main+0x184e>
    318a:	43 c0       	rjmp	.+134    	; 0x3212 <main+0x18d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    318c:	fe 01       	movw	r30, r28
    318e:	e7 59       	subi	r30, 0x97	; 151
    3190:	fe 4f       	sbci	r31, 0xFE	; 254
    3192:	60 81       	ld	r22, Z
    3194:	71 81       	ldd	r23, Z+1	; 0x01
    3196:	82 81       	ldd	r24, Z+2	; 0x02
    3198:	93 81       	ldd	r25, Z+3	; 0x03
    319a:	20 e0       	ldi	r18, 0x00	; 0
    319c:	30 e0       	ldi	r19, 0x00	; 0
    319e:	40 e2       	ldi	r20, 0x20	; 32
    31a0:	51 e4       	ldi	r21, 0x41	; 65
    31a2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31a6:	dc 01       	movw	r26, r24
    31a8:	cb 01       	movw	r24, r22
    31aa:	8e 01       	movw	r16, r28
    31ac:	0d 59       	subi	r16, 0x9D	; 157
    31ae:	1e 4f       	sbci	r17, 0xFE	; 254
    31b0:	bc 01       	movw	r22, r24
    31b2:	cd 01       	movw	r24, r26
    31b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31b8:	dc 01       	movw	r26, r24
    31ba:	cb 01       	movw	r24, r22
    31bc:	f8 01       	movw	r30, r16
    31be:	91 83       	std	Z+1, r25	; 0x01
    31c0:	80 83       	st	Z, r24
    31c2:	1f c0       	rjmp	.+62     	; 0x3202 <main+0x18c4>
    31c4:	fe 01       	movw	r30, r28
    31c6:	ef 59       	subi	r30, 0x9F	; 159
    31c8:	fe 4f       	sbci	r31, 0xFE	; 254
    31ca:	89 e1       	ldi	r24, 0x19	; 25
    31cc:	90 e0       	ldi	r25, 0x00	; 0
    31ce:	91 83       	std	Z+1, r25	; 0x01
    31d0:	80 83       	st	Z, r24
    31d2:	fe 01       	movw	r30, r28
    31d4:	ef 59       	subi	r30, 0x9F	; 159
    31d6:	fe 4f       	sbci	r31, 0xFE	; 254
    31d8:	80 81       	ld	r24, Z
    31da:	91 81       	ldd	r25, Z+1	; 0x01
    31dc:	01 97       	sbiw	r24, 0x01	; 1
    31de:	f1 f7       	brne	.-4      	; 0x31dc <main+0x189e>
    31e0:	fe 01       	movw	r30, r28
    31e2:	ef 59       	subi	r30, 0x9F	; 159
    31e4:	fe 4f       	sbci	r31, 0xFE	; 254
    31e6:	91 83       	std	Z+1, r25	; 0x01
    31e8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31ea:	de 01       	movw	r26, r28
    31ec:	ad 59       	subi	r26, 0x9D	; 157
    31ee:	be 4f       	sbci	r27, 0xFE	; 254
    31f0:	fe 01       	movw	r30, r28
    31f2:	ed 59       	subi	r30, 0x9D	; 157
    31f4:	fe 4f       	sbci	r31, 0xFE	; 254
    31f6:	80 81       	ld	r24, Z
    31f8:	91 81       	ldd	r25, Z+1	; 0x01
    31fa:	01 97       	sbiw	r24, 0x01	; 1
    31fc:	11 96       	adiw	r26, 0x01	; 1
    31fe:	9c 93       	st	X, r25
    3200:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3202:	fe 01       	movw	r30, r28
    3204:	ed 59       	subi	r30, 0x9D	; 157
    3206:	fe 4f       	sbci	r31, 0xFE	; 254
    3208:	80 81       	ld	r24, Z
    320a:	91 81       	ldd	r25, Z+1	; 0x01
    320c:	00 97       	sbiw	r24, 0x00	; 0
    320e:	d1 f6       	brne	.-76     	; 0x31c4 <main+0x1886>
    3210:	27 c0       	rjmp	.+78     	; 0x3260 <main+0x1922>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3212:	8e 01       	movw	r16, r28
    3214:	0d 59       	subi	r16, 0x9D	; 157
    3216:	1e 4f       	sbci	r17, 0xFE	; 254
    3218:	fe 01       	movw	r30, r28
    321a:	eb 59       	subi	r30, 0x9B	; 155
    321c:	fe 4f       	sbci	r31, 0xFE	; 254
    321e:	60 81       	ld	r22, Z
    3220:	71 81       	ldd	r23, Z+1	; 0x01
    3222:	82 81       	ldd	r24, Z+2	; 0x02
    3224:	93 81       	ldd	r25, Z+3	; 0x03
    3226:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    322a:	dc 01       	movw	r26, r24
    322c:	cb 01       	movw	r24, r22
    322e:	f8 01       	movw	r30, r16
    3230:	91 83       	std	Z+1, r25	; 0x01
    3232:	80 83       	st	Z, r24
    3234:	de 01       	movw	r26, r28
    3236:	a1 5a       	subi	r26, 0xA1	; 161
    3238:	be 4f       	sbci	r27, 0xFE	; 254
    323a:	fe 01       	movw	r30, r28
    323c:	ed 59       	subi	r30, 0x9D	; 157
    323e:	fe 4f       	sbci	r31, 0xFE	; 254
    3240:	80 81       	ld	r24, Z
    3242:	91 81       	ldd	r25, Z+1	; 0x01
    3244:	8d 93       	st	X+, r24
    3246:	9c 93       	st	X, r25
    3248:	fe 01       	movw	r30, r28
    324a:	e1 5a       	subi	r30, 0xA1	; 161
    324c:	fe 4f       	sbci	r31, 0xFE	; 254
    324e:	80 81       	ld	r24, Z
    3250:	91 81       	ldd	r25, Z+1	; 0x01
    3252:	01 97       	sbiw	r24, 0x01	; 1
    3254:	f1 f7       	brne	.-4      	; 0x3252 <main+0x1914>
    3256:	fe 01       	movw	r30, r28
    3258:	e1 5a       	subi	r30, 0xA1	; 161
    325a:	fe 4f       	sbci	r31, 0xFE	; 254
    325c:	91 83       	std	Z+1, r25	; 0x01
    325e:	80 83       	st	Z, r24

			_delay_ms(2000);
			/*stop*/
			PORTA&=~(1<<PA0);
    3260:	ab e3       	ldi	r26, 0x3B	; 59
    3262:	b0 e0       	ldi	r27, 0x00	; 0
    3264:	eb e3       	ldi	r30, 0x3B	; 59
    3266:	f0 e0       	ldi	r31, 0x00	; 0
    3268:	80 81       	ld	r24, Z
    326a:	8e 7f       	andi	r24, 0xFE	; 254
    326c:	8c 93       	st	X, r24
			PORTA&=~(1<<PA1);
    326e:	ab e3       	ldi	r26, 0x3B	; 59
    3270:	b0 e0       	ldi	r27, 0x00	; 0
    3272:	eb e3       	ldi	r30, 0x3B	; 59
    3274:	f0 e0       	ldi	r31, 0x00	; 0
    3276:	80 81       	ld	r24, Z
    3278:	8d 7f       	andi	r24, 0xFD	; 253
    327a:	8c 93       	st	X, r24
    327c:	1c cf       	rjmp	.-456    	; 0x30b6 <main+0x1778>

		}
		else if(m==2){
    327e:	fe 01       	movw	r30, r28
    3280:	e3 5b       	subi	r30, 0xB3	; 179
    3282:	fd 4f       	sbci	r31, 0xFD	; 253
    3284:	80 81       	ld	r24, Z
    3286:	82 30       	cpi	r24, 0x02	; 2
    3288:	09 f0       	breq	.+2      	; 0x328c <main+0x194e>
    328a:	d7 c0       	rjmp	.+430    	; 0x343a <main+0x1afc>
			//if the press == 1 we rotate the motor counter clockwise (close the door)
			PWM_Timer0_Init(128);
    328c:	80 e8       	ldi	r24, 0x80	; 128
    328e:	0e 94 83 0c 	call	0x1906	; 0x1906 <PWM_Timer0_Init>

				DDRA|=(1<<PA0)|(1<<PA1);
    3292:	aa e3       	ldi	r26, 0x3A	; 58
    3294:	b0 e0       	ldi	r27, 0x00	; 0
    3296:	ea e3       	ldi	r30, 0x3A	; 58
    3298:	f0 e0       	ldi	r31, 0x00	; 0
    329a:	80 81       	ld	r24, Z
    329c:	83 60       	ori	r24, 0x03	; 3
    329e:	8c 93       	st	X, r24
				PORTA=(1<<PA1);
    32a0:	eb e3       	ldi	r30, 0x3B	; 59
    32a2:	f0 e0       	ldi	r31, 0x00	; 0
    32a4:	82 e0       	ldi	r24, 0x02	; 2
    32a6:	80 83       	st	Z, r24
				PORTA&=~(1<<PA0);
    32a8:	ab e3       	ldi	r26, 0x3B	; 59
    32aa:	b0 e0       	ldi	r27, 0x00	; 0
    32ac:	eb e3       	ldi	r30, 0x3B	; 59
    32ae:	f0 e0       	ldi	r31, 0x00	; 0
    32b0:	80 81       	ld	r24, Z
    32b2:	8e 7f       	andi	r24, 0xFE	; 254
    32b4:	8c 93       	st	X, r24
    32b6:	fe 01       	movw	r30, r28
    32b8:	e5 5a       	subi	r30, 0xA5	; 165
    32ba:	fe 4f       	sbci	r31, 0xFE	; 254
    32bc:	80 e0       	ldi	r24, 0x00	; 0
    32be:	90 e0       	ldi	r25, 0x00	; 0
    32c0:	aa ef       	ldi	r26, 0xFA	; 250
    32c2:	b4 e4       	ldi	r27, 0x44	; 68
    32c4:	80 83       	st	Z, r24
    32c6:	91 83       	std	Z+1, r25	; 0x01
    32c8:	a2 83       	std	Z+2, r26	; 0x02
    32ca:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    32cc:	8e 01       	movw	r16, r28
    32ce:	09 5a       	subi	r16, 0xA9	; 169
    32d0:	1e 4f       	sbci	r17, 0xFE	; 254
    32d2:	fe 01       	movw	r30, r28
    32d4:	e5 5a       	subi	r30, 0xA5	; 165
    32d6:	fe 4f       	sbci	r31, 0xFE	; 254
    32d8:	60 81       	ld	r22, Z
    32da:	71 81       	ldd	r23, Z+1	; 0x01
    32dc:	82 81       	ldd	r24, Z+2	; 0x02
    32de:	93 81       	ldd	r25, Z+3	; 0x03
    32e0:	20 e0       	ldi	r18, 0x00	; 0
    32e2:	30 e0       	ldi	r19, 0x00	; 0
    32e4:	4a e7       	ldi	r20, 0x7A	; 122
    32e6:	53 e4       	ldi	r21, 0x43	; 67
    32e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32ec:	dc 01       	movw	r26, r24
    32ee:	cb 01       	movw	r24, r22
    32f0:	f8 01       	movw	r30, r16
    32f2:	80 83       	st	Z, r24
    32f4:	91 83       	std	Z+1, r25	; 0x01
    32f6:	a2 83       	std	Z+2, r26	; 0x02
    32f8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    32fa:	fe 01       	movw	r30, r28
    32fc:	e9 5a       	subi	r30, 0xA9	; 169
    32fe:	fe 4f       	sbci	r31, 0xFE	; 254
    3300:	60 81       	ld	r22, Z
    3302:	71 81       	ldd	r23, Z+1	; 0x01
    3304:	82 81       	ldd	r24, Z+2	; 0x02
    3306:	93 81       	ldd	r25, Z+3	; 0x03
    3308:	20 e0       	ldi	r18, 0x00	; 0
    330a:	30 e0       	ldi	r19, 0x00	; 0
    330c:	40 e8       	ldi	r20, 0x80	; 128
    330e:	5f e3       	ldi	r21, 0x3F	; 63
    3310:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3314:	88 23       	and	r24, r24
    3316:	44 f4       	brge	.+16     	; 0x3328 <main+0x19ea>
		__ticks = 1;
    3318:	fe 01       	movw	r30, r28
    331a:	eb 5a       	subi	r30, 0xAB	; 171
    331c:	fe 4f       	sbci	r31, 0xFE	; 254
    331e:	81 e0       	ldi	r24, 0x01	; 1
    3320:	90 e0       	ldi	r25, 0x00	; 0
    3322:	91 83       	std	Z+1, r25	; 0x01
    3324:	80 83       	st	Z, r24
    3326:	64 c0       	rjmp	.+200    	; 0x33f0 <main+0x1ab2>
	else if (__tmp > 65535)
    3328:	fe 01       	movw	r30, r28
    332a:	e9 5a       	subi	r30, 0xA9	; 169
    332c:	fe 4f       	sbci	r31, 0xFE	; 254
    332e:	60 81       	ld	r22, Z
    3330:	71 81       	ldd	r23, Z+1	; 0x01
    3332:	82 81       	ldd	r24, Z+2	; 0x02
    3334:	93 81       	ldd	r25, Z+3	; 0x03
    3336:	20 e0       	ldi	r18, 0x00	; 0
    3338:	3f ef       	ldi	r19, 0xFF	; 255
    333a:	4f e7       	ldi	r20, 0x7F	; 127
    333c:	57 e4       	ldi	r21, 0x47	; 71
    333e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3342:	18 16       	cp	r1, r24
    3344:	0c f0       	brlt	.+2      	; 0x3348 <main+0x1a0a>
    3346:	43 c0       	rjmp	.+134    	; 0x33ce <main+0x1a90>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3348:	fe 01       	movw	r30, r28
    334a:	e5 5a       	subi	r30, 0xA5	; 165
    334c:	fe 4f       	sbci	r31, 0xFE	; 254
    334e:	60 81       	ld	r22, Z
    3350:	71 81       	ldd	r23, Z+1	; 0x01
    3352:	82 81       	ldd	r24, Z+2	; 0x02
    3354:	93 81       	ldd	r25, Z+3	; 0x03
    3356:	20 e0       	ldi	r18, 0x00	; 0
    3358:	30 e0       	ldi	r19, 0x00	; 0
    335a:	40 e2       	ldi	r20, 0x20	; 32
    335c:	51 e4       	ldi	r21, 0x41	; 65
    335e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3362:	dc 01       	movw	r26, r24
    3364:	cb 01       	movw	r24, r22
    3366:	8e 01       	movw	r16, r28
    3368:	0b 5a       	subi	r16, 0xAB	; 171
    336a:	1e 4f       	sbci	r17, 0xFE	; 254
    336c:	bc 01       	movw	r22, r24
    336e:	cd 01       	movw	r24, r26
    3370:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3374:	dc 01       	movw	r26, r24
    3376:	cb 01       	movw	r24, r22
    3378:	f8 01       	movw	r30, r16
    337a:	91 83       	std	Z+1, r25	; 0x01
    337c:	80 83       	st	Z, r24
    337e:	1f c0       	rjmp	.+62     	; 0x33be <main+0x1a80>
    3380:	fe 01       	movw	r30, r28
    3382:	ed 5a       	subi	r30, 0xAD	; 173
    3384:	fe 4f       	sbci	r31, 0xFE	; 254
    3386:	89 e1       	ldi	r24, 0x19	; 25
    3388:	90 e0       	ldi	r25, 0x00	; 0
    338a:	91 83       	std	Z+1, r25	; 0x01
    338c:	80 83       	st	Z, r24
    338e:	fe 01       	movw	r30, r28
    3390:	ed 5a       	subi	r30, 0xAD	; 173
    3392:	fe 4f       	sbci	r31, 0xFE	; 254
    3394:	80 81       	ld	r24, Z
    3396:	91 81       	ldd	r25, Z+1	; 0x01
    3398:	01 97       	sbiw	r24, 0x01	; 1
    339a:	f1 f7       	brne	.-4      	; 0x3398 <main+0x1a5a>
    339c:	fe 01       	movw	r30, r28
    339e:	ed 5a       	subi	r30, 0xAD	; 173
    33a0:	fe 4f       	sbci	r31, 0xFE	; 254
    33a2:	91 83       	std	Z+1, r25	; 0x01
    33a4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33a6:	de 01       	movw	r26, r28
    33a8:	ab 5a       	subi	r26, 0xAB	; 171
    33aa:	be 4f       	sbci	r27, 0xFE	; 254
    33ac:	fe 01       	movw	r30, r28
    33ae:	eb 5a       	subi	r30, 0xAB	; 171
    33b0:	fe 4f       	sbci	r31, 0xFE	; 254
    33b2:	80 81       	ld	r24, Z
    33b4:	91 81       	ldd	r25, Z+1	; 0x01
    33b6:	01 97       	sbiw	r24, 0x01	; 1
    33b8:	11 96       	adiw	r26, 0x01	; 1
    33ba:	9c 93       	st	X, r25
    33bc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33be:	fe 01       	movw	r30, r28
    33c0:	eb 5a       	subi	r30, 0xAB	; 171
    33c2:	fe 4f       	sbci	r31, 0xFE	; 254
    33c4:	80 81       	ld	r24, Z
    33c6:	91 81       	ldd	r25, Z+1	; 0x01
    33c8:	00 97       	sbiw	r24, 0x00	; 0
    33ca:	d1 f6       	brne	.-76     	; 0x3380 <main+0x1a42>
    33cc:	27 c0       	rjmp	.+78     	; 0x341c <main+0x1ade>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33ce:	8e 01       	movw	r16, r28
    33d0:	0b 5a       	subi	r16, 0xAB	; 171
    33d2:	1e 4f       	sbci	r17, 0xFE	; 254
    33d4:	fe 01       	movw	r30, r28
    33d6:	e9 5a       	subi	r30, 0xA9	; 169
    33d8:	fe 4f       	sbci	r31, 0xFE	; 254
    33da:	60 81       	ld	r22, Z
    33dc:	71 81       	ldd	r23, Z+1	; 0x01
    33de:	82 81       	ldd	r24, Z+2	; 0x02
    33e0:	93 81       	ldd	r25, Z+3	; 0x03
    33e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33e6:	dc 01       	movw	r26, r24
    33e8:	cb 01       	movw	r24, r22
    33ea:	f8 01       	movw	r30, r16
    33ec:	91 83       	std	Z+1, r25	; 0x01
    33ee:	80 83       	st	Z, r24
    33f0:	de 01       	movw	r26, r28
    33f2:	af 5a       	subi	r26, 0xAF	; 175
    33f4:	be 4f       	sbci	r27, 0xFE	; 254
    33f6:	fe 01       	movw	r30, r28
    33f8:	eb 5a       	subi	r30, 0xAB	; 171
    33fa:	fe 4f       	sbci	r31, 0xFE	; 254
    33fc:	80 81       	ld	r24, Z
    33fe:	91 81       	ldd	r25, Z+1	; 0x01
    3400:	8d 93       	st	X+, r24
    3402:	9c 93       	st	X, r25
    3404:	fe 01       	movw	r30, r28
    3406:	ef 5a       	subi	r30, 0xAF	; 175
    3408:	fe 4f       	sbci	r31, 0xFE	; 254
    340a:	80 81       	ld	r24, Z
    340c:	91 81       	ldd	r25, Z+1	; 0x01
    340e:	01 97       	sbiw	r24, 0x01	; 1
    3410:	f1 f7       	brne	.-4      	; 0x340e <main+0x1ad0>
    3412:	fe 01       	movw	r30, r28
    3414:	ef 5a       	subi	r30, 0xAF	; 175
    3416:	fe 4f       	sbci	r31, 0xFE	; 254
    3418:	91 83       	std	Z+1, r25	; 0x01
    341a:	80 83       	st	Z, r24
				_delay_ms(2000);
				/*stop*/
				PORTA&=~(1<<PA1);
    341c:	ab e3       	ldi	r26, 0x3B	; 59
    341e:	b0 e0       	ldi	r27, 0x00	; 0
    3420:	eb e3       	ldi	r30, 0x3B	; 59
    3422:	f0 e0       	ldi	r31, 0x00	; 0
    3424:	80 81       	ld	r24, Z
    3426:	8d 7f       	andi	r24, 0xFD	; 253
    3428:	8c 93       	st	X, r24
				PORTA&=~(1<<PA0);
    342a:	ab e3       	ldi	r26, 0x3B	; 59
    342c:	b0 e0       	ldi	r27, 0x00	; 0
    342e:	eb e3       	ldi	r30, 0x3B	; 59
    3430:	f0 e0       	ldi	r31, 0x00	; 0
    3432:	80 81       	ld	r24, Z
    3434:	8e 7f       	andi	r24, 0xFE	; 254
    3436:	8c 93       	st	X, r24
    3438:	3e ce       	rjmp	.-900    	; 0x30b6 <main+0x1778>

		}
		else if(m==3){ // change password
    343a:	fe 01       	movw	r30, r28
    343c:	e3 5b       	subi	r30, 0xB3	; 179
    343e:	fd 4f       	sbci	r31, 0xFD	; 253
    3440:	80 81       	ld	r24, Z
    3442:	83 30       	cpi	r24, 0x03	; 3
    3444:	11 f0       	breq	.+4      	; 0x344a <main+0x1b0c>
    3446:	0c 94 86 2a 	jmp	0x550c	; 0x550c <main+0x3bce>
/*receive the new password */
			s1=UART_reseiveByte();
    344a:	0e 94 d1 2a 	call	0x55a2	; 0x55a2 <UART_reseiveByte>
    344e:	fe 01       	movw	r30, r28
    3450:	eb 5a       	subi	r30, 0xAB	; 171
    3452:	fd 4f       	sbci	r31, 0xFD	; 253
    3454:	80 83       	st	Z, r24
    3456:	fe 01       	movw	r30, r28
    3458:	e3 5b       	subi	r30, 0xB3	; 179
    345a:	fe 4f       	sbci	r31, 0xFE	; 254
    345c:	80 e0       	ldi	r24, 0x00	; 0
    345e:	90 e0       	ldi	r25, 0x00	; 0
    3460:	a0 e2       	ldi	r26, 0x20	; 32
    3462:	b1 e4       	ldi	r27, 0x41	; 65
    3464:	80 83       	st	Z, r24
    3466:	91 83       	std	Z+1, r25	; 0x01
    3468:	a2 83       	std	Z+2, r26	; 0x02
    346a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    346c:	8e 01       	movw	r16, r28
    346e:	07 5b       	subi	r16, 0xB7	; 183
    3470:	1e 4f       	sbci	r17, 0xFE	; 254
    3472:	fe 01       	movw	r30, r28
    3474:	e3 5b       	subi	r30, 0xB3	; 179
    3476:	fe 4f       	sbci	r31, 0xFE	; 254
    3478:	60 81       	ld	r22, Z
    347a:	71 81       	ldd	r23, Z+1	; 0x01
    347c:	82 81       	ldd	r24, Z+2	; 0x02
    347e:	93 81       	ldd	r25, Z+3	; 0x03
    3480:	20 e0       	ldi	r18, 0x00	; 0
    3482:	30 e0       	ldi	r19, 0x00	; 0
    3484:	4a e7       	ldi	r20, 0x7A	; 122
    3486:	53 e4       	ldi	r21, 0x43	; 67
    3488:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    348c:	dc 01       	movw	r26, r24
    348e:	cb 01       	movw	r24, r22
    3490:	f8 01       	movw	r30, r16
    3492:	80 83       	st	Z, r24
    3494:	91 83       	std	Z+1, r25	; 0x01
    3496:	a2 83       	std	Z+2, r26	; 0x02
    3498:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    349a:	fe 01       	movw	r30, r28
    349c:	e7 5b       	subi	r30, 0xB7	; 183
    349e:	fe 4f       	sbci	r31, 0xFE	; 254
    34a0:	60 81       	ld	r22, Z
    34a2:	71 81       	ldd	r23, Z+1	; 0x01
    34a4:	82 81       	ldd	r24, Z+2	; 0x02
    34a6:	93 81       	ldd	r25, Z+3	; 0x03
    34a8:	20 e0       	ldi	r18, 0x00	; 0
    34aa:	30 e0       	ldi	r19, 0x00	; 0
    34ac:	40 e8       	ldi	r20, 0x80	; 128
    34ae:	5f e3       	ldi	r21, 0x3F	; 63
    34b0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    34b4:	88 23       	and	r24, r24
    34b6:	44 f4       	brge	.+16     	; 0x34c8 <main+0x1b8a>
		__ticks = 1;
    34b8:	fe 01       	movw	r30, r28
    34ba:	e9 5b       	subi	r30, 0xB9	; 185
    34bc:	fe 4f       	sbci	r31, 0xFE	; 254
    34be:	81 e0       	ldi	r24, 0x01	; 1
    34c0:	90 e0       	ldi	r25, 0x00	; 0
    34c2:	91 83       	std	Z+1, r25	; 0x01
    34c4:	80 83       	st	Z, r24
    34c6:	64 c0       	rjmp	.+200    	; 0x3590 <main+0x1c52>
	else if (__tmp > 65535)
    34c8:	fe 01       	movw	r30, r28
    34ca:	e7 5b       	subi	r30, 0xB7	; 183
    34cc:	fe 4f       	sbci	r31, 0xFE	; 254
    34ce:	60 81       	ld	r22, Z
    34d0:	71 81       	ldd	r23, Z+1	; 0x01
    34d2:	82 81       	ldd	r24, Z+2	; 0x02
    34d4:	93 81       	ldd	r25, Z+3	; 0x03
    34d6:	20 e0       	ldi	r18, 0x00	; 0
    34d8:	3f ef       	ldi	r19, 0xFF	; 255
    34da:	4f e7       	ldi	r20, 0x7F	; 127
    34dc:	57 e4       	ldi	r21, 0x47	; 71
    34de:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    34e2:	18 16       	cp	r1, r24
    34e4:	0c f0       	brlt	.+2      	; 0x34e8 <main+0x1baa>
    34e6:	43 c0       	rjmp	.+134    	; 0x356e <main+0x1c30>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34e8:	fe 01       	movw	r30, r28
    34ea:	e3 5b       	subi	r30, 0xB3	; 179
    34ec:	fe 4f       	sbci	r31, 0xFE	; 254
    34ee:	60 81       	ld	r22, Z
    34f0:	71 81       	ldd	r23, Z+1	; 0x01
    34f2:	82 81       	ldd	r24, Z+2	; 0x02
    34f4:	93 81       	ldd	r25, Z+3	; 0x03
    34f6:	20 e0       	ldi	r18, 0x00	; 0
    34f8:	30 e0       	ldi	r19, 0x00	; 0
    34fa:	40 e2       	ldi	r20, 0x20	; 32
    34fc:	51 e4       	ldi	r21, 0x41	; 65
    34fe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3502:	dc 01       	movw	r26, r24
    3504:	cb 01       	movw	r24, r22
    3506:	8e 01       	movw	r16, r28
    3508:	09 5b       	subi	r16, 0xB9	; 185
    350a:	1e 4f       	sbci	r17, 0xFE	; 254
    350c:	bc 01       	movw	r22, r24
    350e:	cd 01       	movw	r24, r26
    3510:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3514:	dc 01       	movw	r26, r24
    3516:	cb 01       	movw	r24, r22
    3518:	f8 01       	movw	r30, r16
    351a:	91 83       	std	Z+1, r25	; 0x01
    351c:	80 83       	st	Z, r24
    351e:	1f c0       	rjmp	.+62     	; 0x355e <main+0x1c20>
    3520:	fe 01       	movw	r30, r28
    3522:	eb 5b       	subi	r30, 0xBB	; 187
    3524:	fe 4f       	sbci	r31, 0xFE	; 254
    3526:	89 e1       	ldi	r24, 0x19	; 25
    3528:	90 e0       	ldi	r25, 0x00	; 0
    352a:	91 83       	std	Z+1, r25	; 0x01
    352c:	80 83       	st	Z, r24
    352e:	fe 01       	movw	r30, r28
    3530:	eb 5b       	subi	r30, 0xBB	; 187
    3532:	fe 4f       	sbci	r31, 0xFE	; 254
    3534:	80 81       	ld	r24, Z
    3536:	91 81       	ldd	r25, Z+1	; 0x01
    3538:	01 97       	sbiw	r24, 0x01	; 1
    353a:	f1 f7       	brne	.-4      	; 0x3538 <main+0x1bfa>
    353c:	fe 01       	movw	r30, r28
    353e:	eb 5b       	subi	r30, 0xBB	; 187
    3540:	fe 4f       	sbci	r31, 0xFE	; 254
    3542:	91 83       	std	Z+1, r25	; 0x01
    3544:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3546:	de 01       	movw	r26, r28
    3548:	a9 5b       	subi	r26, 0xB9	; 185
    354a:	be 4f       	sbci	r27, 0xFE	; 254
    354c:	fe 01       	movw	r30, r28
    354e:	e9 5b       	subi	r30, 0xB9	; 185
    3550:	fe 4f       	sbci	r31, 0xFE	; 254
    3552:	80 81       	ld	r24, Z
    3554:	91 81       	ldd	r25, Z+1	; 0x01
    3556:	01 97       	sbiw	r24, 0x01	; 1
    3558:	11 96       	adiw	r26, 0x01	; 1
    355a:	9c 93       	st	X, r25
    355c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    355e:	fe 01       	movw	r30, r28
    3560:	e9 5b       	subi	r30, 0xB9	; 185
    3562:	fe 4f       	sbci	r31, 0xFE	; 254
    3564:	80 81       	ld	r24, Z
    3566:	91 81       	ldd	r25, Z+1	; 0x01
    3568:	00 97       	sbiw	r24, 0x00	; 0
    356a:	d1 f6       	brne	.-76     	; 0x3520 <main+0x1be2>
    356c:	27 c0       	rjmp	.+78     	; 0x35bc <main+0x1c7e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    356e:	8e 01       	movw	r16, r28
    3570:	09 5b       	subi	r16, 0xB9	; 185
    3572:	1e 4f       	sbci	r17, 0xFE	; 254
    3574:	fe 01       	movw	r30, r28
    3576:	e7 5b       	subi	r30, 0xB7	; 183
    3578:	fe 4f       	sbci	r31, 0xFE	; 254
    357a:	60 81       	ld	r22, Z
    357c:	71 81       	ldd	r23, Z+1	; 0x01
    357e:	82 81       	ldd	r24, Z+2	; 0x02
    3580:	93 81       	ldd	r25, Z+3	; 0x03
    3582:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3586:	dc 01       	movw	r26, r24
    3588:	cb 01       	movw	r24, r22
    358a:	f8 01       	movw	r30, r16
    358c:	91 83       	std	Z+1, r25	; 0x01
    358e:	80 83       	st	Z, r24
    3590:	de 01       	movw	r26, r28
    3592:	ad 5b       	subi	r26, 0xBD	; 189
    3594:	be 4f       	sbci	r27, 0xFE	; 254
    3596:	fe 01       	movw	r30, r28
    3598:	e9 5b       	subi	r30, 0xB9	; 185
    359a:	fe 4f       	sbci	r31, 0xFE	; 254
    359c:	80 81       	ld	r24, Z
    359e:	91 81       	ldd	r25, Z+1	; 0x01
    35a0:	8d 93       	st	X+, r24
    35a2:	9c 93       	st	X, r25
    35a4:	fe 01       	movw	r30, r28
    35a6:	ed 5b       	subi	r30, 0xBD	; 189
    35a8:	fe 4f       	sbci	r31, 0xFE	; 254
    35aa:	80 81       	ld	r24, Z
    35ac:	91 81       	ldd	r25, Z+1	; 0x01
    35ae:	01 97       	sbiw	r24, 0x01	; 1
    35b0:	f1 f7       	brne	.-4      	; 0x35ae <main+0x1c70>
    35b2:	fe 01       	movw	r30, r28
    35b4:	ed 5b       	subi	r30, 0xBD	; 189
    35b6:	fe 4f       	sbci	r31, 0xFE	; 254
    35b8:	91 83       	std	Z+1, r25	; 0x01
    35ba:	80 83       	st	Z, r24
			_delay_ms(10);
			s2=UART_reseiveByte();
    35bc:	0e 94 d1 2a 	call	0x55a2	; 0x55a2 <UART_reseiveByte>
    35c0:	fe 01       	movw	r30, r28
    35c2:	ec 5a       	subi	r30, 0xAC	; 172
    35c4:	fd 4f       	sbci	r31, 0xFD	; 253
    35c6:	80 83       	st	Z, r24
    35c8:	fe 01       	movw	r30, r28
    35ca:	e1 5c       	subi	r30, 0xC1	; 193
    35cc:	fe 4f       	sbci	r31, 0xFE	; 254
    35ce:	80 e0       	ldi	r24, 0x00	; 0
    35d0:	90 e0       	ldi	r25, 0x00	; 0
    35d2:	a0 e2       	ldi	r26, 0x20	; 32
    35d4:	b1 e4       	ldi	r27, 0x41	; 65
    35d6:	80 83       	st	Z, r24
    35d8:	91 83       	std	Z+1, r25	; 0x01
    35da:	a2 83       	std	Z+2, r26	; 0x02
    35dc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35de:	8e 01       	movw	r16, r28
    35e0:	05 5c       	subi	r16, 0xC5	; 197
    35e2:	1e 4f       	sbci	r17, 0xFE	; 254
    35e4:	fe 01       	movw	r30, r28
    35e6:	e1 5c       	subi	r30, 0xC1	; 193
    35e8:	fe 4f       	sbci	r31, 0xFE	; 254
    35ea:	60 81       	ld	r22, Z
    35ec:	71 81       	ldd	r23, Z+1	; 0x01
    35ee:	82 81       	ldd	r24, Z+2	; 0x02
    35f0:	93 81       	ldd	r25, Z+3	; 0x03
    35f2:	20 e0       	ldi	r18, 0x00	; 0
    35f4:	30 e0       	ldi	r19, 0x00	; 0
    35f6:	4a e7       	ldi	r20, 0x7A	; 122
    35f8:	53 e4       	ldi	r21, 0x43	; 67
    35fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35fe:	dc 01       	movw	r26, r24
    3600:	cb 01       	movw	r24, r22
    3602:	f8 01       	movw	r30, r16
    3604:	80 83       	st	Z, r24
    3606:	91 83       	std	Z+1, r25	; 0x01
    3608:	a2 83       	std	Z+2, r26	; 0x02
    360a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    360c:	fe 01       	movw	r30, r28
    360e:	e5 5c       	subi	r30, 0xC5	; 197
    3610:	fe 4f       	sbci	r31, 0xFE	; 254
    3612:	60 81       	ld	r22, Z
    3614:	71 81       	ldd	r23, Z+1	; 0x01
    3616:	82 81       	ldd	r24, Z+2	; 0x02
    3618:	93 81       	ldd	r25, Z+3	; 0x03
    361a:	20 e0       	ldi	r18, 0x00	; 0
    361c:	30 e0       	ldi	r19, 0x00	; 0
    361e:	40 e8       	ldi	r20, 0x80	; 128
    3620:	5f e3       	ldi	r21, 0x3F	; 63
    3622:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3626:	88 23       	and	r24, r24
    3628:	44 f4       	brge	.+16     	; 0x363a <main+0x1cfc>
		__ticks = 1;
    362a:	fe 01       	movw	r30, r28
    362c:	e7 5c       	subi	r30, 0xC7	; 199
    362e:	fe 4f       	sbci	r31, 0xFE	; 254
    3630:	81 e0       	ldi	r24, 0x01	; 1
    3632:	90 e0       	ldi	r25, 0x00	; 0
    3634:	91 83       	std	Z+1, r25	; 0x01
    3636:	80 83       	st	Z, r24
    3638:	64 c0       	rjmp	.+200    	; 0x3702 <main+0x1dc4>
	else if (__tmp > 65535)
    363a:	fe 01       	movw	r30, r28
    363c:	e5 5c       	subi	r30, 0xC5	; 197
    363e:	fe 4f       	sbci	r31, 0xFE	; 254
    3640:	60 81       	ld	r22, Z
    3642:	71 81       	ldd	r23, Z+1	; 0x01
    3644:	82 81       	ldd	r24, Z+2	; 0x02
    3646:	93 81       	ldd	r25, Z+3	; 0x03
    3648:	20 e0       	ldi	r18, 0x00	; 0
    364a:	3f ef       	ldi	r19, 0xFF	; 255
    364c:	4f e7       	ldi	r20, 0x7F	; 127
    364e:	57 e4       	ldi	r21, 0x47	; 71
    3650:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3654:	18 16       	cp	r1, r24
    3656:	0c f0       	brlt	.+2      	; 0x365a <main+0x1d1c>
    3658:	43 c0       	rjmp	.+134    	; 0x36e0 <main+0x1da2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    365a:	fe 01       	movw	r30, r28
    365c:	e1 5c       	subi	r30, 0xC1	; 193
    365e:	fe 4f       	sbci	r31, 0xFE	; 254
    3660:	60 81       	ld	r22, Z
    3662:	71 81       	ldd	r23, Z+1	; 0x01
    3664:	82 81       	ldd	r24, Z+2	; 0x02
    3666:	93 81       	ldd	r25, Z+3	; 0x03
    3668:	20 e0       	ldi	r18, 0x00	; 0
    366a:	30 e0       	ldi	r19, 0x00	; 0
    366c:	40 e2       	ldi	r20, 0x20	; 32
    366e:	51 e4       	ldi	r21, 0x41	; 65
    3670:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3674:	dc 01       	movw	r26, r24
    3676:	cb 01       	movw	r24, r22
    3678:	8e 01       	movw	r16, r28
    367a:	07 5c       	subi	r16, 0xC7	; 199
    367c:	1e 4f       	sbci	r17, 0xFE	; 254
    367e:	bc 01       	movw	r22, r24
    3680:	cd 01       	movw	r24, r26
    3682:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3686:	dc 01       	movw	r26, r24
    3688:	cb 01       	movw	r24, r22
    368a:	f8 01       	movw	r30, r16
    368c:	91 83       	std	Z+1, r25	; 0x01
    368e:	80 83       	st	Z, r24
    3690:	1f c0       	rjmp	.+62     	; 0x36d0 <main+0x1d92>
    3692:	fe 01       	movw	r30, r28
    3694:	e9 5c       	subi	r30, 0xC9	; 201
    3696:	fe 4f       	sbci	r31, 0xFE	; 254
    3698:	89 e1       	ldi	r24, 0x19	; 25
    369a:	90 e0       	ldi	r25, 0x00	; 0
    369c:	91 83       	std	Z+1, r25	; 0x01
    369e:	80 83       	st	Z, r24
    36a0:	fe 01       	movw	r30, r28
    36a2:	e9 5c       	subi	r30, 0xC9	; 201
    36a4:	fe 4f       	sbci	r31, 0xFE	; 254
    36a6:	80 81       	ld	r24, Z
    36a8:	91 81       	ldd	r25, Z+1	; 0x01
    36aa:	01 97       	sbiw	r24, 0x01	; 1
    36ac:	f1 f7       	brne	.-4      	; 0x36aa <main+0x1d6c>
    36ae:	fe 01       	movw	r30, r28
    36b0:	e9 5c       	subi	r30, 0xC9	; 201
    36b2:	fe 4f       	sbci	r31, 0xFE	; 254
    36b4:	91 83       	std	Z+1, r25	; 0x01
    36b6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36b8:	de 01       	movw	r26, r28
    36ba:	a7 5c       	subi	r26, 0xC7	; 199
    36bc:	be 4f       	sbci	r27, 0xFE	; 254
    36be:	fe 01       	movw	r30, r28
    36c0:	e7 5c       	subi	r30, 0xC7	; 199
    36c2:	fe 4f       	sbci	r31, 0xFE	; 254
    36c4:	80 81       	ld	r24, Z
    36c6:	91 81       	ldd	r25, Z+1	; 0x01
    36c8:	01 97       	sbiw	r24, 0x01	; 1
    36ca:	11 96       	adiw	r26, 0x01	; 1
    36cc:	9c 93       	st	X, r25
    36ce:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36d0:	fe 01       	movw	r30, r28
    36d2:	e7 5c       	subi	r30, 0xC7	; 199
    36d4:	fe 4f       	sbci	r31, 0xFE	; 254
    36d6:	80 81       	ld	r24, Z
    36d8:	91 81       	ldd	r25, Z+1	; 0x01
    36da:	00 97       	sbiw	r24, 0x00	; 0
    36dc:	d1 f6       	brne	.-76     	; 0x3692 <main+0x1d54>
    36de:	27 c0       	rjmp	.+78     	; 0x372e <main+0x1df0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36e0:	8e 01       	movw	r16, r28
    36e2:	07 5c       	subi	r16, 0xC7	; 199
    36e4:	1e 4f       	sbci	r17, 0xFE	; 254
    36e6:	fe 01       	movw	r30, r28
    36e8:	e5 5c       	subi	r30, 0xC5	; 197
    36ea:	fe 4f       	sbci	r31, 0xFE	; 254
    36ec:	60 81       	ld	r22, Z
    36ee:	71 81       	ldd	r23, Z+1	; 0x01
    36f0:	82 81       	ldd	r24, Z+2	; 0x02
    36f2:	93 81       	ldd	r25, Z+3	; 0x03
    36f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36f8:	dc 01       	movw	r26, r24
    36fa:	cb 01       	movw	r24, r22
    36fc:	f8 01       	movw	r30, r16
    36fe:	91 83       	std	Z+1, r25	; 0x01
    3700:	80 83       	st	Z, r24
    3702:	de 01       	movw	r26, r28
    3704:	ab 5c       	subi	r26, 0xCB	; 203
    3706:	be 4f       	sbci	r27, 0xFE	; 254
    3708:	fe 01       	movw	r30, r28
    370a:	e7 5c       	subi	r30, 0xC7	; 199
    370c:	fe 4f       	sbci	r31, 0xFE	; 254
    370e:	80 81       	ld	r24, Z
    3710:	91 81       	ldd	r25, Z+1	; 0x01
    3712:	8d 93       	st	X+, r24
    3714:	9c 93       	st	X, r25
    3716:	fe 01       	movw	r30, r28
    3718:	eb 5c       	subi	r30, 0xCB	; 203
    371a:	fe 4f       	sbci	r31, 0xFE	; 254
    371c:	80 81       	ld	r24, Z
    371e:	91 81       	ldd	r25, Z+1	; 0x01
    3720:	01 97       	sbiw	r24, 0x01	; 1
    3722:	f1 f7       	brne	.-4      	; 0x3720 <main+0x1de2>
    3724:	fe 01       	movw	r30, r28
    3726:	eb 5c       	subi	r30, 0xCB	; 203
    3728:	fe 4f       	sbci	r31, 0xFE	; 254
    372a:	91 83       	std	Z+1, r25	; 0x01
    372c:	80 83       	st	Z, r24
			_delay_ms(10);
			s3=UART_reseiveByte();
    372e:	0e 94 d1 2a 	call	0x55a2	; 0x55a2 <UART_reseiveByte>
    3732:	fe 01       	movw	r30, r28
    3734:	ed 5a       	subi	r30, 0xAD	; 173
    3736:	fd 4f       	sbci	r31, 0xFD	; 253
    3738:	80 83       	st	Z, r24
    373a:	fe 01       	movw	r30, r28
    373c:	ef 5c       	subi	r30, 0xCF	; 207
    373e:	fe 4f       	sbci	r31, 0xFE	; 254
    3740:	80 e0       	ldi	r24, 0x00	; 0
    3742:	90 e0       	ldi	r25, 0x00	; 0
    3744:	a0 e2       	ldi	r26, 0x20	; 32
    3746:	b1 e4       	ldi	r27, 0x41	; 65
    3748:	80 83       	st	Z, r24
    374a:	91 83       	std	Z+1, r25	; 0x01
    374c:	a2 83       	std	Z+2, r26	; 0x02
    374e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3750:	8e 01       	movw	r16, r28
    3752:	03 5d       	subi	r16, 0xD3	; 211
    3754:	1e 4f       	sbci	r17, 0xFE	; 254
    3756:	fe 01       	movw	r30, r28
    3758:	ef 5c       	subi	r30, 0xCF	; 207
    375a:	fe 4f       	sbci	r31, 0xFE	; 254
    375c:	60 81       	ld	r22, Z
    375e:	71 81       	ldd	r23, Z+1	; 0x01
    3760:	82 81       	ldd	r24, Z+2	; 0x02
    3762:	93 81       	ldd	r25, Z+3	; 0x03
    3764:	20 e0       	ldi	r18, 0x00	; 0
    3766:	30 e0       	ldi	r19, 0x00	; 0
    3768:	4a e7       	ldi	r20, 0x7A	; 122
    376a:	53 e4       	ldi	r21, 0x43	; 67
    376c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3770:	dc 01       	movw	r26, r24
    3772:	cb 01       	movw	r24, r22
    3774:	f8 01       	movw	r30, r16
    3776:	80 83       	st	Z, r24
    3778:	91 83       	std	Z+1, r25	; 0x01
    377a:	a2 83       	std	Z+2, r26	; 0x02
    377c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    377e:	fe 01       	movw	r30, r28
    3780:	e3 5d       	subi	r30, 0xD3	; 211
    3782:	fe 4f       	sbci	r31, 0xFE	; 254
    3784:	60 81       	ld	r22, Z
    3786:	71 81       	ldd	r23, Z+1	; 0x01
    3788:	82 81       	ldd	r24, Z+2	; 0x02
    378a:	93 81       	ldd	r25, Z+3	; 0x03
    378c:	20 e0       	ldi	r18, 0x00	; 0
    378e:	30 e0       	ldi	r19, 0x00	; 0
    3790:	40 e8       	ldi	r20, 0x80	; 128
    3792:	5f e3       	ldi	r21, 0x3F	; 63
    3794:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3798:	88 23       	and	r24, r24
    379a:	44 f4       	brge	.+16     	; 0x37ac <main+0x1e6e>
		__ticks = 1;
    379c:	fe 01       	movw	r30, r28
    379e:	e5 5d       	subi	r30, 0xD5	; 213
    37a0:	fe 4f       	sbci	r31, 0xFE	; 254
    37a2:	81 e0       	ldi	r24, 0x01	; 1
    37a4:	90 e0       	ldi	r25, 0x00	; 0
    37a6:	91 83       	std	Z+1, r25	; 0x01
    37a8:	80 83       	st	Z, r24
    37aa:	64 c0       	rjmp	.+200    	; 0x3874 <main+0x1f36>
	else if (__tmp > 65535)
    37ac:	fe 01       	movw	r30, r28
    37ae:	e3 5d       	subi	r30, 0xD3	; 211
    37b0:	fe 4f       	sbci	r31, 0xFE	; 254
    37b2:	60 81       	ld	r22, Z
    37b4:	71 81       	ldd	r23, Z+1	; 0x01
    37b6:	82 81       	ldd	r24, Z+2	; 0x02
    37b8:	93 81       	ldd	r25, Z+3	; 0x03
    37ba:	20 e0       	ldi	r18, 0x00	; 0
    37bc:	3f ef       	ldi	r19, 0xFF	; 255
    37be:	4f e7       	ldi	r20, 0x7F	; 127
    37c0:	57 e4       	ldi	r21, 0x47	; 71
    37c2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    37c6:	18 16       	cp	r1, r24
    37c8:	0c f0       	brlt	.+2      	; 0x37cc <main+0x1e8e>
    37ca:	43 c0       	rjmp	.+134    	; 0x3852 <main+0x1f14>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37cc:	fe 01       	movw	r30, r28
    37ce:	ef 5c       	subi	r30, 0xCF	; 207
    37d0:	fe 4f       	sbci	r31, 0xFE	; 254
    37d2:	60 81       	ld	r22, Z
    37d4:	71 81       	ldd	r23, Z+1	; 0x01
    37d6:	82 81       	ldd	r24, Z+2	; 0x02
    37d8:	93 81       	ldd	r25, Z+3	; 0x03
    37da:	20 e0       	ldi	r18, 0x00	; 0
    37dc:	30 e0       	ldi	r19, 0x00	; 0
    37de:	40 e2       	ldi	r20, 0x20	; 32
    37e0:	51 e4       	ldi	r21, 0x41	; 65
    37e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    37e6:	dc 01       	movw	r26, r24
    37e8:	cb 01       	movw	r24, r22
    37ea:	8e 01       	movw	r16, r28
    37ec:	05 5d       	subi	r16, 0xD5	; 213
    37ee:	1e 4f       	sbci	r17, 0xFE	; 254
    37f0:	bc 01       	movw	r22, r24
    37f2:	cd 01       	movw	r24, r26
    37f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37f8:	dc 01       	movw	r26, r24
    37fa:	cb 01       	movw	r24, r22
    37fc:	f8 01       	movw	r30, r16
    37fe:	91 83       	std	Z+1, r25	; 0x01
    3800:	80 83       	st	Z, r24
    3802:	1f c0       	rjmp	.+62     	; 0x3842 <main+0x1f04>
    3804:	fe 01       	movw	r30, r28
    3806:	e7 5d       	subi	r30, 0xD7	; 215
    3808:	fe 4f       	sbci	r31, 0xFE	; 254
    380a:	89 e1       	ldi	r24, 0x19	; 25
    380c:	90 e0       	ldi	r25, 0x00	; 0
    380e:	91 83       	std	Z+1, r25	; 0x01
    3810:	80 83       	st	Z, r24
    3812:	fe 01       	movw	r30, r28
    3814:	e7 5d       	subi	r30, 0xD7	; 215
    3816:	fe 4f       	sbci	r31, 0xFE	; 254
    3818:	80 81       	ld	r24, Z
    381a:	91 81       	ldd	r25, Z+1	; 0x01
    381c:	01 97       	sbiw	r24, 0x01	; 1
    381e:	f1 f7       	brne	.-4      	; 0x381c <main+0x1ede>
    3820:	fe 01       	movw	r30, r28
    3822:	e7 5d       	subi	r30, 0xD7	; 215
    3824:	fe 4f       	sbci	r31, 0xFE	; 254
    3826:	91 83       	std	Z+1, r25	; 0x01
    3828:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    382a:	de 01       	movw	r26, r28
    382c:	a5 5d       	subi	r26, 0xD5	; 213
    382e:	be 4f       	sbci	r27, 0xFE	; 254
    3830:	fe 01       	movw	r30, r28
    3832:	e5 5d       	subi	r30, 0xD5	; 213
    3834:	fe 4f       	sbci	r31, 0xFE	; 254
    3836:	80 81       	ld	r24, Z
    3838:	91 81       	ldd	r25, Z+1	; 0x01
    383a:	01 97       	sbiw	r24, 0x01	; 1
    383c:	11 96       	adiw	r26, 0x01	; 1
    383e:	9c 93       	st	X, r25
    3840:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3842:	fe 01       	movw	r30, r28
    3844:	e5 5d       	subi	r30, 0xD5	; 213
    3846:	fe 4f       	sbci	r31, 0xFE	; 254
    3848:	80 81       	ld	r24, Z
    384a:	91 81       	ldd	r25, Z+1	; 0x01
    384c:	00 97       	sbiw	r24, 0x00	; 0
    384e:	d1 f6       	brne	.-76     	; 0x3804 <main+0x1ec6>
    3850:	27 c0       	rjmp	.+78     	; 0x38a0 <main+0x1f62>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3852:	8e 01       	movw	r16, r28
    3854:	05 5d       	subi	r16, 0xD5	; 213
    3856:	1e 4f       	sbci	r17, 0xFE	; 254
    3858:	fe 01       	movw	r30, r28
    385a:	e3 5d       	subi	r30, 0xD3	; 211
    385c:	fe 4f       	sbci	r31, 0xFE	; 254
    385e:	60 81       	ld	r22, Z
    3860:	71 81       	ldd	r23, Z+1	; 0x01
    3862:	82 81       	ldd	r24, Z+2	; 0x02
    3864:	93 81       	ldd	r25, Z+3	; 0x03
    3866:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    386a:	dc 01       	movw	r26, r24
    386c:	cb 01       	movw	r24, r22
    386e:	f8 01       	movw	r30, r16
    3870:	91 83       	std	Z+1, r25	; 0x01
    3872:	80 83       	st	Z, r24
    3874:	de 01       	movw	r26, r28
    3876:	a9 5d       	subi	r26, 0xD9	; 217
    3878:	be 4f       	sbci	r27, 0xFE	; 254
    387a:	fe 01       	movw	r30, r28
    387c:	e5 5d       	subi	r30, 0xD5	; 213
    387e:	fe 4f       	sbci	r31, 0xFE	; 254
    3880:	80 81       	ld	r24, Z
    3882:	91 81       	ldd	r25, Z+1	; 0x01
    3884:	8d 93       	st	X+, r24
    3886:	9c 93       	st	X, r25
    3888:	fe 01       	movw	r30, r28
    388a:	e9 5d       	subi	r30, 0xD9	; 217
    388c:	fe 4f       	sbci	r31, 0xFE	; 254
    388e:	80 81       	ld	r24, Z
    3890:	91 81       	ldd	r25, Z+1	; 0x01
    3892:	01 97       	sbiw	r24, 0x01	; 1
    3894:	f1 f7       	brne	.-4      	; 0x3892 <main+0x1f54>
    3896:	fe 01       	movw	r30, r28
    3898:	e9 5d       	subi	r30, 0xD9	; 217
    389a:	fe 4f       	sbci	r31, 0xFE	; 254
    389c:	91 83       	std	Z+1, r25	; 0x01
    389e:	80 83       	st	Z, r24
			_delay_ms(10);
			s4=UART_reseiveByte();
    38a0:	0e 94 d1 2a 	call	0x55a2	; 0x55a2 <UART_reseiveByte>
    38a4:	fe 01       	movw	r30, r28
    38a6:	ee 5a       	subi	r30, 0xAE	; 174
    38a8:	fd 4f       	sbci	r31, 0xFD	; 253
    38aa:	80 83       	st	Z, r24
    38ac:	fe 01       	movw	r30, r28
    38ae:	ed 5d       	subi	r30, 0xDD	; 221
    38b0:	fe 4f       	sbci	r31, 0xFE	; 254
    38b2:	80 e0       	ldi	r24, 0x00	; 0
    38b4:	90 e0       	ldi	r25, 0x00	; 0
    38b6:	a0 e2       	ldi	r26, 0x20	; 32
    38b8:	b1 e4       	ldi	r27, 0x41	; 65
    38ba:	80 83       	st	Z, r24
    38bc:	91 83       	std	Z+1, r25	; 0x01
    38be:	a2 83       	std	Z+2, r26	; 0x02
    38c0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38c2:	8e 01       	movw	r16, r28
    38c4:	01 5e       	subi	r16, 0xE1	; 225
    38c6:	1e 4f       	sbci	r17, 0xFE	; 254
    38c8:	fe 01       	movw	r30, r28
    38ca:	ed 5d       	subi	r30, 0xDD	; 221
    38cc:	fe 4f       	sbci	r31, 0xFE	; 254
    38ce:	60 81       	ld	r22, Z
    38d0:	71 81       	ldd	r23, Z+1	; 0x01
    38d2:	82 81       	ldd	r24, Z+2	; 0x02
    38d4:	93 81       	ldd	r25, Z+3	; 0x03
    38d6:	20 e0       	ldi	r18, 0x00	; 0
    38d8:	30 e0       	ldi	r19, 0x00	; 0
    38da:	4a e7       	ldi	r20, 0x7A	; 122
    38dc:	53 e4       	ldi	r21, 0x43	; 67
    38de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    38e2:	dc 01       	movw	r26, r24
    38e4:	cb 01       	movw	r24, r22
    38e6:	f8 01       	movw	r30, r16
    38e8:	80 83       	st	Z, r24
    38ea:	91 83       	std	Z+1, r25	; 0x01
    38ec:	a2 83       	std	Z+2, r26	; 0x02
    38ee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    38f0:	fe 01       	movw	r30, r28
    38f2:	e1 5e       	subi	r30, 0xE1	; 225
    38f4:	fe 4f       	sbci	r31, 0xFE	; 254
    38f6:	60 81       	ld	r22, Z
    38f8:	71 81       	ldd	r23, Z+1	; 0x01
    38fa:	82 81       	ldd	r24, Z+2	; 0x02
    38fc:	93 81       	ldd	r25, Z+3	; 0x03
    38fe:	20 e0       	ldi	r18, 0x00	; 0
    3900:	30 e0       	ldi	r19, 0x00	; 0
    3902:	40 e8       	ldi	r20, 0x80	; 128
    3904:	5f e3       	ldi	r21, 0x3F	; 63
    3906:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    390a:	88 23       	and	r24, r24
    390c:	44 f4       	brge	.+16     	; 0x391e <main+0x1fe0>
		__ticks = 1;
    390e:	fe 01       	movw	r30, r28
    3910:	e3 5e       	subi	r30, 0xE3	; 227
    3912:	fe 4f       	sbci	r31, 0xFE	; 254
    3914:	81 e0       	ldi	r24, 0x01	; 1
    3916:	90 e0       	ldi	r25, 0x00	; 0
    3918:	91 83       	std	Z+1, r25	; 0x01
    391a:	80 83       	st	Z, r24
    391c:	64 c0       	rjmp	.+200    	; 0x39e6 <main+0x20a8>
	else if (__tmp > 65535)
    391e:	fe 01       	movw	r30, r28
    3920:	e1 5e       	subi	r30, 0xE1	; 225
    3922:	fe 4f       	sbci	r31, 0xFE	; 254
    3924:	60 81       	ld	r22, Z
    3926:	71 81       	ldd	r23, Z+1	; 0x01
    3928:	82 81       	ldd	r24, Z+2	; 0x02
    392a:	93 81       	ldd	r25, Z+3	; 0x03
    392c:	20 e0       	ldi	r18, 0x00	; 0
    392e:	3f ef       	ldi	r19, 0xFF	; 255
    3930:	4f e7       	ldi	r20, 0x7F	; 127
    3932:	57 e4       	ldi	r21, 0x47	; 71
    3934:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3938:	18 16       	cp	r1, r24
    393a:	0c f0       	brlt	.+2      	; 0x393e <main+0x2000>
    393c:	43 c0       	rjmp	.+134    	; 0x39c4 <main+0x2086>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    393e:	fe 01       	movw	r30, r28
    3940:	ed 5d       	subi	r30, 0xDD	; 221
    3942:	fe 4f       	sbci	r31, 0xFE	; 254
    3944:	60 81       	ld	r22, Z
    3946:	71 81       	ldd	r23, Z+1	; 0x01
    3948:	82 81       	ldd	r24, Z+2	; 0x02
    394a:	93 81       	ldd	r25, Z+3	; 0x03
    394c:	20 e0       	ldi	r18, 0x00	; 0
    394e:	30 e0       	ldi	r19, 0x00	; 0
    3950:	40 e2       	ldi	r20, 0x20	; 32
    3952:	51 e4       	ldi	r21, 0x41	; 65
    3954:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3958:	dc 01       	movw	r26, r24
    395a:	cb 01       	movw	r24, r22
    395c:	8e 01       	movw	r16, r28
    395e:	03 5e       	subi	r16, 0xE3	; 227
    3960:	1e 4f       	sbci	r17, 0xFE	; 254
    3962:	bc 01       	movw	r22, r24
    3964:	cd 01       	movw	r24, r26
    3966:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    396a:	dc 01       	movw	r26, r24
    396c:	cb 01       	movw	r24, r22
    396e:	f8 01       	movw	r30, r16
    3970:	91 83       	std	Z+1, r25	; 0x01
    3972:	80 83       	st	Z, r24
    3974:	1f c0       	rjmp	.+62     	; 0x39b4 <main+0x2076>
    3976:	fe 01       	movw	r30, r28
    3978:	e5 5e       	subi	r30, 0xE5	; 229
    397a:	fe 4f       	sbci	r31, 0xFE	; 254
    397c:	89 e1       	ldi	r24, 0x19	; 25
    397e:	90 e0       	ldi	r25, 0x00	; 0
    3980:	91 83       	std	Z+1, r25	; 0x01
    3982:	80 83       	st	Z, r24
    3984:	fe 01       	movw	r30, r28
    3986:	e5 5e       	subi	r30, 0xE5	; 229
    3988:	fe 4f       	sbci	r31, 0xFE	; 254
    398a:	80 81       	ld	r24, Z
    398c:	91 81       	ldd	r25, Z+1	; 0x01
    398e:	01 97       	sbiw	r24, 0x01	; 1
    3990:	f1 f7       	brne	.-4      	; 0x398e <main+0x2050>
    3992:	fe 01       	movw	r30, r28
    3994:	e5 5e       	subi	r30, 0xE5	; 229
    3996:	fe 4f       	sbci	r31, 0xFE	; 254
    3998:	91 83       	std	Z+1, r25	; 0x01
    399a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    399c:	de 01       	movw	r26, r28
    399e:	a3 5e       	subi	r26, 0xE3	; 227
    39a0:	be 4f       	sbci	r27, 0xFE	; 254
    39a2:	fe 01       	movw	r30, r28
    39a4:	e3 5e       	subi	r30, 0xE3	; 227
    39a6:	fe 4f       	sbci	r31, 0xFE	; 254
    39a8:	80 81       	ld	r24, Z
    39aa:	91 81       	ldd	r25, Z+1	; 0x01
    39ac:	01 97       	sbiw	r24, 0x01	; 1
    39ae:	11 96       	adiw	r26, 0x01	; 1
    39b0:	9c 93       	st	X, r25
    39b2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39b4:	fe 01       	movw	r30, r28
    39b6:	e3 5e       	subi	r30, 0xE3	; 227
    39b8:	fe 4f       	sbci	r31, 0xFE	; 254
    39ba:	80 81       	ld	r24, Z
    39bc:	91 81       	ldd	r25, Z+1	; 0x01
    39be:	00 97       	sbiw	r24, 0x00	; 0
    39c0:	d1 f6       	brne	.-76     	; 0x3976 <main+0x2038>
    39c2:	27 c0       	rjmp	.+78     	; 0x3a12 <main+0x20d4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39c4:	8e 01       	movw	r16, r28
    39c6:	03 5e       	subi	r16, 0xE3	; 227
    39c8:	1e 4f       	sbci	r17, 0xFE	; 254
    39ca:	fe 01       	movw	r30, r28
    39cc:	e1 5e       	subi	r30, 0xE1	; 225
    39ce:	fe 4f       	sbci	r31, 0xFE	; 254
    39d0:	60 81       	ld	r22, Z
    39d2:	71 81       	ldd	r23, Z+1	; 0x01
    39d4:	82 81       	ldd	r24, Z+2	; 0x02
    39d6:	93 81       	ldd	r25, Z+3	; 0x03
    39d8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    39dc:	dc 01       	movw	r26, r24
    39de:	cb 01       	movw	r24, r22
    39e0:	f8 01       	movw	r30, r16
    39e2:	91 83       	std	Z+1, r25	; 0x01
    39e4:	80 83       	st	Z, r24
    39e6:	de 01       	movw	r26, r28
    39e8:	a7 5e       	subi	r26, 0xE7	; 231
    39ea:	be 4f       	sbci	r27, 0xFE	; 254
    39ec:	fe 01       	movw	r30, r28
    39ee:	e3 5e       	subi	r30, 0xE3	; 227
    39f0:	fe 4f       	sbci	r31, 0xFE	; 254
    39f2:	80 81       	ld	r24, Z
    39f4:	91 81       	ldd	r25, Z+1	; 0x01
    39f6:	8d 93       	st	X+, r24
    39f8:	9c 93       	st	X, r25
    39fa:	fe 01       	movw	r30, r28
    39fc:	e7 5e       	subi	r30, 0xE7	; 231
    39fe:	fe 4f       	sbci	r31, 0xFE	; 254
    3a00:	80 81       	ld	r24, Z
    3a02:	91 81       	ldd	r25, Z+1	; 0x01
    3a04:	01 97       	sbiw	r24, 0x01	; 1
    3a06:	f1 f7       	brne	.-4      	; 0x3a04 <main+0x20c6>
    3a08:	fe 01       	movw	r30, r28
    3a0a:	e7 5e       	subi	r30, 0xE7	; 231
    3a0c:	fe 4f       	sbci	r31, 0xFE	; 254
    3a0e:	91 83       	std	Z+1, r25	; 0x01
    3a10:	80 83       	st	Z, r24
			_delay_ms(10);
			s5=UART_reseiveByte();
    3a12:	0e 94 d1 2a 	call	0x55a2	; 0x55a2 <UART_reseiveByte>
    3a16:	fe 01       	movw	r30, r28
    3a18:	ef 5a       	subi	r30, 0xAF	; 175
    3a1a:	fd 4f       	sbci	r31, 0xFD	; 253
    3a1c:	80 83       	st	Z, r24
    3a1e:	fe 01       	movw	r30, r28
    3a20:	eb 5e       	subi	r30, 0xEB	; 235
    3a22:	fe 4f       	sbci	r31, 0xFE	; 254
    3a24:	80 e0       	ldi	r24, 0x00	; 0
    3a26:	90 e0       	ldi	r25, 0x00	; 0
    3a28:	a0 e2       	ldi	r26, 0x20	; 32
    3a2a:	b1 e4       	ldi	r27, 0x41	; 65
    3a2c:	80 83       	st	Z, r24
    3a2e:	91 83       	std	Z+1, r25	; 0x01
    3a30:	a2 83       	std	Z+2, r26	; 0x02
    3a32:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a34:	8e 01       	movw	r16, r28
    3a36:	0f 5e       	subi	r16, 0xEF	; 239
    3a38:	1e 4f       	sbci	r17, 0xFE	; 254
    3a3a:	fe 01       	movw	r30, r28
    3a3c:	eb 5e       	subi	r30, 0xEB	; 235
    3a3e:	fe 4f       	sbci	r31, 0xFE	; 254
    3a40:	60 81       	ld	r22, Z
    3a42:	71 81       	ldd	r23, Z+1	; 0x01
    3a44:	82 81       	ldd	r24, Z+2	; 0x02
    3a46:	93 81       	ldd	r25, Z+3	; 0x03
    3a48:	20 e0       	ldi	r18, 0x00	; 0
    3a4a:	30 e0       	ldi	r19, 0x00	; 0
    3a4c:	4a e7       	ldi	r20, 0x7A	; 122
    3a4e:	53 e4       	ldi	r21, 0x43	; 67
    3a50:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a54:	dc 01       	movw	r26, r24
    3a56:	cb 01       	movw	r24, r22
    3a58:	f8 01       	movw	r30, r16
    3a5a:	80 83       	st	Z, r24
    3a5c:	91 83       	std	Z+1, r25	; 0x01
    3a5e:	a2 83       	std	Z+2, r26	; 0x02
    3a60:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a62:	fe 01       	movw	r30, r28
    3a64:	ef 5e       	subi	r30, 0xEF	; 239
    3a66:	fe 4f       	sbci	r31, 0xFE	; 254
    3a68:	60 81       	ld	r22, Z
    3a6a:	71 81       	ldd	r23, Z+1	; 0x01
    3a6c:	82 81       	ldd	r24, Z+2	; 0x02
    3a6e:	93 81       	ldd	r25, Z+3	; 0x03
    3a70:	20 e0       	ldi	r18, 0x00	; 0
    3a72:	30 e0       	ldi	r19, 0x00	; 0
    3a74:	40 e8       	ldi	r20, 0x80	; 128
    3a76:	5f e3       	ldi	r21, 0x3F	; 63
    3a78:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3a7c:	88 23       	and	r24, r24
    3a7e:	44 f4       	brge	.+16     	; 0x3a90 <main+0x2152>
		__ticks = 1;
    3a80:	fe 01       	movw	r30, r28
    3a82:	e1 5f       	subi	r30, 0xF1	; 241
    3a84:	fe 4f       	sbci	r31, 0xFE	; 254
    3a86:	81 e0       	ldi	r24, 0x01	; 1
    3a88:	90 e0       	ldi	r25, 0x00	; 0
    3a8a:	91 83       	std	Z+1, r25	; 0x01
    3a8c:	80 83       	st	Z, r24
    3a8e:	64 c0       	rjmp	.+200    	; 0x3b58 <main+0x221a>
	else if (__tmp > 65535)
    3a90:	fe 01       	movw	r30, r28
    3a92:	ef 5e       	subi	r30, 0xEF	; 239
    3a94:	fe 4f       	sbci	r31, 0xFE	; 254
    3a96:	60 81       	ld	r22, Z
    3a98:	71 81       	ldd	r23, Z+1	; 0x01
    3a9a:	82 81       	ldd	r24, Z+2	; 0x02
    3a9c:	93 81       	ldd	r25, Z+3	; 0x03
    3a9e:	20 e0       	ldi	r18, 0x00	; 0
    3aa0:	3f ef       	ldi	r19, 0xFF	; 255
    3aa2:	4f e7       	ldi	r20, 0x7F	; 127
    3aa4:	57 e4       	ldi	r21, 0x47	; 71
    3aa6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3aaa:	18 16       	cp	r1, r24
    3aac:	0c f0       	brlt	.+2      	; 0x3ab0 <main+0x2172>
    3aae:	43 c0       	rjmp	.+134    	; 0x3b36 <main+0x21f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ab0:	fe 01       	movw	r30, r28
    3ab2:	eb 5e       	subi	r30, 0xEB	; 235
    3ab4:	fe 4f       	sbci	r31, 0xFE	; 254
    3ab6:	60 81       	ld	r22, Z
    3ab8:	71 81       	ldd	r23, Z+1	; 0x01
    3aba:	82 81       	ldd	r24, Z+2	; 0x02
    3abc:	93 81       	ldd	r25, Z+3	; 0x03
    3abe:	20 e0       	ldi	r18, 0x00	; 0
    3ac0:	30 e0       	ldi	r19, 0x00	; 0
    3ac2:	40 e2       	ldi	r20, 0x20	; 32
    3ac4:	51 e4       	ldi	r21, 0x41	; 65
    3ac6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3aca:	dc 01       	movw	r26, r24
    3acc:	cb 01       	movw	r24, r22
    3ace:	8e 01       	movw	r16, r28
    3ad0:	01 5f       	subi	r16, 0xF1	; 241
    3ad2:	1e 4f       	sbci	r17, 0xFE	; 254
    3ad4:	bc 01       	movw	r22, r24
    3ad6:	cd 01       	movw	r24, r26
    3ad8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3adc:	dc 01       	movw	r26, r24
    3ade:	cb 01       	movw	r24, r22
    3ae0:	f8 01       	movw	r30, r16
    3ae2:	91 83       	std	Z+1, r25	; 0x01
    3ae4:	80 83       	st	Z, r24
    3ae6:	1f c0       	rjmp	.+62     	; 0x3b26 <main+0x21e8>
    3ae8:	fe 01       	movw	r30, r28
    3aea:	e3 5f       	subi	r30, 0xF3	; 243
    3aec:	fe 4f       	sbci	r31, 0xFE	; 254
    3aee:	89 e1       	ldi	r24, 0x19	; 25
    3af0:	90 e0       	ldi	r25, 0x00	; 0
    3af2:	91 83       	std	Z+1, r25	; 0x01
    3af4:	80 83       	st	Z, r24
    3af6:	fe 01       	movw	r30, r28
    3af8:	e3 5f       	subi	r30, 0xF3	; 243
    3afa:	fe 4f       	sbci	r31, 0xFE	; 254
    3afc:	80 81       	ld	r24, Z
    3afe:	91 81       	ldd	r25, Z+1	; 0x01
    3b00:	01 97       	sbiw	r24, 0x01	; 1
    3b02:	f1 f7       	brne	.-4      	; 0x3b00 <main+0x21c2>
    3b04:	fe 01       	movw	r30, r28
    3b06:	e3 5f       	subi	r30, 0xF3	; 243
    3b08:	fe 4f       	sbci	r31, 0xFE	; 254
    3b0a:	91 83       	std	Z+1, r25	; 0x01
    3b0c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b0e:	de 01       	movw	r26, r28
    3b10:	a1 5f       	subi	r26, 0xF1	; 241
    3b12:	be 4f       	sbci	r27, 0xFE	; 254
    3b14:	fe 01       	movw	r30, r28
    3b16:	e1 5f       	subi	r30, 0xF1	; 241
    3b18:	fe 4f       	sbci	r31, 0xFE	; 254
    3b1a:	80 81       	ld	r24, Z
    3b1c:	91 81       	ldd	r25, Z+1	; 0x01
    3b1e:	01 97       	sbiw	r24, 0x01	; 1
    3b20:	11 96       	adiw	r26, 0x01	; 1
    3b22:	9c 93       	st	X, r25
    3b24:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b26:	fe 01       	movw	r30, r28
    3b28:	e1 5f       	subi	r30, 0xF1	; 241
    3b2a:	fe 4f       	sbci	r31, 0xFE	; 254
    3b2c:	80 81       	ld	r24, Z
    3b2e:	91 81       	ldd	r25, Z+1	; 0x01
    3b30:	00 97       	sbiw	r24, 0x00	; 0
    3b32:	d1 f6       	brne	.-76     	; 0x3ae8 <main+0x21aa>
    3b34:	27 c0       	rjmp	.+78     	; 0x3b84 <main+0x2246>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b36:	8e 01       	movw	r16, r28
    3b38:	01 5f       	subi	r16, 0xF1	; 241
    3b3a:	1e 4f       	sbci	r17, 0xFE	; 254
    3b3c:	fe 01       	movw	r30, r28
    3b3e:	ef 5e       	subi	r30, 0xEF	; 239
    3b40:	fe 4f       	sbci	r31, 0xFE	; 254
    3b42:	60 81       	ld	r22, Z
    3b44:	71 81       	ldd	r23, Z+1	; 0x01
    3b46:	82 81       	ldd	r24, Z+2	; 0x02
    3b48:	93 81       	ldd	r25, Z+3	; 0x03
    3b4a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b4e:	dc 01       	movw	r26, r24
    3b50:	cb 01       	movw	r24, r22
    3b52:	f8 01       	movw	r30, r16
    3b54:	91 83       	std	Z+1, r25	; 0x01
    3b56:	80 83       	st	Z, r24
    3b58:	de 01       	movw	r26, r28
    3b5a:	a5 5f       	subi	r26, 0xF5	; 245
    3b5c:	be 4f       	sbci	r27, 0xFE	; 254
    3b5e:	fe 01       	movw	r30, r28
    3b60:	e1 5f       	subi	r30, 0xF1	; 241
    3b62:	fe 4f       	sbci	r31, 0xFE	; 254
    3b64:	80 81       	ld	r24, Z
    3b66:	91 81       	ldd	r25, Z+1	; 0x01
    3b68:	8d 93       	st	X+, r24
    3b6a:	9c 93       	st	X, r25
    3b6c:	fe 01       	movw	r30, r28
    3b6e:	e5 5f       	subi	r30, 0xF5	; 245
    3b70:	fe 4f       	sbci	r31, 0xFE	; 254
    3b72:	80 81       	ld	r24, Z
    3b74:	91 81       	ldd	r25, Z+1	; 0x01
    3b76:	01 97       	sbiw	r24, 0x01	; 1
    3b78:	f1 f7       	brne	.-4      	; 0x3b76 <main+0x2238>
    3b7a:	fe 01       	movw	r30, r28
    3b7c:	e5 5f       	subi	r30, 0xF5	; 245
    3b7e:	fe 4f       	sbci	r31, 0xFE	; 254
    3b80:	91 83       	std	Z+1, r25	; 0x01
    3b82:	80 83       	st	Z, r24
			_delay_ms(10);
			s6=UART_reseiveByte();
    3b84:	0e 94 d1 2a 	call	0x55a2	; 0x55a2 <UART_reseiveByte>
    3b88:	fe 01       	movw	r30, r28
    3b8a:	e0 5b       	subi	r30, 0xB0	; 176
    3b8c:	fd 4f       	sbci	r31, 0xFD	; 253
    3b8e:	80 83       	st	Z, r24
    3b90:	fe 01       	movw	r30, r28
    3b92:	e9 5f       	subi	r30, 0xF9	; 249
    3b94:	fe 4f       	sbci	r31, 0xFE	; 254
    3b96:	80 e0       	ldi	r24, 0x00	; 0
    3b98:	90 e0       	ldi	r25, 0x00	; 0
    3b9a:	a0 e2       	ldi	r26, 0x20	; 32
    3b9c:	b1 e4       	ldi	r27, 0x41	; 65
    3b9e:	80 83       	st	Z, r24
    3ba0:	91 83       	std	Z+1, r25	; 0x01
    3ba2:	a2 83       	std	Z+2, r26	; 0x02
    3ba4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ba6:	8e 01       	movw	r16, r28
    3ba8:	0d 5f       	subi	r16, 0xFD	; 253
    3baa:	1e 4f       	sbci	r17, 0xFE	; 254
    3bac:	fe 01       	movw	r30, r28
    3bae:	e9 5f       	subi	r30, 0xF9	; 249
    3bb0:	fe 4f       	sbci	r31, 0xFE	; 254
    3bb2:	60 81       	ld	r22, Z
    3bb4:	71 81       	ldd	r23, Z+1	; 0x01
    3bb6:	82 81       	ldd	r24, Z+2	; 0x02
    3bb8:	93 81       	ldd	r25, Z+3	; 0x03
    3bba:	20 e0       	ldi	r18, 0x00	; 0
    3bbc:	30 e0       	ldi	r19, 0x00	; 0
    3bbe:	4a e7       	ldi	r20, 0x7A	; 122
    3bc0:	53 e4       	ldi	r21, 0x43	; 67
    3bc2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3bc6:	dc 01       	movw	r26, r24
    3bc8:	cb 01       	movw	r24, r22
    3bca:	f8 01       	movw	r30, r16
    3bcc:	80 83       	st	Z, r24
    3bce:	91 83       	std	Z+1, r25	; 0x01
    3bd0:	a2 83       	std	Z+2, r26	; 0x02
    3bd2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3bd4:	fe 01       	movw	r30, r28
    3bd6:	ed 5f       	subi	r30, 0xFD	; 253
    3bd8:	fe 4f       	sbci	r31, 0xFE	; 254
    3bda:	60 81       	ld	r22, Z
    3bdc:	71 81       	ldd	r23, Z+1	; 0x01
    3bde:	82 81       	ldd	r24, Z+2	; 0x02
    3be0:	93 81       	ldd	r25, Z+3	; 0x03
    3be2:	20 e0       	ldi	r18, 0x00	; 0
    3be4:	30 e0       	ldi	r19, 0x00	; 0
    3be6:	40 e8       	ldi	r20, 0x80	; 128
    3be8:	5f e3       	ldi	r21, 0x3F	; 63
    3bea:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3bee:	88 23       	and	r24, r24
    3bf0:	44 f4       	brge	.+16     	; 0x3c02 <main+0x22c4>
		__ticks = 1;
    3bf2:	fe 01       	movw	r30, r28
    3bf4:	ef 5f       	subi	r30, 0xFF	; 255
    3bf6:	fe 4f       	sbci	r31, 0xFE	; 254
    3bf8:	81 e0       	ldi	r24, 0x01	; 1
    3bfa:	90 e0       	ldi	r25, 0x00	; 0
    3bfc:	91 83       	std	Z+1, r25	; 0x01
    3bfe:	80 83       	st	Z, r24
    3c00:	64 c0       	rjmp	.+200    	; 0x3cca <main+0x238c>
	else if (__tmp > 65535)
    3c02:	fe 01       	movw	r30, r28
    3c04:	ed 5f       	subi	r30, 0xFD	; 253
    3c06:	fe 4f       	sbci	r31, 0xFE	; 254
    3c08:	60 81       	ld	r22, Z
    3c0a:	71 81       	ldd	r23, Z+1	; 0x01
    3c0c:	82 81       	ldd	r24, Z+2	; 0x02
    3c0e:	93 81       	ldd	r25, Z+3	; 0x03
    3c10:	20 e0       	ldi	r18, 0x00	; 0
    3c12:	3f ef       	ldi	r19, 0xFF	; 255
    3c14:	4f e7       	ldi	r20, 0x7F	; 127
    3c16:	57 e4       	ldi	r21, 0x47	; 71
    3c18:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3c1c:	18 16       	cp	r1, r24
    3c1e:	0c f0       	brlt	.+2      	; 0x3c22 <main+0x22e4>
    3c20:	43 c0       	rjmp	.+134    	; 0x3ca8 <main+0x236a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c22:	fe 01       	movw	r30, r28
    3c24:	e9 5f       	subi	r30, 0xF9	; 249
    3c26:	fe 4f       	sbci	r31, 0xFE	; 254
    3c28:	60 81       	ld	r22, Z
    3c2a:	71 81       	ldd	r23, Z+1	; 0x01
    3c2c:	82 81       	ldd	r24, Z+2	; 0x02
    3c2e:	93 81       	ldd	r25, Z+3	; 0x03
    3c30:	20 e0       	ldi	r18, 0x00	; 0
    3c32:	30 e0       	ldi	r19, 0x00	; 0
    3c34:	40 e2       	ldi	r20, 0x20	; 32
    3c36:	51 e4       	ldi	r21, 0x41	; 65
    3c38:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c3c:	dc 01       	movw	r26, r24
    3c3e:	cb 01       	movw	r24, r22
    3c40:	8e 01       	movw	r16, r28
    3c42:	0f 5f       	subi	r16, 0xFF	; 255
    3c44:	1e 4f       	sbci	r17, 0xFE	; 254
    3c46:	bc 01       	movw	r22, r24
    3c48:	cd 01       	movw	r24, r26
    3c4a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c4e:	dc 01       	movw	r26, r24
    3c50:	cb 01       	movw	r24, r22
    3c52:	f8 01       	movw	r30, r16
    3c54:	91 83       	std	Z+1, r25	; 0x01
    3c56:	80 83       	st	Z, r24
    3c58:	1f c0       	rjmp	.+62     	; 0x3c98 <main+0x235a>
    3c5a:	fe 01       	movw	r30, r28
    3c5c:	e1 50       	subi	r30, 0x01	; 1
    3c5e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c60:	89 e1       	ldi	r24, 0x19	; 25
    3c62:	90 e0       	ldi	r25, 0x00	; 0
    3c64:	91 83       	std	Z+1, r25	; 0x01
    3c66:	80 83       	st	Z, r24
    3c68:	fe 01       	movw	r30, r28
    3c6a:	e1 50       	subi	r30, 0x01	; 1
    3c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c6e:	80 81       	ld	r24, Z
    3c70:	91 81       	ldd	r25, Z+1	; 0x01
    3c72:	01 97       	sbiw	r24, 0x01	; 1
    3c74:	f1 f7       	brne	.-4      	; 0x3c72 <main+0x2334>
    3c76:	fe 01       	movw	r30, r28
    3c78:	e1 50       	subi	r30, 0x01	; 1
    3c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    3c7c:	91 83       	std	Z+1, r25	; 0x01
    3c7e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c80:	de 01       	movw	r26, r28
    3c82:	af 5f       	subi	r26, 0xFF	; 255
    3c84:	be 4f       	sbci	r27, 0xFE	; 254
    3c86:	fe 01       	movw	r30, r28
    3c88:	ef 5f       	subi	r30, 0xFF	; 255
    3c8a:	fe 4f       	sbci	r31, 0xFE	; 254
    3c8c:	80 81       	ld	r24, Z
    3c8e:	91 81       	ldd	r25, Z+1	; 0x01
    3c90:	01 97       	sbiw	r24, 0x01	; 1
    3c92:	11 96       	adiw	r26, 0x01	; 1
    3c94:	9c 93       	st	X, r25
    3c96:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c98:	fe 01       	movw	r30, r28
    3c9a:	ef 5f       	subi	r30, 0xFF	; 255
    3c9c:	fe 4f       	sbci	r31, 0xFE	; 254
    3c9e:	80 81       	ld	r24, Z
    3ca0:	91 81       	ldd	r25, Z+1	; 0x01
    3ca2:	00 97       	sbiw	r24, 0x00	; 0
    3ca4:	d1 f6       	brne	.-76     	; 0x3c5a <main+0x231c>
    3ca6:	27 c0       	rjmp	.+78     	; 0x3cf6 <main+0x23b8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ca8:	8e 01       	movw	r16, r28
    3caa:	0f 5f       	subi	r16, 0xFF	; 255
    3cac:	1e 4f       	sbci	r17, 0xFE	; 254
    3cae:	fe 01       	movw	r30, r28
    3cb0:	ed 5f       	subi	r30, 0xFD	; 253
    3cb2:	fe 4f       	sbci	r31, 0xFE	; 254
    3cb4:	60 81       	ld	r22, Z
    3cb6:	71 81       	ldd	r23, Z+1	; 0x01
    3cb8:	82 81       	ldd	r24, Z+2	; 0x02
    3cba:	93 81       	ldd	r25, Z+3	; 0x03
    3cbc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3cc0:	dc 01       	movw	r26, r24
    3cc2:	cb 01       	movw	r24, r22
    3cc4:	f8 01       	movw	r30, r16
    3cc6:	91 83       	std	Z+1, r25	; 0x01
    3cc8:	80 83       	st	Z, r24
    3cca:	de 01       	movw	r26, r28
    3ccc:	a3 50       	subi	r26, 0x03	; 3
    3cce:	bf 4f       	sbci	r27, 0xFF	; 255
    3cd0:	fe 01       	movw	r30, r28
    3cd2:	ef 5f       	subi	r30, 0xFF	; 255
    3cd4:	fe 4f       	sbci	r31, 0xFE	; 254
    3cd6:	80 81       	ld	r24, Z
    3cd8:	91 81       	ldd	r25, Z+1	; 0x01
    3cda:	8d 93       	st	X+, r24
    3cdc:	9c 93       	st	X, r25
    3cde:	fe 01       	movw	r30, r28
    3ce0:	e3 50       	subi	r30, 0x03	; 3
    3ce2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ce4:	80 81       	ld	r24, Z
    3ce6:	91 81       	ldd	r25, Z+1	; 0x01
    3ce8:	01 97       	sbiw	r24, 0x01	; 1
    3cea:	f1 f7       	brne	.-4      	; 0x3ce8 <main+0x23aa>
    3cec:	fe 01       	movw	r30, r28
    3cee:	e3 50       	subi	r30, 0x03	; 3
    3cf0:	ff 4f       	sbci	r31, 0xFF	; 255
    3cf2:	91 83       	std	Z+1, r25	; 0x01
    3cf4:	80 83       	st	Z, r24
			_delay_ms(10);
			s7=UART_reseiveByte();
    3cf6:	0e 94 d1 2a 	call	0x55a2	; 0x55a2 <UART_reseiveByte>
    3cfa:	fe 01       	movw	r30, r28
    3cfc:	e1 5b       	subi	r30, 0xB1	; 177
    3cfe:	fd 4f       	sbci	r31, 0xFD	; 253
    3d00:	80 83       	st	Z, r24
    3d02:	fe 01       	movw	r30, r28
    3d04:	e7 50       	subi	r30, 0x07	; 7
    3d06:	ff 4f       	sbci	r31, 0xFF	; 255
    3d08:	80 e0       	ldi	r24, 0x00	; 0
    3d0a:	90 e0       	ldi	r25, 0x00	; 0
    3d0c:	a0 e2       	ldi	r26, 0x20	; 32
    3d0e:	b1 e4       	ldi	r27, 0x41	; 65
    3d10:	80 83       	st	Z, r24
    3d12:	91 83       	std	Z+1, r25	; 0x01
    3d14:	a2 83       	std	Z+2, r26	; 0x02
    3d16:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d18:	8e 01       	movw	r16, r28
    3d1a:	0b 50       	subi	r16, 0x0B	; 11
    3d1c:	1f 4f       	sbci	r17, 0xFF	; 255
    3d1e:	fe 01       	movw	r30, r28
    3d20:	e7 50       	subi	r30, 0x07	; 7
    3d22:	ff 4f       	sbci	r31, 0xFF	; 255
    3d24:	60 81       	ld	r22, Z
    3d26:	71 81       	ldd	r23, Z+1	; 0x01
    3d28:	82 81       	ldd	r24, Z+2	; 0x02
    3d2a:	93 81       	ldd	r25, Z+3	; 0x03
    3d2c:	20 e0       	ldi	r18, 0x00	; 0
    3d2e:	30 e0       	ldi	r19, 0x00	; 0
    3d30:	4a e7       	ldi	r20, 0x7A	; 122
    3d32:	53 e4       	ldi	r21, 0x43	; 67
    3d34:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d38:	dc 01       	movw	r26, r24
    3d3a:	cb 01       	movw	r24, r22
    3d3c:	f8 01       	movw	r30, r16
    3d3e:	80 83       	st	Z, r24
    3d40:	91 83       	std	Z+1, r25	; 0x01
    3d42:	a2 83       	std	Z+2, r26	; 0x02
    3d44:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3d46:	fe 01       	movw	r30, r28
    3d48:	eb 50       	subi	r30, 0x0B	; 11
    3d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d4c:	60 81       	ld	r22, Z
    3d4e:	71 81       	ldd	r23, Z+1	; 0x01
    3d50:	82 81       	ldd	r24, Z+2	; 0x02
    3d52:	93 81       	ldd	r25, Z+3	; 0x03
    3d54:	20 e0       	ldi	r18, 0x00	; 0
    3d56:	30 e0       	ldi	r19, 0x00	; 0
    3d58:	40 e8       	ldi	r20, 0x80	; 128
    3d5a:	5f e3       	ldi	r21, 0x3F	; 63
    3d5c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3d60:	88 23       	and	r24, r24
    3d62:	44 f4       	brge	.+16     	; 0x3d74 <main+0x2436>
		__ticks = 1;
    3d64:	fe 01       	movw	r30, r28
    3d66:	ed 50       	subi	r30, 0x0D	; 13
    3d68:	ff 4f       	sbci	r31, 0xFF	; 255
    3d6a:	81 e0       	ldi	r24, 0x01	; 1
    3d6c:	90 e0       	ldi	r25, 0x00	; 0
    3d6e:	91 83       	std	Z+1, r25	; 0x01
    3d70:	80 83       	st	Z, r24
    3d72:	64 c0       	rjmp	.+200    	; 0x3e3c <main+0x24fe>
	else if (__tmp > 65535)
    3d74:	fe 01       	movw	r30, r28
    3d76:	eb 50       	subi	r30, 0x0B	; 11
    3d78:	ff 4f       	sbci	r31, 0xFF	; 255
    3d7a:	60 81       	ld	r22, Z
    3d7c:	71 81       	ldd	r23, Z+1	; 0x01
    3d7e:	82 81       	ldd	r24, Z+2	; 0x02
    3d80:	93 81       	ldd	r25, Z+3	; 0x03
    3d82:	20 e0       	ldi	r18, 0x00	; 0
    3d84:	3f ef       	ldi	r19, 0xFF	; 255
    3d86:	4f e7       	ldi	r20, 0x7F	; 127
    3d88:	57 e4       	ldi	r21, 0x47	; 71
    3d8a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3d8e:	18 16       	cp	r1, r24
    3d90:	0c f0       	brlt	.+2      	; 0x3d94 <main+0x2456>
    3d92:	43 c0       	rjmp	.+134    	; 0x3e1a <main+0x24dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d94:	fe 01       	movw	r30, r28
    3d96:	e7 50       	subi	r30, 0x07	; 7
    3d98:	ff 4f       	sbci	r31, 0xFF	; 255
    3d9a:	60 81       	ld	r22, Z
    3d9c:	71 81       	ldd	r23, Z+1	; 0x01
    3d9e:	82 81       	ldd	r24, Z+2	; 0x02
    3da0:	93 81       	ldd	r25, Z+3	; 0x03
    3da2:	20 e0       	ldi	r18, 0x00	; 0
    3da4:	30 e0       	ldi	r19, 0x00	; 0
    3da6:	40 e2       	ldi	r20, 0x20	; 32
    3da8:	51 e4       	ldi	r21, 0x41	; 65
    3daa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3dae:	dc 01       	movw	r26, r24
    3db0:	cb 01       	movw	r24, r22
    3db2:	8e 01       	movw	r16, r28
    3db4:	0d 50       	subi	r16, 0x0D	; 13
    3db6:	1f 4f       	sbci	r17, 0xFF	; 255
    3db8:	bc 01       	movw	r22, r24
    3dba:	cd 01       	movw	r24, r26
    3dbc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3dc0:	dc 01       	movw	r26, r24
    3dc2:	cb 01       	movw	r24, r22
    3dc4:	f8 01       	movw	r30, r16
    3dc6:	91 83       	std	Z+1, r25	; 0x01
    3dc8:	80 83       	st	Z, r24
    3dca:	1f c0       	rjmp	.+62     	; 0x3e0a <main+0x24cc>
    3dcc:	fe 01       	movw	r30, r28
    3dce:	ef 50       	subi	r30, 0x0F	; 15
    3dd0:	ff 4f       	sbci	r31, 0xFF	; 255
    3dd2:	89 e1       	ldi	r24, 0x19	; 25
    3dd4:	90 e0       	ldi	r25, 0x00	; 0
    3dd6:	91 83       	std	Z+1, r25	; 0x01
    3dd8:	80 83       	st	Z, r24
    3dda:	fe 01       	movw	r30, r28
    3ddc:	ef 50       	subi	r30, 0x0F	; 15
    3dde:	ff 4f       	sbci	r31, 0xFF	; 255
    3de0:	80 81       	ld	r24, Z
    3de2:	91 81       	ldd	r25, Z+1	; 0x01
    3de4:	01 97       	sbiw	r24, 0x01	; 1
    3de6:	f1 f7       	brne	.-4      	; 0x3de4 <main+0x24a6>
    3de8:	fe 01       	movw	r30, r28
    3dea:	ef 50       	subi	r30, 0x0F	; 15
    3dec:	ff 4f       	sbci	r31, 0xFF	; 255
    3dee:	91 83       	std	Z+1, r25	; 0x01
    3df0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3df2:	de 01       	movw	r26, r28
    3df4:	ad 50       	subi	r26, 0x0D	; 13
    3df6:	bf 4f       	sbci	r27, 0xFF	; 255
    3df8:	fe 01       	movw	r30, r28
    3dfa:	ed 50       	subi	r30, 0x0D	; 13
    3dfc:	ff 4f       	sbci	r31, 0xFF	; 255
    3dfe:	80 81       	ld	r24, Z
    3e00:	91 81       	ldd	r25, Z+1	; 0x01
    3e02:	01 97       	sbiw	r24, 0x01	; 1
    3e04:	11 96       	adiw	r26, 0x01	; 1
    3e06:	9c 93       	st	X, r25
    3e08:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e0a:	fe 01       	movw	r30, r28
    3e0c:	ed 50       	subi	r30, 0x0D	; 13
    3e0e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e10:	80 81       	ld	r24, Z
    3e12:	91 81       	ldd	r25, Z+1	; 0x01
    3e14:	00 97       	sbiw	r24, 0x00	; 0
    3e16:	d1 f6       	brne	.-76     	; 0x3dcc <main+0x248e>
    3e18:	27 c0       	rjmp	.+78     	; 0x3e68 <main+0x252a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e1a:	8e 01       	movw	r16, r28
    3e1c:	0d 50       	subi	r16, 0x0D	; 13
    3e1e:	1f 4f       	sbci	r17, 0xFF	; 255
    3e20:	fe 01       	movw	r30, r28
    3e22:	eb 50       	subi	r30, 0x0B	; 11
    3e24:	ff 4f       	sbci	r31, 0xFF	; 255
    3e26:	60 81       	ld	r22, Z
    3e28:	71 81       	ldd	r23, Z+1	; 0x01
    3e2a:	82 81       	ldd	r24, Z+2	; 0x02
    3e2c:	93 81       	ldd	r25, Z+3	; 0x03
    3e2e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e32:	dc 01       	movw	r26, r24
    3e34:	cb 01       	movw	r24, r22
    3e36:	f8 01       	movw	r30, r16
    3e38:	91 83       	std	Z+1, r25	; 0x01
    3e3a:	80 83       	st	Z, r24
    3e3c:	de 01       	movw	r26, r28
    3e3e:	a1 51       	subi	r26, 0x11	; 17
    3e40:	bf 4f       	sbci	r27, 0xFF	; 255
    3e42:	fe 01       	movw	r30, r28
    3e44:	ed 50       	subi	r30, 0x0D	; 13
    3e46:	ff 4f       	sbci	r31, 0xFF	; 255
    3e48:	80 81       	ld	r24, Z
    3e4a:	91 81       	ldd	r25, Z+1	; 0x01
    3e4c:	8d 93       	st	X+, r24
    3e4e:	9c 93       	st	X, r25
    3e50:	fe 01       	movw	r30, r28
    3e52:	e1 51       	subi	r30, 0x11	; 17
    3e54:	ff 4f       	sbci	r31, 0xFF	; 255
    3e56:	80 81       	ld	r24, Z
    3e58:	91 81       	ldd	r25, Z+1	; 0x01
    3e5a:	01 97       	sbiw	r24, 0x01	; 1
    3e5c:	f1 f7       	brne	.-4      	; 0x3e5a <main+0x251c>
    3e5e:	fe 01       	movw	r30, r28
    3e60:	e1 51       	subi	r30, 0x11	; 17
    3e62:	ff 4f       	sbci	r31, 0xFF	; 255
    3e64:	91 83       	std	Z+1, r25	; 0x01
    3e66:	80 83       	st	Z, r24
			_delay_ms(10);
			s8=UART_reseiveByte();
    3e68:	0e 94 d1 2a 	call	0x55a2	; 0x55a2 <UART_reseiveByte>
    3e6c:	fe 01       	movw	r30, r28
    3e6e:	e2 5b       	subi	r30, 0xB2	; 178
    3e70:	fd 4f       	sbci	r31, 0xFD	; 253
    3e72:	80 83       	st	Z, r24
    3e74:	fe 01       	movw	r30, r28
    3e76:	e5 51       	subi	r30, 0x15	; 21
    3e78:	ff 4f       	sbci	r31, 0xFF	; 255
    3e7a:	80 e0       	ldi	r24, 0x00	; 0
    3e7c:	90 e0       	ldi	r25, 0x00	; 0
    3e7e:	a0 e2       	ldi	r26, 0x20	; 32
    3e80:	b1 e4       	ldi	r27, 0x41	; 65
    3e82:	80 83       	st	Z, r24
    3e84:	91 83       	std	Z+1, r25	; 0x01
    3e86:	a2 83       	std	Z+2, r26	; 0x02
    3e88:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e8a:	8e 01       	movw	r16, r28
    3e8c:	09 51       	subi	r16, 0x19	; 25
    3e8e:	1f 4f       	sbci	r17, 0xFF	; 255
    3e90:	fe 01       	movw	r30, r28
    3e92:	e5 51       	subi	r30, 0x15	; 21
    3e94:	ff 4f       	sbci	r31, 0xFF	; 255
    3e96:	60 81       	ld	r22, Z
    3e98:	71 81       	ldd	r23, Z+1	; 0x01
    3e9a:	82 81       	ldd	r24, Z+2	; 0x02
    3e9c:	93 81       	ldd	r25, Z+3	; 0x03
    3e9e:	20 e0       	ldi	r18, 0x00	; 0
    3ea0:	30 e0       	ldi	r19, 0x00	; 0
    3ea2:	4a e7       	ldi	r20, 0x7A	; 122
    3ea4:	53 e4       	ldi	r21, 0x43	; 67
    3ea6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3eaa:	dc 01       	movw	r26, r24
    3eac:	cb 01       	movw	r24, r22
    3eae:	f8 01       	movw	r30, r16
    3eb0:	80 83       	st	Z, r24
    3eb2:	91 83       	std	Z+1, r25	; 0x01
    3eb4:	a2 83       	std	Z+2, r26	; 0x02
    3eb6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3eb8:	fe 01       	movw	r30, r28
    3eba:	e9 51       	subi	r30, 0x19	; 25
    3ebc:	ff 4f       	sbci	r31, 0xFF	; 255
    3ebe:	60 81       	ld	r22, Z
    3ec0:	71 81       	ldd	r23, Z+1	; 0x01
    3ec2:	82 81       	ldd	r24, Z+2	; 0x02
    3ec4:	93 81       	ldd	r25, Z+3	; 0x03
    3ec6:	20 e0       	ldi	r18, 0x00	; 0
    3ec8:	30 e0       	ldi	r19, 0x00	; 0
    3eca:	40 e8       	ldi	r20, 0x80	; 128
    3ecc:	5f e3       	ldi	r21, 0x3F	; 63
    3ece:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3ed2:	88 23       	and	r24, r24
    3ed4:	44 f4       	brge	.+16     	; 0x3ee6 <main+0x25a8>
		__ticks = 1;
    3ed6:	fe 01       	movw	r30, r28
    3ed8:	eb 51       	subi	r30, 0x1B	; 27
    3eda:	ff 4f       	sbci	r31, 0xFF	; 255
    3edc:	81 e0       	ldi	r24, 0x01	; 1
    3ede:	90 e0       	ldi	r25, 0x00	; 0
    3ee0:	91 83       	std	Z+1, r25	; 0x01
    3ee2:	80 83       	st	Z, r24
    3ee4:	64 c0       	rjmp	.+200    	; 0x3fae <main+0x2670>
	else if (__tmp > 65535)
    3ee6:	fe 01       	movw	r30, r28
    3ee8:	e9 51       	subi	r30, 0x19	; 25
    3eea:	ff 4f       	sbci	r31, 0xFF	; 255
    3eec:	60 81       	ld	r22, Z
    3eee:	71 81       	ldd	r23, Z+1	; 0x01
    3ef0:	82 81       	ldd	r24, Z+2	; 0x02
    3ef2:	93 81       	ldd	r25, Z+3	; 0x03
    3ef4:	20 e0       	ldi	r18, 0x00	; 0
    3ef6:	3f ef       	ldi	r19, 0xFF	; 255
    3ef8:	4f e7       	ldi	r20, 0x7F	; 127
    3efa:	57 e4       	ldi	r21, 0x47	; 71
    3efc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3f00:	18 16       	cp	r1, r24
    3f02:	0c f0       	brlt	.+2      	; 0x3f06 <main+0x25c8>
    3f04:	43 c0       	rjmp	.+134    	; 0x3f8c <main+0x264e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f06:	fe 01       	movw	r30, r28
    3f08:	e5 51       	subi	r30, 0x15	; 21
    3f0a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f0c:	60 81       	ld	r22, Z
    3f0e:	71 81       	ldd	r23, Z+1	; 0x01
    3f10:	82 81       	ldd	r24, Z+2	; 0x02
    3f12:	93 81       	ldd	r25, Z+3	; 0x03
    3f14:	20 e0       	ldi	r18, 0x00	; 0
    3f16:	30 e0       	ldi	r19, 0x00	; 0
    3f18:	40 e2       	ldi	r20, 0x20	; 32
    3f1a:	51 e4       	ldi	r21, 0x41	; 65
    3f1c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f20:	dc 01       	movw	r26, r24
    3f22:	cb 01       	movw	r24, r22
    3f24:	8e 01       	movw	r16, r28
    3f26:	0b 51       	subi	r16, 0x1B	; 27
    3f28:	1f 4f       	sbci	r17, 0xFF	; 255
    3f2a:	bc 01       	movw	r22, r24
    3f2c:	cd 01       	movw	r24, r26
    3f2e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f32:	dc 01       	movw	r26, r24
    3f34:	cb 01       	movw	r24, r22
    3f36:	f8 01       	movw	r30, r16
    3f38:	91 83       	std	Z+1, r25	; 0x01
    3f3a:	80 83       	st	Z, r24
    3f3c:	1f c0       	rjmp	.+62     	; 0x3f7c <main+0x263e>
    3f3e:	fe 01       	movw	r30, r28
    3f40:	ed 51       	subi	r30, 0x1D	; 29
    3f42:	ff 4f       	sbci	r31, 0xFF	; 255
    3f44:	89 e1       	ldi	r24, 0x19	; 25
    3f46:	90 e0       	ldi	r25, 0x00	; 0
    3f48:	91 83       	std	Z+1, r25	; 0x01
    3f4a:	80 83       	st	Z, r24
    3f4c:	fe 01       	movw	r30, r28
    3f4e:	ed 51       	subi	r30, 0x1D	; 29
    3f50:	ff 4f       	sbci	r31, 0xFF	; 255
    3f52:	80 81       	ld	r24, Z
    3f54:	91 81       	ldd	r25, Z+1	; 0x01
    3f56:	01 97       	sbiw	r24, 0x01	; 1
    3f58:	f1 f7       	brne	.-4      	; 0x3f56 <main+0x2618>
    3f5a:	fe 01       	movw	r30, r28
    3f5c:	ed 51       	subi	r30, 0x1D	; 29
    3f5e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f60:	91 83       	std	Z+1, r25	; 0x01
    3f62:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f64:	de 01       	movw	r26, r28
    3f66:	ab 51       	subi	r26, 0x1B	; 27
    3f68:	bf 4f       	sbci	r27, 0xFF	; 255
    3f6a:	fe 01       	movw	r30, r28
    3f6c:	eb 51       	subi	r30, 0x1B	; 27
    3f6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f70:	80 81       	ld	r24, Z
    3f72:	91 81       	ldd	r25, Z+1	; 0x01
    3f74:	01 97       	sbiw	r24, 0x01	; 1
    3f76:	11 96       	adiw	r26, 0x01	; 1
    3f78:	9c 93       	st	X, r25
    3f7a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f7c:	fe 01       	movw	r30, r28
    3f7e:	eb 51       	subi	r30, 0x1B	; 27
    3f80:	ff 4f       	sbci	r31, 0xFF	; 255
    3f82:	80 81       	ld	r24, Z
    3f84:	91 81       	ldd	r25, Z+1	; 0x01
    3f86:	00 97       	sbiw	r24, 0x00	; 0
    3f88:	d1 f6       	brne	.-76     	; 0x3f3e <main+0x2600>
    3f8a:	27 c0       	rjmp	.+78     	; 0x3fda <main+0x269c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f8c:	8e 01       	movw	r16, r28
    3f8e:	0b 51       	subi	r16, 0x1B	; 27
    3f90:	1f 4f       	sbci	r17, 0xFF	; 255
    3f92:	fe 01       	movw	r30, r28
    3f94:	e9 51       	subi	r30, 0x19	; 25
    3f96:	ff 4f       	sbci	r31, 0xFF	; 255
    3f98:	60 81       	ld	r22, Z
    3f9a:	71 81       	ldd	r23, Z+1	; 0x01
    3f9c:	82 81       	ldd	r24, Z+2	; 0x02
    3f9e:	93 81       	ldd	r25, Z+3	; 0x03
    3fa0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3fa4:	dc 01       	movw	r26, r24
    3fa6:	cb 01       	movw	r24, r22
    3fa8:	f8 01       	movw	r30, r16
    3faa:	91 83       	std	Z+1, r25	; 0x01
    3fac:	80 83       	st	Z, r24
    3fae:	de 01       	movw	r26, r28
    3fb0:	af 51       	subi	r26, 0x1F	; 31
    3fb2:	bf 4f       	sbci	r27, 0xFF	; 255
    3fb4:	fe 01       	movw	r30, r28
    3fb6:	eb 51       	subi	r30, 0x1B	; 27
    3fb8:	ff 4f       	sbci	r31, 0xFF	; 255
    3fba:	80 81       	ld	r24, Z
    3fbc:	91 81       	ldd	r25, Z+1	; 0x01
    3fbe:	8d 93       	st	X+, r24
    3fc0:	9c 93       	st	X, r25
    3fc2:	fe 01       	movw	r30, r28
    3fc4:	ef 51       	subi	r30, 0x1F	; 31
    3fc6:	ff 4f       	sbci	r31, 0xFF	; 255
    3fc8:	80 81       	ld	r24, Z
    3fca:	91 81       	ldd	r25, Z+1	; 0x01
    3fcc:	01 97       	sbiw	r24, 0x01	; 1
    3fce:	f1 f7       	brne	.-4      	; 0x3fcc <main+0x268e>
    3fd0:	fe 01       	movw	r30, r28
    3fd2:	ef 51       	subi	r30, 0x1F	; 31
    3fd4:	ff 4f       	sbci	r31, 0xFF	; 255
    3fd6:	91 83       	std	Z+1, r25	; 0x01
    3fd8:	80 83       	st	Z, r24
			_delay_ms(10);
 /*write the new password in WWPROM*/
			EEPROM_writeByte(0x1,s1);
    3fda:	fe 01       	movw	r30, r28
    3fdc:	eb 5a       	subi	r30, 0xAB	; 171
    3fde:	fd 4f       	sbci	r31, 0xFD	; 253
    3fe0:	80 81       	ld	r24, Z
    3fe2:	28 2f       	mov	r18, r24
    3fe4:	30 e0       	ldi	r19, 0x00	; 0
    3fe6:	81 e0       	ldi	r24, 0x01	; 1
    3fe8:	90 e0       	ldi	r25, 0x00	; 0
    3fea:	b9 01       	movw	r22, r18
    3fec:	0e 94 a4 05 	call	0xb48	; 0xb48 <EEPROM_writeByte>
    3ff0:	fe 01       	movw	r30, r28
    3ff2:	e3 52       	subi	r30, 0x23	; 35
    3ff4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ff6:	80 e0       	ldi	r24, 0x00	; 0
    3ff8:	90 e0       	ldi	r25, 0x00	; 0
    3ffa:	a0 e2       	ldi	r26, 0x20	; 32
    3ffc:	b1 e4       	ldi	r27, 0x41	; 65
    3ffe:	80 83       	st	Z, r24
    4000:	91 83       	std	Z+1, r25	; 0x01
    4002:	a2 83       	std	Z+2, r26	; 0x02
    4004:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4006:	8e 01       	movw	r16, r28
    4008:	07 52       	subi	r16, 0x27	; 39
    400a:	1f 4f       	sbci	r17, 0xFF	; 255
    400c:	fe 01       	movw	r30, r28
    400e:	e3 52       	subi	r30, 0x23	; 35
    4010:	ff 4f       	sbci	r31, 0xFF	; 255
    4012:	60 81       	ld	r22, Z
    4014:	71 81       	ldd	r23, Z+1	; 0x01
    4016:	82 81       	ldd	r24, Z+2	; 0x02
    4018:	93 81       	ldd	r25, Z+3	; 0x03
    401a:	20 e0       	ldi	r18, 0x00	; 0
    401c:	30 e0       	ldi	r19, 0x00	; 0
    401e:	4a e7       	ldi	r20, 0x7A	; 122
    4020:	53 e4       	ldi	r21, 0x43	; 67
    4022:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4026:	dc 01       	movw	r26, r24
    4028:	cb 01       	movw	r24, r22
    402a:	f8 01       	movw	r30, r16
    402c:	80 83       	st	Z, r24
    402e:	91 83       	std	Z+1, r25	; 0x01
    4030:	a2 83       	std	Z+2, r26	; 0x02
    4032:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4034:	fe 01       	movw	r30, r28
    4036:	e7 52       	subi	r30, 0x27	; 39
    4038:	ff 4f       	sbci	r31, 0xFF	; 255
    403a:	60 81       	ld	r22, Z
    403c:	71 81       	ldd	r23, Z+1	; 0x01
    403e:	82 81       	ldd	r24, Z+2	; 0x02
    4040:	93 81       	ldd	r25, Z+3	; 0x03
    4042:	20 e0       	ldi	r18, 0x00	; 0
    4044:	30 e0       	ldi	r19, 0x00	; 0
    4046:	40 e8       	ldi	r20, 0x80	; 128
    4048:	5f e3       	ldi	r21, 0x3F	; 63
    404a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    404e:	88 23       	and	r24, r24
    4050:	44 f4       	brge	.+16     	; 0x4062 <main+0x2724>
		__ticks = 1;
    4052:	fe 01       	movw	r30, r28
    4054:	e9 52       	subi	r30, 0x29	; 41
    4056:	ff 4f       	sbci	r31, 0xFF	; 255
    4058:	81 e0       	ldi	r24, 0x01	; 1
    405a:	90 e0       	ldi	r25, 0x00	; 0
    405c:	91 83       	std	Z+1, r25	; 0x01
    405e:	80 83       	st	Z, r24
    4060:	64 c0       	rjmp	.+200    	; 0x412a <main+0x27ec>
	else if (__tmp > 65535)
    4062:	fe 01       	movw	r30, r28
    4064:	e7 52       	subi	r30, 0x27	; 39
    4066:	ff 4f       	sbci	r31, 0xFF	; 255
    4068:	60 81       	ld	r22, Z
    406a:	71 81       	ldd	r23, Z+1	; 0x01
    406c:	82 81       	ldd	r24, Z+2	; 0x02
    406e:	93 81       	ldd	r25, Z+3	; 0x03
    4070:	20 e0       	ldi	r18, 0x00	; 0
    4072:	3f ef       	ldi	r19, 0xFF	; 255
    4074:	4f e7       	ldi	r20, 0x7F	; 127
    4076:	57 e4       	ldi	r21, 0x47	; 71
    4078:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    407c:	18 16       	cp	r1, r24
    407e:	0c f0       	brlt	.+2      	; 0x4082 <main+0x2744>
    4080:	43 c0       	rjmp	.+134    	; 0x4108 <main+0x27ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4082:	fe 01       	movw	r30, r28
    4084:	e3 52       	subi	r30, 0x23	; 35
    4086:	ff 4f       	sbci	r31, 0xFF	; 255
    4088:	60 81       	ld	r22, Z
    408a:	71 81       	ldd	r23, Z+1	; 0x01
    408c:	82 81       	ldd	r24, Z+2	; 0x02
    408e:	93 81       	ldd	r25, Z+3	; 0x03
    4090:	20 e0       	ldi	r18, 0x00	; 0
    4092:	30 e0       	ldi	r19, 0x00	; 0
    4094:	40 e2       	ldi	r20, 0x20	; 32
    4096:	51 e4       	ldi	r21, 0x41	; 65
    4098:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    409c:	dc 01       	movw	r26, r24
    409e:	cb 01       	movw	r24, r22
    40a0:	8e 01       	movw	r16, r28
    40a2:	09 52       	subi	r16, 0x29	; 41
    40a4:	1f 4f       	sbci	r17, 0xFF	; 255
    40a6:	bc 01       	movw	r22, r24
    40a8:	cd 01       	movw	r24, r26
    40aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    40ae:	dc 01       	movw	r26, r24
    40b0:	cb 01       	movw	r24, r22
    40b2:	f8 01       	movw	r30, r16
    40b4:	91 83       	std	Z+1, r25	; 0x01
    40b6:	80 83       	st	Z, r24
    40b8:	1f c0       	rjmp	.+62     	; 0x40f8 <main+0x27ba>
    40ba:	fe 01       	movw	r30, r28
    40bc:	eb 52       	subi	r30, 0x2B	; 43
    40be:	ff 4f       	sbci	r31, 0xFF	; 255
    40c0:	89 e1       	ldi	r24, 0x19	; 25
    40c2:	90 e0       	ldi	r25, 0x00	; 0
    40c4:	91 83       	std	Z+1, r25	; 0x01
    40c6:	80 83       	st	Z, r24
    40c8:	fe 01       	movw	r30, r28
    40ca:	eb 52       	subi	r30, 0x2B	; 43
    40cc:	ff 4f       	sbci	r31, 0xFF	; 255
    40ce:	80 81       	ld	r24, Z
    40d0:	91 81       	ldd	r25, Z+1	; 0x01
    40d2:	01 97       	sbiw	r24, 0x01	; 1
    40d4:	f1 f7       	brne	.-4      	; 0x40d2 <main+0x2794>
    40d6:	fe 01       	movw	r30, r28
    40d8:	eb 52       	subi	r30, 0x2B	; 43
    40da:	ff 4f       	sbci	r31, 0xFF	; 255
    40dc:	91 83       	std	Z+1, r25	; 0x01
    40de:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40e0:	de 01       	movw	r26, r28
    40e2:	a9 52       	subi	r26, 0x29	; 41
    40e4:	bf 4f       	sbci	r27, 0xFF	; 255
    40e6:	fe 01       	movw	r30, r28
    40e8:	e9 52       	subi	r30, 0x29	; 41
    40ea:	ff 4f       	sbci	r31, 0xFF	; 255
    40ec:	80 81       	ld	r24, Z
    40ee:	91 81       	ldd	r25, Z+1	; 0x01
    40f0:	01 97       	sbiw	r24, 0x01	; 1
    40f2:	11 96       	adiw	r26, 0x01	; 1
    40f4:	9c 93       	st	X, r25
    40f6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    40f8:	fe 01       	movw	r30, r28
    40fa:	e9 52       	subi	r30, 0x29	; 41
    40fc:	ff 4f       	sbci	r31, 0xFF	; 255
    40fe:	80 81       	ld	r24, Z
    4100:	91 81       	ldd	r25, Z+1	; 0x01
    4102:	00 97       	sbiw	r24, 0x00	; 0
    4104:	d1 f6       	brne	.-76     	; 0x40ba <main+0x277c>
    4106:	27 c0       	rjmp	.+78     	; 0x4156 <main+0x2818>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4108:	8e 01       	movw	r16, r28
    410a:	09 52       	subi	r16, 0x29	; 41
    410c:	1f 4f       	sbci	r17, 0xFF	; 255
    410e:	fe 01       	movw	r30, r28
    4110:	e7 52       	subi	r30, 0x27	; 39
    4112:	ff 4f       	sbci	r31, 0xFF	; 255
    4114:	60 81       	ld	r22, Z
    4116:	71 81       	ldd	r23, Z+1	; 0x01
    4118:	82 81       	ldd	r24, Z+2	; 0x02
    411a:	93 81       	ldd	r25, Z+3	; 0x03
    411c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4120:	dc 01       	movw	r26, r24
    4122:	cb 01       	movw	r24, r22
    4124:	f8 01       	movw	r30, r16
    4126:	91 83       	std	Z+1, r25	; 0x01
    4128:	80 83       	st	Z, r24
    412a:	de 01       	movw	r26, r28
    412c:	ad 52       	subi	r26, 0x2D	; 45
    412e:	bf 4f       	sbci	r27, 0xFF	; 255
    4130:	fe 01       	movw	r30, r28
    4132:	e9 52       	subi	r30, 0x29	; 41
    4134:	ff 4f       	sbci	r31, 0xFF	; 255
    4136:	80 81       	ld	r24, Z
    4138:	91 81       	ldd	r25, Z+1	; 0x01
    413a:	8d 93       	st	X+, r24
    413c:	9c 93       	st	X, r25
    413e:	fe 01       	movw	r30, r28
    4140:	ed 52       	subi	r30, 0x2D	; 45
    4142:	ff 4f       	sbci	r31, 0xFF	; 255
    4144:	80 81       	ld	r24, Z
    4146:	91 81       	ldd	r25, Z+1	; 0x01
    4148:	01 97       	sbiw	r24, 0x01	; 1
    414a:	f1 f7       	brne	.-4      	; 0x4148 <main+0x280a>
    414c:	fe 01       	movw	r30, r28
    414e:	ed 52       	subi	r30, 0x2D	; 45
    4150:	ff 4f       	sbci	r31, 0xFF	; 255
    4152:	91 83       	std	Z+1, r25	; 0x01
    4154:	80 83       	st	Z, r24
			_delay_ms(10);
			EEPROM_writeByte(0x2,s2);
    4156:	fe 01       	movw	r30, r28
    4158:	ec 5a       	subi	r30, 0xAC	; 172
    415a:	fd 4f       	sbci	r31, 0xFD	; 253
    415c:	80 81       	ld	r24, Z
    415e:	28 2f       	mov	r18, r24
    4160:	30 e0       	ldi	r19, 0x00	; 0
    4162:	82 e0       	ldi	r24, 0x02	; 2
    4164:	90 e0       	ldi	r25, 0x00	; 0
    4166:	b9 01       	movw	r22, r18
    4168:	0e 94 a4 05 	call	0xb48	; 0xb48 <EEPROM_writeByte>
    416c:	fe 01       	movw	r30, r28
    416e:	e1 53       	subi	r30, 0x31	; 49
    4170:	ff 4f       	sbci	r31, 0xFF	; 255
    4172:	80 e0       	ldi	r24, 0x00	; 0
    4174:	90 e0       	ldi	r25, 0x00	; 0
    4176:	a0 e2       	ldi	r26, 0x20	; 32
    4178:	b1 e4       	ldi	r27, 0x41	; 65
    417a:	80 83       	st	Z, r24
    417c:	91 83       	std	Z+1, r25	; 0x01
    417e:	a2 83       	std	Z+2, r26	; 0x02
    4180:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4182:	8e 01       	movw	r16, r28
    4184:	05 53       	subi	r16, 0x35	; 53
    4186:	1f 4f       	sbci	r17, 0xFF	; 255
    4188:	fe 01       	movw	r30, r28
    418a:	e1 53       	subi	r30, 0x31	; 49
    418c:	ff 4f       	sbci	r31, 0xFF	; 255
    418e:	60 81       	ld	r22, Z
    4190:	71 81       	ldd	r23, Z+1	; 0x01
    4192:	82 81       	ldd	r24, Z+2	; 0x02
    4194:	93 81       	ldd	r25, Z+3	; 0x03
    4196:	20 e0       	ldi	r18, 0x00	; 0
    4198:	30 e0       	ldi	r19, 0x00	; 0
    419a:	4a e7       	ldi	r20, 0x7A	; 122
    419c:	53 e4       	ldi	r21, 0x43	; 67
    419e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    41a2:	dc 01       	movw	r26, r24
    41a4:	cb 01       	movw	r24, r22
    41a6:	f8 01       	movw	r30, r16
    41a8:	80 83       	st	Z, r24
    41aa:	91 83       	std	Z+1, r25	; 0x01
    41ac:	a2 83       	std	Z+2, r26	; 0x02
    41ae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    41b0:	fe 01       	movw	r30, r28
    41b2:	e5 53       	subi	r30, 0x35	; 53
    41b4:	ff 4f       	sbci	r31, 0xFF	; 255
    41b6:	60 81       	ld	r22, Z
    41b8:	71 81       	ldd	r23, Z+1	; 0x01
    41ba:	82 81       	ldd	r24, Z+2	; 0x02
    41bc:	93 81       	ldd	r25, Z+3	; 0x03
    41be:	20 e0       	ldi	r18, 0x00	; 0
    41c0:	30 e0       	ldi	r19, 0x00	; 0
    41c2:	40 e8       	ldi	r20, 0x80	; 128
    41c4:	5f e3       	ldi	r21, 0x3F	; 63
    41c6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    41ca:	88 23       	and	r24, r24
    41cc:	44 f4       	brge	.+16     	; 0x41de <main+0x28a0>
		__ticks = 1;
    41ce:	fe 01       	movw	r30, r28
    41d0:	e7 53       	subi	r30, 0x37	; 55
    41d2:	ff 4f       	sbci	r31, 0xFF	; 255
    41d4:	81 e0       	ldi	r24, 0x01	; 1
    41d6:	90 e0       	ldi	r25, 0x00	; 0
    41d8:	91 83       	std	Z+1, r25	; 0x01
    41da:	80 83       	st	Z, r24
    41dc:	64 c0       	rjmp	.+200    	; 0x42a6 <main+0x2968>
	else if (__tmp > 65535)
    41de:	fe 01       	movw	r30, r28
    41e0:	e5 53       	subi	r30, 0x35	; 53
    41e2:	ff 4f       	sbci	r31, 0xFF	; 255
    41e4:	60 81       	ld	r22, Z
    41e6:	71 81       	ldd	r23, Z+1	; 0x01
    41e8:	82 81       	ldd	r24, Z+2	; 0x02
    41ea:	93 81       	ldd	r25, Z+3	; 0x03
    41ec:	20 e0       	ldi	r18, 0x00	; 0
    41ee:	3f ef       	ldi	r19, 0xFF	; 255
    41f0:	4f e7       	ldi	r20, 0x7F	; 127
    41f2:	57 e4       	ldi	r21, 0x47	; 71
    41f4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    41f8:	18 16       	cp	r1, r24
    41fa:	0c f0       	brlt	.+2      	; 0x41fe <main+0x28c0>
    41fc:	43 c0       	rjmp	.+134    	; 0x4284 <main+0x2946>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    41fe:	fe 01       	movw	r30, r28
    4200:	e1 53       	subi	r30, 0x31	; 49
    4202:	ff 4f       	sbci	r31, 0xFF	; 255
    4204:	60 81       	ld	r22, Z
    4206:	71 81       	ldd	r23, Z+1	; 0x01
    4208:	82 81       	ldd	r24, Z+2	; 0x02
    420a:	93 81       	ldd	r25, Z+3	; 0x03
    420c:	20 e0       	ldi	r18, 0x00	; 0
    420e:	30 e0       	ldi	r19, 0x00	; 0
    4210:	40 e2       	ldi	r20, 0x20	; 32
    4212:	51 e4       	ldi	r21, 0x41	; 65
    4214:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4218:	dc 01       	movw	r26, r24
    421a:	cb 01       	movw	r24, r22
    421c:	8e 01       	movw	r16, r28
    421e:	07 53       	subi	r16, 0x37	; 55
    4220:	1f 4f       	sbci	r17, 0xFF	; 255
    4222:	bc 01       	movw	r22, r24
    4224:	cd 01       	movw	r24, r26
    4226:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    422a:	dc 01       	movw	r26, r24
    422c:	cb 01       	movw	r24, r22
    422e:	f8 01       	movw	r30, r16
    4230:	91 83       	std	Z+1, r25	; 0x01
    4232:	80 83       	st	Z, r24
    4234:	1f c0       	rjmp	.+62     	; 0x4274 <main+0x2936>
    4236:	fe 01       	movw	r30, r28
    4238:	e9 53       	subi	r30, 0x39	; 57
    423a:	ff 4f       	sbci	r31, 0xFF	; 255
    423c:	89 e1       	ldi	r24, 0x19	; 25
    423e:	90 e0       	ldi	r25, 0x00	; 0
    4240:	91 83       	std	Z+1, r25	; 0x01
    4242:	80 83       	st	Z, r24
    4244:	fe 01       	movw	r30, r28
    4246:	e9 53       	subi	r30, 0x39	; 57
    4248:	ff 4f       	sbci	r31, 0xFF	; 255
    424a:	80 81       	ld	r24, Z
    424c:	91 81       	ldd	r25, Z+1	; 0x01
    424e:	01 97       	sbiw	r24, 0x01	; 1
    4250:	f1 f7       	brne	.-4      	; 0x424e <main+0x2910>
    4252:	fe 01       	movw	r30, r28
    4254:	e9 53       	subi	r30, 0x39	; 57
    4256:	ff 4f       	sbci	r31, 0xFF	; 255
    4258:	91 83       	std	Z+1, r25	; 0x01
    425a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    425c:	de 01       	movw	r26, r28
    425e:	a7 53       	subi	r26, 0x37	; 55
    4260:	bf 4f       	sbci	r27, 0xFF	; 255
    4262:	fe 01       	movw	r30, r28
    4264:	e7 53       	subi	r30, 0x37	; 55
    4266:	ff 4f       	sbci	r31, 0xFF	; 255
    4268:	80 81       	ld	r24, Z
    426a:	91 81       	ldd	r25, Z+1	; 0x01
    426c:	01 97       	sbiw	r24, 0x01	; 1
    426e:	11 96       	adiw	r26, 0x01	; 1
    4270:	9c 93       	st	X, r25
    4272:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4274:	fe 01       	movw	r30, r28
    4276:	e7 53       	subi	r30, 0x37	; 55
    4278:	ff 4f       	sbci	r31, 0xFF	; 255
    427a:	80 81       	ld	r24, Z
    427c:	91 81       	ldd	r25, Z+1	; 0x01
    427e:	00 97       	sbiw	r24, 0x00	; 0
    4280:	d1 f6       	brne	.-76     	; 0x4236 <main+0x28f8>
    4282:	27 c0       	rjmp	.+78     	; 0x42d2 <main+0x2994>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4284:	8e 01       	movw	r16, r28
    4286:	07 53       	subi	r16, 0x37	; 55
    4288:	1f 4f       	sbci	r17, 0xFF	; 255
    428a:	fe 01       	movw	r30, r28
    428c:	e5 53       	subi	r30, 0x35	; 53
    428e:	ff 4f       	sbci	r31, 0xFF	; 255
    4290:	60 81       	ld	r22, Z
    4292:	71 81       	ldd	r23, Z+1	; 0x01
    4294:	82 81       	ldd	r24, Z+2	; 0x02
    4296:	93 81       	ldd	r25, Z+3	; 0x03
    4298:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    429c:	dc 01       	movw	r26, r24
    429e:	cb 01       	movw	r24, r22
    42a0:	f8 01       	movw	r30, r16
    42a2:	91 83       	std	Z+1, r25	; 0x01
    42a4:	80 83       	st	Z, r24
    42a6:	de 01       	movw	r26, r28
    42a8:	ab 53       	subi	r26, 0x3B	; 59
    42aa:	bf 4f       	sbci	r27, 0xFF	; 255
    42ac:	fe 01       	movw	r30, r28
    42ae:	e7 53       	subi	r30, 0x37	; 55
    42b0:	ff 4f       	sbci	r31, 0xFF	; 255
    42b2:	80 81       	ld	r24, Z
    42b4:	91 81       	ldd	r25, Z+1	; 0x01
    42b6:	8d 93       	st	X+, r24
    42b8:	9c 93       	st	X, r25
    42ba:	fe 01       	movw	r30, r28
    42bc:	eb 53       	subi	r30, 0x3B	; 59
    42be:	ff 4f       	sbci	r31, 0xFF	; 255
    42c0:	80 81       	ld	r24, Z
    42c2:	91 81       	ldd	r25, Z+1	; 0x01
    42c4:	01 97       	sbiw	r24, 0x01	; 1
    42c6:	f1 f7       	brne	.-4      	; 0x42c4 <main+0x2986>
    42c8:	fe 01       	movw	r30, r28
    42ca:	eb 53       	subi	r30, 0x3B	; 59
    42cc:	ff 4f       	sbci	r31, 0xFF	; 255
    42ce:	91 83       	std	Z+1, r25	; 0x01
    42d0:	80 83       	st	Z, r24
			_delay_ms(10);
			EEPROM_writeByte(0x3,s3);
    42d2:	fe 01       	movw	r30, r28
    42d4:	ed 5a       	subi	r30, 0xAD	; 173
    42d6:	fd 4f       	sbci	r31, 0xFD	; 253
    42d8:	80 81       	ld	r24, Z
    42da:	28 2f       	mov	r18, r24
    42dc:	30 e0       	ldi	r19, 0x00	; 0
    42de:	83 e0       	ldi	r24, 0x03	; 3
    42e0:	90 e0       	ldi	r25, 0x00	; 0
    42e2:	b9 01       	movw	r22, r18
    42e4:	0e 94 a4 05 	call	0xb48	; 0xb48 <EEPROM_writeByte>
    42e8:	fe 01       	movw	r30, r28
    42ea:	ef 53       	subi	r30, 0x3F	; 63
    42ec:	ff 4f       	sbci	r31, 0xFF	; 255
    42ee:	80 e0       	ldi	r24, 0x00	; 0
    42f0:	90 e0       	ldi	r25, 0x00	; 0
    42f2:	a0 e2       	ldi	r26, 0x20	; 32
    42f4:	b1 e4       	ldi	r27, 0x41	; 65
    42f6:	80 83       	st	Z, r24
    42f8:	91 83       	std	Z+1, r25	; 0x01
    42fa:	a2 83       	std	Z+2, r26	; 0x02
    42fc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    42fe:	8e 01       	movw	r16, r28
    4300:	03 54       	subi	r16, 0x43	; 67
    4302:	1f 4f       	sbci	r17, 0xFF	; 255
    4304:	fe 01       	movw	r30, r28
    4306:	ef 53       	subi	r30, 0x3F	; 63
    4308:	ff 4f       	sbci	r31, 0xFF	; 255
    430a:	60 81       	ld	r22, Z
    430c:	71 81       	ldd	r23, Z+1	; 0x01
    430e:	82 81       	ldd	r24, Z+2	; 0x02
    4310:	93 81       	ldd	r25, Z+3	; 0x03
    4312:	20 e0       	ldi	r18, 0x00	; 0
    4314:	30 e0       	ldi	r19, 0x00	; 0
    4316:	4a e7       	ldi	r20, 0x7A	; 122
    4318:	53 e4       	ldi	r21, 0x43	; 67
    431a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    431e:	dc 01       	movw	r26, r24
    4320:	cb 01       	movw	r24, r22
    4322:	f8 01       	movw	r30, r16
    4324:	80 83       	st	Z, r24
    4326:	91 83       	std	Z+1, r25	; 0x01
    4328:	a2 83       	std	Z+2, r26	; 0x02
    432a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    432c:	fe 01       	movw	r30, r28
    432e:	e3 54       	subi	r30, 0x43	; 67
    4330:	ff 4f       	sbci	r31, 0xFF	; 255
    4332:	60 81       	ld	r22, Z
    4334:	71 81       	ldd	r23, Z+1	; 0x01
    4336:	82 81       	ldd	r24, Z+2	; 0x02
    4338:	93 81       	ldd	r25, Z+3	; 0x03
    433a:	20 e0       	ldi	r18, 0x00	; 0
    433c:	30 e0       	ldi	r19, 0x00	; 0
    433e:	40 e8       	ldi	r20, 0x80	; 128
    4340:	5f e3       	ldi	r21, 0x3F	; 63
    4342:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4346:	88 23       	and	r24, r24
    4348:	44 f4       	brge	.+16     	; 0x435a <main+0x2a1c>
		__ticks = 1;
    434a:	fe 01       	movw	r30, r28
    434c:	e5 54       	subi	r30, 0x45	; 69
    434e:	ff 4f       	sbci	r31, 0xFF	; 255
    4350:	81 e0       	ldi	r24, 0x01	; 1
    4352:	90 e0       	ldi	r25, 0x00	; 0
    4354:	91 83       	std	Z+1, r25	; 0x01
    4356:	80 83       	st	Z, r24
    4358:	64 c0       	rjmp	.+200    	; 0x4422 <main+0x2ae4>
	else if (__tmp > 65535)
    435a:	fe 01       	movw	r30, r28
    435c:	e3 54       	subi	r30, 0x43	; 67
    435e:	ff 4f       	sbci	r31, 0xFF	; 255
    4360:	60 81       	ld	r22, Z
    4362:	71 81       	ldd	r23, Z+1	; 0x01
    4364:	82 81       	ldd	r24, Z+2	; 0x02
    4366:	93 81       	ldd	r25, Z+3	; 0x03
    4368:	20 e0       	ldi	r18, 0x00	; 0
    436a:	3f ef       	ldi	r19, 0xFF	; 255
    436c:	4f e7       	ldi	r20, 0x7F	; 127
    436e:	57 e4       	ldi	r21, 0x47	; 71
    4370:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4374:	18 16       	cp	r1, r24
    4376:	0c f0       	brlt	.+2      	; 0x437a <main+0x2a3c>
    4378:	43 c0       	rjmp	.+134    	; 0x4400 <main+0x2ac2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    437a:	fe 01       	movw	r30, r28
    437c:	ef 53       	subi	r30, 0x3F	; 63
    437e:	ff 4f       	sbci	r31, 0xFF	; 255
    4380:	60 81       	ld	r22, Z
    4382:	71 81       	ldd	r23, Z+1	; 0x01
    4384:	82 81       	ldd	r24, Z+2	; 0x02
    4386:	93 81       	ldd	r25, Z+3	; 0x03
    4388:	20 e0       	ldi	r18, 0x00	; 0
    438a:	30 e0       	ldi	r19, 0x00	; 0
    438c:	40 e2       	ldi	r20, 0x20	; 32
    438e:	51 e4       	ldi	r21, 0x41	; 65
    4390:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4394:	dc 01       	movw	r26, r24
    4396:	cb 01       	movw	r24, r22
    4398:	8e 01       	movw	r16, r28
    439a:	05 54       	subi	r16, 0x45	; 69
    439c:	1f 4f       	sbci	r17, 0xFF	; 255
    439e:	bc 01       	movw	r22, r24
    43a0:	cd 01       	movw	r24, r26
    43a2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    43a6:	dc 01       	movw	r26, r24
    43a8:	cb 01       	movw	r24, r22
    43aa:	f8 01       	movw	r30, r16
    43ac:	91 83       	std	Z+1, r25	; 0x01
    43ae:	80 83       	st	Z, r24
    43b0:	1f c0       	rjmp	.+62     	; 0x43f0 <main+0x2ab2>
    43b2:	fe 01       	movw	r30, r28
    43b4:	e7 54       	subi	r30, 0x47	; 71
    43b6:	ff 4f       	sbci	r31, 0xFF	; 255
    43b8:	89 e1       	ldi	r24, 0x19	; 25
    43ba:	90 e0       	ldi	r25, 0x00	; 0
    43bc:	91 83       	std	Z+1, r25	; 0x01
    43be:	80 83       	st	Z, r24
    43c0:	fe 01       	movw	r30, r28
    43c2:	e7 54       	subi	r30, 0x47	; 71
    43c4:	ff 4f       	sbci	r31, 0xFF	; 255
    43c6:	80 81       	ld	r24, Z
    43c8:	91 81       	ldd	r25, Z+1	; 0x01
    43ca:	01 97       	sbiw	r24, 0x01	; 1
    43cc:	f1 f7       	brne	.-4      	; 0x43ca <main+0x2a8c>
    43ce:	fe 01       	movw	r30, r28
    43d0:	e7 54       	subi	r30, 0x47	; 71
    43d2:	ff 4f       	sbci	r31, 0xFF	; 255
    43d4:	91 83       	std	Z+1, r25	; 0x01
    43d6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43d8:	de 01       	movw	r26, r28
    43da:	a5 54       	subi	r26, 0x45	; 69
    43dc:	bf 4f       	sbci	r27, 0xFF	; 255
    43de:	fe 01       	movw	r30, r28
    43e0:	e5 54       	subi	r30, 0x45	; 69
    43e2:	ff 4f       	sbci	r31, 0xFF	; 255
    43e4:	80 81       	ld	r24, Z
    43e6:	91 81       	ldd	r25, Z+1	; 0x01
    43e8:	01 97       	sbiw	r24, 0x01	; 1
    43ea:	11 96       	adiw	r26, 0x01	; 1
    43ec:	9c 93       	st	X, r25
    43ee:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43f0:	fe 01       	movw	r30, r28
    43f2:	e5 54       	subi	r30, 0x45	; 69
    43f4:	ff 4f       	sbci	r31, 0xFF	; 255
    43f6:	80 81       	ld	r24, Z
    43f8:	91 81       	ldd	r25, Z+1	; 0x01
    43fa:	00 97       	sbiw	r24, 0x00	; 0
    43fc:	d1 f6       	brne	.-76     	; 0x43b2 <main+0x2a74>
    43fe:	27 c0       	rjmp	.+78     	; 0x444e <main+0x2b10>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4400:	8e 01       	movw	r16, r28
    4402:	05 54       	subi	r16, 0x45	; 69
    4404:	1f 4f       	sbci	r17, 0xFF	; 255
    4406:	fe 01       	movw	r30, r28
    4408:	e3 54       	subi	r30, 0x43	; 67
    440a:	ff 4f       	sbci	r31, 0xFF	; 255
    440c:	60 81       	ld	r22, Z
    440e:	71 81       	ldd	r23, Z+1	; 0x01
    4410:	82 81       	ldd	r24, Z+2	; 0x02
    4412:	93 81       	ldd	r25, Z+3	; 0x03
    4414:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4418:	dc 01       	movw	r26, r24
    441a:	cb 01       	movw	r24, r22
    441c:	f8 01       	movw	r30, r16
    441e:	91 83       	std	Z+1, r25	; 0x01
    4420:	80 83       	st	Z, r24
    4422:	de 01       	movw	r26, r28
    4424:	a9 54       	subi	r26, 0x49	; 73
    4426:	bf 4f       	sbci	r27, 0xFF	; 255
    4428:	fe 01       	movw	r30, r28
    442a:	e5 54       	subi	r30, 0x45	; 69
    442c:	ff 4f       	sbci	r31, 0xFF	; 255
    442e:	80 81       	ld	r24, Z
    4430:	91 81       	ldd	r25, Z+1	; 0x01
    4432:	8d 93       	st	X+, r24
    4434:	9c 93       	st	X, r25
    4436:	fe 01       	movw	r30, r28
    4438:	e9 54       	subi	r30, 0x49	; 73
    443a:	ff 4f       	sbci	r31, 0xFF	; 255
    443c:	80 81       	ld	r24, Z
    443e:	91 81       	ldd	r25, Z+1	; 0x01
    4440:	01 97       	sbiw	r24, 0x01	; 1
    4442:	f1 f7       	brne	.-4      	; 0x4440 <main+0x2b02>
    4444:	fe 01       	movw	r30, r28
    4446:	e9 54       	subi	r30, 0x49	; 73
    4448:	ff 4f       	sbci	r31, 0xFF	; 255
    444a:	91 83       	std	Z+1, r25	; 0x01
    444c:	80 83       	st	Z, r24
			_delay_ms(10);
			EEPROM_writeByte(0x4,s4);
    444e:	fe 01       	movw	r30, r28
    4450:	ee 5a       	subi	r30, 0xAE	; 174
    4452:	fd 4f       	sbci	r31, 0xFD	; 253
    4454:	80 81       	ld	r24, Z
    4456:	28 2f       	mov	r18, r24
    4458:	30 e0       	ldi	r19, 0x00	; 0
    445a:	84 e0       	ldi	r24, 0x04	; 4
    445c:	90 e0       	ldi	r25, 0x00	; 0
    445e:	b9 01       	movw	r22, r18
    4460:	0e 94 a4 05 	call	0xb48	; 0xb48 <EEPROM_writeByte>
    4464:	fe 01       	movw	r30, r28
    4466:	ed 54       	subi	r30, 0x4D	; 77
    4468:	ff 4f       	sbci	r31, 0xFF	; 255
    446a:	80 e0       	ldi	r24, 0x00	; 0
    446c:	90 e0       	ldi	r25, 0x00	; 0
    446e:	a0 e2       	ldi	r26, 0x20	; 32
    4470:	b1 e4       	ldi	r27, 0x41	; 65
    4472:	80 83       	st	Z, r24
    4474:	91 83       	std	Z+1, r25	; 0x01
    4476:	a2 83       	std	Z+2, r26	; 0x02
    4478:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    447a:	8e 01       	movw	r16, r28
    447c:	01 55       	subi	r16, 0x51	; 81
    447e:	1f 4f       	sbci	r17, 0xFF	; 255
    4480:	fe 01       	movw	r30, r28
    4482:	ed 54       	subi	r30, 0x4D	; 77
    4484:	ff 4f       	sbci	r31, 0xFF	; 255
    4486:	60 81       	ld	r22, Z
    4488:	71 81       	ldd	r23, Z+1	; 0x01
    448a:	82 81       	ldd	r24, Z+2	; 0x02
    448c:	93 81       	ldd	r25, Z+3	; 0x03
    448e:	20 e0       	ldi	r18, 0x00	; 0
    4490:	30 e0       	ldi	r19, 0x00	; 0
    4492:	4a e7       	ldi	r20, 0x7A	; 122
    4494:	53 e4       	ldi	r21, 0x43	; 67
    4496:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    449a:	dc 01       	movw	r26, r24
    449c:	cb 01       	movw	r24, r22
    449e:	f8 01       	movw	r30, r16
    44a0:	80 83       	st	Z, r24
    44a2:	91 83       	std	Z+1, r25	; 0x01
    44a4:	a2 83       	std	Z+2, r26	; 0x02
    44a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    44a8:	fe 01       	movw	r30, r28
    44aa:	e1 55       	subi	r30, 0x51	; 81
    44ac:	ff 4f       	sbci	r31, 0xFF	; 255
    44ae:	60 81       	ld	r22, Z
    44b0:	71 81       	ldd	r23, Z+1	; 0x01
    44b2:	82 81       	ldd	r24, Z+2	; 0x02
    44b4:	93 81       	ldd	r25, Z+3	; 0x03
    44b6:	20 e0       	ldi	r18, 0x00	; 0
    44b8:	30 e0       	ldi	r19, 0x00	; 0
    44ba:	40 e8       	ldi	r20, 0x80	; 128
    44bc:	5f e3       	ldi	r21, 0x3F	; 63
    44be:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    44c2:	88 23       	and	r24, r24
    44c4:	44 f4       	brge	.+16     	; 0x44d6 <main+0x2b98>
		__ticks = 1;
    44c6:	fe 01       	movw	r30, r28
    44c8:	e3 55       	subi	r30, 0x53	; 83
    44ca:	ff 4f       	sbci	r31, 0xFF	; 255
    44cc:	81 e0       	ldi	r24, 0x01	; 1
    44ce:	90 e0       	ldi	r25, 0x00	; 0
    44d0:	91 83       	std	Z+1, r25	; 0x01
    44d2:	80 83       	st	Z, r24
    44d4:	64 c0       	rjmp	.+200    	; 0x459e <main+0x2c60>
	else if (__tmp > 65535)
    44d6:	fe 01       	movw	r30, r28
    44d8:	e1 55       	subi	r30, 0x51	; 81
    44da:	ff 4f       	sbci	r31, 0xFF	; 255
    44dc:	60 81       	ld	r22, Z
    44de:	71 81       	ldd	r23, Z+1	; 0x01
    44e0:	82 81       	ldd	r24, Z+2	; 0x02
    44e2:	93 81       	ldd	r25, Z+3	; 0x03
    44e4:	20 e0       	ldi	r18, 0x00	; 0
    44e6:	3f ef       	ldi	r19, 0xFF	; 255
    44e8:	4f e7       	ldi	r20, 0x7F	; 127
    44ea:	57 e4       	ldi	r21, 0x47	; 71
    44ec:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    44f0:	18 16       	cp	r1, r24
    44f2:	0c f0       	brlt	.+2      	; 0x44f6 <main+0x2bb8>
    44f4:	43 c0       	rjmp	.+134    	; 0x457c <main+0x2c3e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44f6:	fe 01       	movw	r30, r28
    44f8:	ed 54       	subi	r30, 0x4D	; 77
    44fa:	ff 4f       	sbci	r31, 0xFF	; 255
    44fc:	60 81       	ld	r22, Z
    44fe:	71 81       	ldd	r23, Z+1	; 0x01
    4500:	82 81       	ldd	r24, Z+2	; 0x02
    4502:	93 81       	ldd	r25, Z+3	; 0x03
    4504:	20 e0       	ldi	r18, 0x00	; 0
    4506:	30 e0       	ldi	r19, 0x00	; 0
    4508:	40 e2       	ldi	r20, 0x20	; 32
    450a:	51 e4       	ldi	r21, 0x41	; 65
    450c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4510:	dc 01       	movw	r26, r24
    4512:	cb 01       	movw	r24, r22
    4514:	8e 01       	movw	r16, r28
    4516:	03 55       	subi	r16, 0x53	; 83
    4518:	1f 4f       	sbci	r17, 0xFF	; 255
    451a:	bc 01       	movw	r22, r24
    451c:	cd 01       	movw	r24, r26
    451e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4522:	dc 01       	movw	r26, r24
    4524:	cb 01       	movw	r24, r22
    4526:	f8 01       	movw	r30, r16
    4528:	91 83       	std	Z+1, r25	; 0x01
    452a:	80 83       	st	Z, r24
    452c:	1f c0       	rjmp	.+62     	; 0x456c <main+0x2c2e>
    452e:	fe 01       	movw	r30, r28
    4530:	e5 55       	subi	r30, 0x55	; 85
    4532:	ff 4f       	sbci	r31, 0xFF	; 255
    4534:	89 e1       	ldi	r24, 0x19	; 25
    4536:	90 e0       	ldi	r25, 0x00	; 0
    4538:	91 83       	std	Z+1, r25	; 0x01
    453a:	80 83       	st	Z, r24
    453c:	fe 01       	movw	r30, r28
    453e:	e5 55       	subi	r30, 0x55	; 85
    4540:	ff 4f       	sbci	r31, 0xFF	; 255
    4542:	80 81       	ld	r24, Z
    4544:	91 81       	ldd	r25, Z+1	; 0x01
    4546:	01 97       	sbiw	r24, 0x01	; 1
    4548:	f1 f7       	brne	.-4      	; 0x4546 <main+0x2c08>
    454a:	fe 01       	movw	r30, r28
    454c:	e5 55       	subi	r30, 0x55	; 85
    454e:	ff 4f       	sbci	r31, 0xFF	; 255
    4550:	91 83       	std	Z+1, r25	; 0x01
    4552:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4554:	de 01       	movw	r26, r28
    4556:	a3 55       	subi	r26, 0x53	; 83
    4558:	bf 4f       	sbci	r27, 0xFF	; 255
    455a:	fe 01       	movw	r30, r28
    455c:	e3 55       	subi	r30, 0x53	; 83
    455e:	ff 4f       	sbci	r31, 0xFF	; 255
    4560:	80 81       	ld	r24, Z
    4562:	91 81       	ldd	r25, Z+1	; 0x01
    4564:	01 97       	sbiw	r24, 0x01	; 1
    4566:	11 96       	adiw	r26, 0x01	; 1
    4568:	9c 93       	st	X, r25
    456a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    456c:	fe 01       	movw	r30, r28
    456e:	e3 55       	subi	r30, 0x53	; 83
    4570:	ff 4f       	sbci	r31, 0xFF	; 255
    4572:	80 81       	ld	r24, Z
    4574:	91 81       	ldd	r25, Z+1	; 0x01
    4576:	00 97       	sbiw	r24, 0x00	; 0
    4578:	d1 f6       	brne	.-76     	; 0x452e <main+0x2bf0>
    457a:	27 c0       	rjmp	.+78     	; 0x45ca <main+0x2c8c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    457c:	8e 01       	movw	r16, r28
    457e:	03 55       	subi	r16, 0x53	; 83
    4580:	1f 4f       	sbci	r17, 0xFF	; 255
    4582:	fe 01       	movw	r30, r28
    4584:	e1 55       	subi	r30, 0x51	; 81
    4586:	ff 4f       	sbci	r31, 0xFF	; 255
    4588:	60 81       	ld	r22, Z
    458a:	71 81       	ldd	r23, Z+1	; 0x01
    458c:	82 81       	ldd	r24, Z+2	; 0x02
    458e:	93 81       	ldd	r25, Z+3	; 0x03
    4590:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4594:	dc 01       	movw	r26, r24
    4596:	cb 01       	movw	r24, r22
    4598:	f8 01       	movw	r30, r16
    459a:	91 83       	std	Z+1, r25	; 0x01
    459c:	80 83       	st	Z, r24
    459e:	de 01       	movw	r26, r28
    45a0:	a7 55       	subi	r26, 0x57	; 87
    45a2:	bf 4f       	sbci	r27, 0xFF	; 255
    45a4:	fe 01       	movw	r30, r28
    45a6:	e3 55       	subi	r30, 0x53	; 83
    45a8:	ff 4f       	sbci	r31, 0xFF	; 255
    45aa:	80 81       	ld	r24, Z
    45ac:	91 81       	ldd	r25, Z+1	; 0x01
    45ae:	8d 93       	st	X+, r24
    45b0:	9c 93       	st	X, r25
    45b2:	fe 01       	movw	r30, r28
    45b4:	e7 55       	subi	r30, 0x57	; 87
    45b6:	ff 4f       	sbci	r31, 0xFF	; 255
    45b8:	80 81       	ld	r24, Z
    45ba:	91 81       	ldd	r25, Z+1	; 0x01
    45bc:	01 97       	sbiw	r24, 0x01	; 1
    45be:	f1 f7       	brne	.-4      	; 0x45bc <main+0x2c7e>
    45c0:	fe 01       	movw	r30, r28
    45c2:	e7 55       	subi	r30, 0x57	; 87
    45c4:	ff 4f       	sbci	r31, 0xFF	; 255
    45c6:	91 83       	std	Z+1, r25	; 0x01
    45c8:	80 83       	st	Z, r24
			_delay_ms(10);
			EEPROM_writeByte(0x5,s5);
    45ca:	fe 01       	movw	r30, r28
    45cc:	ef 5a       	subi	r30, 0xAF	; 175
    45ce:	fd 4f       	sbci	r31, 0xFD	; 253
    45d0:	80 81       	ld	r24, Z
    45d2:	28 2f       	mov	r18, r24
    45d4:	30 e0       	ldi	r19, 0x00	; 0
    45d6:	85 e0       	ldi	r24, 0x05	; 5
    45d8:	90 e0       	ldi	r25, 0x00	; 0
    45da:	b9 01       	movw	r22, r18
    45dc:	0e 94 a4 05 	call	0xb48	; 0xb48 <EEPROM_writeByte>
    45e0:	fe 01       	movw	r30, r28
    45e2:	eb 55       	subi	r30, 0x5B	; 91
    45e4:	ff 4f       	sbci	r31, 0xFF	; 255
    45e6:	80 e0       	ldi	r24, 0x00	; 0
    45e8:	90 e0       	ldi	r25, 0x00	; 0
    45ea:	a0 e2       	ldi	r26, 0x20	; 32
    45ec:	b1 e4       	ldi	r27, 0x41	; 65
    45ee:	80 83       	st	Z, r24
    45f0:	91 83       	std	Z+1, r25	; 0x01
    45f2:	a2 83       	std	Z+2, r26	; 0x02
    45f4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    45f6:	8e 01       	movw	r16, r28
    45f8:	0f 55       	subi	r16, 0x5F	; 95
    45fa:	1f 4f       	sbci	r17, 0xFF	; 255
    45fc:	fe 01       	movw	r30, r28
    45fe:	eb 55       	subi	r30, 0x5B	; 91
    4600:	ff 4f       	sbci	r31, 0xFF	; 255
    4602:	60 81       	ld	r22, Z
    4604:	71 81       	ldd	r23, Z+1	; 0x01
    4606:	82 81       	ldd	r24, Z+2	; 0x02
    4608:	93 81       	ldd	r25, Z+3	; 0x03
    460a:	20 e0       	ldi	r18, 0x00	; 0
    460c:	30 e0       	ldi	r19, 0x00	; 0
    460e:	4a e7       	ldi	r20, 0x7A	; 122
    4610:	53 e4       	ldi	r21, 0x43	; 67
    4612:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4616:	dc 01       	movw	r26, r24
    4618:	cb 01       	movw	r24, r22
    461a:	f8 01       	movw	r30, r16
    461c:	80 83       	st	Z, r24
    461e:	91 83       	std	Z+1, r25	; 0x01
    4620:	a2 83       	std	Z+2, r26	; 0x02
    4622:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4624:	fe 01       	movw	r30, r28
    4626:	ef 55       	subi	r30, 0x5F	; 95
    4628:	ff 4f       	sbci	r31, 0xFF	; 255
    462a:	60 81       	ld	r22, Z
    462c:	71 81       	ldd	r23, Z+1	; 0x01
    462e:	82 81       	ldd	r24, Z+2	; 0x02
    4630:	93 81       	ldd	r25, Z+3	; 0x03
    4632:	20 e0       	ldi	r18, 0x00	; 0
    4634:	30 e0       	ldi	r19, 0x00	; 0
    4636:	40 e8       	ldi	r20, 0x80	; 128
    4638:	5f e3       	ldi	r21, 0x3F	; 63
    463a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    463e:	88 23       	and	r24, r24
    4640:	44 f4       	brge	.+16     	; 0x4652 <main+0x2d14>
		__ticks = 1;
    4642:	fe 01       	movw	r30, r28
    4644:	e1 56       	subi	r30, 0x61	; 97
    4646:	ff 4f       	sbci	r31, 0xFF	; 255
    4648:	81 e0       	ldi	r24, 0x01	; 1
    464a:	90 e0       	ldi	r25, 0x00	; 0
    464c:	91 83       	std	Z+1, r25	; 0x01
    464e:	80 83       	st	Z, r24
    4650:	64 c0       	rjmp	.+200    	; 0x471a <main+0x2ddc>
	else if (__tmp > 65535)
    4652:	fe 01       	movw	r30, r28
    4654:	ef 55       	subi	r30, 0x5F	; 95
    4656:	ff 4f       	sbci	r31, 0xFF	; 255
    4658:	60 81       	ld	r22, Z
    465a:	71 81       	ldd	r23, Z+1	; 0x01
    465c:	82 81       	ldd	r24, Z+2	; 0x02
    465e:	93 81       	ldd	r25, Z+3	; 0x03
    4660:	20 e0       	ldi	r18, 0x00	; 0
    4662:	3f ef       	ldi	r19, 0xFF	; 255
    4664:	4f e7       	ldi	r20, 0x7F	; 127
    4666:	57 e4       	ldi	r21, 0x47	; 71
    4668:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    466c:	18 16       	cp	r1, r24
    466e:	0c f0       	brlt	.+2      	; 0x4672 <main+0x2d34>
    4670:	43 c0       	rjmp	.+134    	; 0x46f8 <main+0x2dba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4672:	fe 01       	movw	r30, r28
    4674:	eb 55       	subi	r30, 0x5B	; 91
    4676:	ff 4f       	sbci	r31, 0xFF	; 255
    4678:	60 81       	ld	r22, Z
    467a:	71 81       	ldd	r23, Z+1	; 0x01
    467c:	82 81       	ldd	r24, Z+2	; 0x02
    467e:	93 81       	ldd	r25, Z+3	; 0x03
    4680:	20 e0       	ldi	r18, 0x00	; 0
    4682:	30 e0       	ldi	r19, 0x00	; 0
    4684:	40 e2       	ldi	r20, 0x20	; 32
    4686:	51 e4       	ldi	r21, 0x41	; 65
    4688:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    468c:	dc 01       	movw	r26, r24
    468e:	cb 01       	movw	r24, r22
    4690:	8e 01       	movw	r16, r28
    4692:	01 56       	subi	r16, 0x61	; 97
    4694:	1f 4f       	sbci	r17, 0xFF	; 255
    4696:	bc 01       	movw	r22, r24
    4698:	cd 01       	movw	r24, r26
    469a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    469e:	dc 01       	movw	r26, r24
    46a0:	cb 01       	movw	r24, r22
    46a2:	f8 01       	movw	r30, r16
    46a4:	91 83       	std	Z+1, r25	; 0x01
    46a6:	80 83       	st	Z, r24
    46a8:	1f c0       	rjmp	.+62     	; 0x46e8 <main+0x2daa>
    46aa:	fe 01       	movw	r30, r28
    46ac:	e3 56       	subi	r30, 0x63	; 99
    46ae:	ff 4f       	sbci	r31, 0xFF	; 255
    46b0:	89 e1       	ldi	r24, 0x19	; 25
    46b2:	90 e0       	ldi	r25, 0x00	; 0
    46b4:	91 83       	std	Z+1, r25	; 0x01
    46b6:	80 83       	st	Z, r24
    46b8:	fe 01       	movw	r30, r28
    46ba:	e3 56       	subi	r30, 0x63	; 99
    46bc:	ff 4f       	sbci	r31, 0xFF	; 255
    46be:	80 81       	ld	r24, Z
    46c0:	91 81       	ldd	r25, Z+1	; 0x01
    46c2:	01 97       	sbiw	r24, 0x01	; 1
    46c4:	f1 f7       	brne	.-4      	; 0x46c2 <main+0x2d84>
    46c6:	fe 01       	movw	r30, r28
    46c8:	e3 56       	subi	r30, 0x63	; 99
    46ca:	ff 4f       	sbci	r31, 0xFF	; 255
    46cc:	91 83       	std	Z+1, r25	; 0x01
    46ce:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    46d0:	de 01       	movw	r26, r28
    46d2:	a1 56       	subi	r26, 0x61	; 97
    46d4:	bf 4f       	sbci	r27, 0xFF	; 255
    46d6:	fe 01       	movw	r30, r28
    46d8:	e1 56       	subi	r30, 0x61	; 97
    46da:	ff 4f       	sbci	r31, 0xFF	; 255
    46dc:	80 81       	ld	r24, Z
    46de:	91 81       	ldd	r25, Z+1	; 0x01
    46e0:	01 97       	sbiw	r24, 0x01	; 1
    46e2:	11 96       	adiw	r26, 0x01	; 1
    46e4:	9c 93       	st	X, r25
    46e6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    46e8:	fe 01       	movw	r30, r28
    46ea:	e1 56       	subi	r30, 0x61	; 97
    46ec:	ff 4f       	sbci	r31, 0xFF	; 255
    46ee:	80 81       	ld	r24, Z
    46f0:	91 81       	ldd	r25, Z+1	; 0x01
    46f2:	00 97       	sbiw	r24, 0x00	; 0
    46f4:	d1 f6       	brne	.-76     	; 0x46aa <main+0x2d6c>
    46f6:	27 c0       	rjmp	.+78     	; 0x4746 <main+0x2e08>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    46f8:	8e 01       	movw	r16, r28
    46fa:	01 56       	subi	r16, 0x61	; 97
    46fc:	1f 4f       	sbci	r17, 0xFF	; 255
    46fe:	fe 01       	movw	r30, r28
    4700:	ef 55       	subi	r30, 0x5F	; 95
    4702:	ff 4f       	sbci	r31, 0xFF	; 255
    4704:	60 81       	ld	r22, Z
    4706:	71 81       	ldd	r23, Z+1	; 0x01
    4708:	82 81       	ldd	r24, Z+2	; 0x02
    470a:	93 81       	ldd	r25, Z+3	; 0x03
    470c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4710:	dc 01       	movw	r26, r24
    4712:	cb 01       	movw	r24, r22
    4714:	f8 01       	movw	r30, r16
    4716:	91 83       	std	Z+1, r25	; 0x01
    4718:	80 83       	st	Z, r24
    471a:	de 01       	movw	r26, r28
    471c:	a5 56       	subi	r26, 0x65	; 101
    471e:	bf 4f       	sbci	r27, 0xFF	; 255
    4720:	fe 01       	movw	r30, r28
    4722:	e1 56       	subi	r30, 0x61	; 97
    4724:	ff 4f       	sbci	r31, 0xFF	; 255
    4726:	80 81       	ld	r24, Z
    4728:	91 81       	ldd	r25, Z+1	; 0x01
    472a:	8d 93       	st	X+, r24
    472c:	9c 93       	st	X, r25
    472e:	fe 01       	movw	r30, r28
    4730:	e5 56       	subi	r30, 0x65	; 101
    4732:	ff 4f       	sbci	r31, 0xFF	; 255
    4734:	80 81       	ld	r24, Z
    4736:	91 81       	ldd	r25, Z+1	; 0x01
    4738:	01 97       	sbiw	r24, 0x01	; 1
    473a:	f1 f7       	brne	.-4      	; 0x4738 <main+0x2dfa>
    473c:	fe 01       	movw	r30, r28
    473e:	e5 56       	subi	r30, 0x65	; 101
    4740:	ff 4f       	sbci	r31, 0xFF	; 255
    4742:	91 83       	std	Z+1, r25	; 0x01
    4744:	80 83       	st	Z, r24
			_delay_ms(10);
			EEPROM_writeByte(0x6,s6);
    4746:	fe 01       	movw	r30, r28
    4748:	e0 5b       	subi	r30, 0xB0	; 176
    474a:	fd 4f       	sbci	r31, 0xFD	; 253
    474c:	80 81       	ld	r24, Z
    474e:	28 2f       	mov	r18, r24
    4750:	30 e0       	ldi	r19, 0x00	; 0
    4752:	86 e0       	ldi	r24, 0x06	; 6
    4754:	90 e0       	ldi	r25, 0x00	; 0
    4756:	b9 01       	movw	r22, r18
    4758:	0e 94 a4 05 	call	0xb48	; 0xb48 <EEPROM_writeByte>
    475c:	fe 01       	movw	r30, r28
    475e:	e9 56       	subi	r30, 0x69	; 105
    4760:	ff 4f       	sbci	r31, 0xFF	; 255
    4762:	80 e0       	ldi	r24, 0x00	; 0
    4764:	90 e0       	ldi	r25, 0x00	; 0
    4766:	a0 e2       	ldi	r26, 0x20	; 32
    4768:	b1 e4       	ldi	r27, 0x41	; 65
    476a:	80 83       	st	Z, r24
    476c:	91 83       	std	Z+1, r25	; 0x01
    476e:	a2 83       	std	Z+2, r26	; 0x02
    4770:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4772:	8e 01       	movw	r16, r28
    4774:	0d 56       	subi	r16, 0x6D	; 109
    4776:	1f 4f       	sbci	r17, 0xFF	; 255
    4778:	fe 01       	movw	r30, r28
    477a:	e9 56       	subi	r30, 0x69	; 105
    477c:	ff 4f       	sbci	r31, 0xFF	; 255
    477e:	60 81       	ld	r22, Z
    4780:	71 81       	ldd	r23, Z+1	; 0x01
    4782:	82 81       	ldd	r24, Z+2	; 0x02
    4784:	93 81       	ldd	r25, Z+3	; 0x03
    4786:	20 e0       	ldi	r18, 0x00	; 0
    4788:	30 e0       	ldi	r19, 0x00	; 0
    478a:	4a e7       	ldi	r20, 0x7A	; 122
    478c:	53 e4       	ldi	r21, 0x43	; 67
    478e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4792:	dc 01       	movw	r26, r24
    4794:	cb 01       	movw	r24, r22
    4796:	f8 01       	movw	r30, r16
    4798:	80 83       	st	Z, r24
    479a:	91 83       	std	Z+1, r25	; 0x01
    479c:	a2 83       	std	Z+2, r26	; 0x02
    479e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    47a0:	fe 01       	movw	r30, r28
    47a2:	ed 56       	subi	r30, 0x6D	; 109
    47a4:	ff 4f       	sbci	r31, 0xFF	; 255
    47a6:	60 81       	ld	r22, Z
    47a8:	71 81       	ldd	r23, Z+1	; 0x01
    47aa:	82 81       	ldd	r24, Z+2	; 0x02
    47ac:	93 81       	ldd	r25, Z+3	; 0x03
    47ae:	20 e0       	ldi	r18, 0x00	; 0
    47b0:	30 e0       	ldi	r19, 0x00	; 0
    47b2:	40 e8       	ldi	r20, 0x80	; 128
    47b4:	5f e3       	ldi	r21, 0x3F	; 63
    47b6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    47ba:	88 23       	and	r24, r24
    47bc:	44 f4       	brge	.+16     	; 0x47ce <main+0x2e90>
		__ticks = 1;
    47be:	fe 01       	movw	r30, r28
    47c0:	ef 56       	subi	r30, 0x6F	; 111
    47c2:	ff 4f       	sbci	r31, 0xFF	; 255
    47c4:	81 e0       	ldi	r24, 0x01	; 1
    47c6:	90 e0       	ldi	r25, 0x00	; 0
    47c8:	91 83       	std	Z+1, r25	; 0x01
    47ca:	80 83       	st	Z, r24
    47cc:	64 c0       	rjmp	.+200    	; 0x4896 <main+0x2f58>
	else if (__tmp > 65535)
    47ce:	fe 01       	movw	r30, r28
    47d0:	ed 56       	subi	r30, 0x6D	; 109
    47d2:	ff 4f       	sbci	r31, 0xFF	; 255
    47d4:	60 81       	ld	r22, Z
    47d6:	71 81       	ldd	r23, Z+1	; 0x01
    47d8:	82 81       	ldd	r24, Z+2	; 0x02
    47da:	93 81       	ldd	r25, Z+3	; 0x03
    47dc:	20 e0       	ldi	r18, 0x00	; 0
    47de:	3f ef       	ldi	r19, 0xFF	; 255
    47e0:	4f e7       	ldi	r20, 0x7F	; 127
    47e2:	57 e4       	ldi	r21, 0x47	; 71
    47e4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    47e8:	18 16       	cp	r1, r24
    47ea:	0c f0       	brlt	.+2      	; 0x47ee <main+0x2eb0>
    47ec:	43 c0       	rjmp	.+134    	; 0x4874 <main+0x2f36>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47ee:	fe 01       	movw	r30, r28
    47f0:	e9 56       	subi	r30, 0x69	; 105
    47f2:	ff 4f       	sbci	r31, 0xFF	; 255
    47f4:	60 81       	ld	r22, Z
    47f6:	71 81       	ldd	r23, Z+1	; 0x01
    47f8:	82 81       	ldd	r24, Z+2	; 0x02
    47fa:	93 81       	ldd	r25, Z+3	; 0x03
    47fc:	20 e0       	ldi	r18, 0x00	; 0
    47fe:	30 e0       	ldi	r19, 0x00	; 0
    4800:	40 e2       	ldi	r20, 0x20	; 32
    4802:	51 e4       	ldi	r21, 0x41	; 65
    4804:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4808:	dc 01       	movw	r26, r24
    480a:	cb 01       	movw	r24, r22
    480c:	8e 01       	movw	r16, r28
    480e:	0f 56       	subi	r16, 0x6F	; 111
    4810:	1f 4f       	sbci	r17, 0xFF	; 255
    4812:	bc 01       	movw	r22, r24
    4814:	cd 01       	movw	r24, r26
    4816:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    481a:	dc 01       	movw	r26, r24
    481c:	cb 01       	movw	r24, r22
    481e:	f8 01       	movw	r30, r16
    4820:	91 83       	std	Z+1, r25	; 0x01
    4822:	80 83       	st	Z, r24
    4824:	1f c0       	rjmp	.+62     	; 0x4864 <main+0x2f26>
    4826:	fe 01       	movw	r30, r28
    4828:	e1 57       	subi	r30, 0x71	; 113
    482a:	ff 4f       	sbci	r31, 0xFF	; 255
    482c:	89 e1       	ldi	r24, 0x19	; 25
    482e:	90 e0       	ldi	r25, 0x00	; 0
    4830:	91 83       	std	Z+1, r25	; 0x01
    4832:	80 83       	st	Z, r24
    4834:	fe 01       	movw	r30, r28
    4836:	e1 57       	subi	r30, 0x71	; 113
    4838:	ff 4f       	sbci	r31, 0xFF	; 255
    483a:	80 81       	ld	r24, Z
    483c:	91 81       	ldd	r25, Z+1	; 0x01
    483e:	01 97       	sbiw	r24, 0x01	; 1
    4840:	f1 f7       	brne	.-4      	; 0x483e <main+0x2f00>
    4842:	fe 01       	movw	r30, r28
    4844:	e1 57       	subi	r30, 0x71	; 113
    4846:	ff 4f       	sbci	r31, 0xFF	; 255
    4848:	91 83       	std	Z+1, r25	; 0x01
    484a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    484c:	de 01       	movw	r26, r28
    484e:	af 56       	subi	r26, 0x6F	; 111
    4850:	bf 4f       	sbci	r27, 0xFF	; 255
    4852:	fe 01       	movw	r30, r28
    4854:	ef 56       	subi	r30, 0x6F	; 111
    4856:	ff 4f       	sbci	r31, 0xFF	; 255
    4858:	80 81       	ld	r24, Z
    485a:	91 81       	ldd	r25, Z+1	; 0x01
    485c:	01 97       	sbiw	r24, 0x01	; 1
    485e:	11 96       	adiw	r26, 0x01	; 1
    4860:	9c 93       	st	X, r25
    4862:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4864:	fe 01       	movw	r30, r28
    4866:	ef 56       	subi	r30, 0x6F	; 111
    4868:	ff 4f       	sbci	r31, 0xFF	; 255
    486a:	80 81       	ld	r24, Z
    486c:	91 81       	ldd	r25, Z+1	; 0x01
    486e:	00 97       	sbiw	r24, 0x00	; 0
    4870:	d1 f6       	brne	.-76     	; 0x4826 <main+0x2ee8>
    4872:	27 c0       	rjmp	.+78     	; 0x48c2 <main+0x2f84>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4874:	8e 01       	movw	r16, r28
    4876:	0f 56       	subi	r16, 0x6F	; 111
    4878:	1f 4f       	sbci	r17, 0xFF	; 255
    487a:	fe 01       	movw	r30, r28
    487c:	ed 56       	subi	r30, 0x6D	; 109
    487e:	ff 4f       	sbci	r31, 0xFF	; 255
    4880:	60 81       	ld	r22, Z
    4882:	71 81       	ldd	r23, Z+1	; 0x01
    4884:	82 81       	ldd	r24, Z+2	; 0x02
    4886:	93 81       	ldd	r25, Z+3	; 0x03
    4888:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    488c:	dc 01       	movw	r26, r24
    488e:	cb 01       	movw	r24, r22
    4890:	f8 01       	movw	r30, r16
    4892:	91 83       	std	Z+1, r25	; 0x01
    4894:	80 83       	st	Z, r24
    4896:	de 01       	movw	r26, r28
    4898:	a3 57       	subi	r26, 0x73	; 115
    489a:	bf 4f       	sbci	r27, 0xFF	; 255
    489c:	fe 01       	movw	r30, r28
    489e:	ef 56       	subi	r30, 0x6F	; 111
    48a0:	ff 4f       	sbci	r31, 0xFF	; 255
    48a2:	80 81       	ld	r24, Z
    48a4:	91 81       	ldd	r25, Z+1	; 0x01
    48a6:	8d 93       	st	X+, r24
    48a8:	9c 93       	st	X, r25
    48aa:	fe 01       	movw	r30, r28
    48ac:	e3 57       	subi	r30, 0x73	; 115
    48ae:	ff 4f       	sbci	r31, 0xFF	; 255
    48b0:	80 81       	ld	r24, Z
    48b2:	91 81       	ldd	r25, Z+1	; 0x01
    48b4:	01 97       	sbiw	r24, 0x01	; 1
    48b6:	f1 f7       	brne	.-4      	; 0x48b4 <main+0x2f76>
    48b8:	fe 01       	movw	r30, r28
    48ba:	e3 57       	subi	r30, 0x73	; 115
    48bc:	ff 4f       	sbci	r31, 0xFF	; 255
    48be:	91 83       	std	Z+1, r25	; 0x01
    48c0:	80 83       	st	Z, r24
			_delay_ms(10);
			EEPROM_writeByte(0x7,s7);
    48c2:	fe 01       	movw	r30, r28
    48c4:	e1 5b       	subi	r30, 0xB1	; 177
    48c6:	fd 4f       	sbci	r31, 0xFD	; 253
    48c8:	80 81       	ld	r24, Z
    48ca:	28 2f       	mov	r18, r24
    48cc:	30 e0       	ldi	r19, 0x00	; 0
    48ce:	87 e0       	ldi	r24, 0x07	; 7
    48d0:	90 e0       	ldi	r25, 0x00	; 0
    48d2:	b9 01       	movw	r22, r18
    48d4:	0e 94 a4 05 	call	0xb48	; 0xb48 <EEPROM_writeByte>
    48d8:	fe 01       	movw	r30, r28
    48da:	e7 57       	subi	r30, 0x77	; 119
    48dc:	ff 4f       	sbci	r31, 0xFF	; 255
    48de:	80 e0       	ldi	r24, 0x00	; 0
    48e0:	90 e0       	ldi	r25, 0x00	; 0
    48e2:	a0 e2       	ldi	r26, 0x20	; 32
    48e4:	b1 e4       	ldi	r27, 0x41	; 65
    48e6:	80 83       	st	Z, r24
    48e8:	91 83       	std	Z+1, r25	; 0x01
    48ea:	a2 83       	std	Z+2, r26	; 0x02
    48ec:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    48ee:	8e 01       	movw	r16, r28
    48f0:	0b 57       	subi	r16, 0x7B	; 123
    48f2:	1f 4f       	sbci	r17, 0xFF	; 255
    48f4:	fe 01       	movw	r30, r28
    48f6:	e7 57       	subi	r30, 0x77	; 119
    48f8:	ff 4f       	sbci	r31, 0xFF	; 255
    48fa:	60 81       	ld	r22, Z
    48fc:	71 81       	ldd	r23, Z+1	; 0x01
    48fe:	82 81       	ldd	r24, Z+2	; 0x02
    4900:	93 81       	ldd	r25, Z+3	; 0x03
    4902:	20 e0       	ldi	r18, 0x00	; 0
    4904:	30 e0       	ldi	r19, 0x00	; 0
    4906:	4a e7       	ldi	r20, 0x7A	; 122
    4908:	53 e4       	ldi	r21, 0x43	; 67
    490a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    490e:	dc 01       	movw	r26, r24
    4910:	cb 01       	movw	r24, r22
    4912:	f8 01       	movw	r30, r16
    4914:	80 83       	st	Z, r24
    4916:	91 83       	std	Z+1, r25	; 0x01
    4918:	a2 83       	std	Z+2, r26	; 0x02
    491a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    491c:	fe 01       	movw	r30, r28
    491e:	eb 57       	subi	r30, 0x7B	; 123
    4920:	ff 4f       	sbci	r31, 0xFF	; 255
    4922:	60 81       	ld	r22, Z
    4924:	71 81       	ldd	r23, Z+1	; 0x01
    4926:	82 81       	ldd	r24, Z+2	; 0x02
    4928:	93 81       	ldd	r25, Z+3	; 0x03
    492a:	20 e0       	ldi	r18, 0x00	; 0
    492c:	30 e0       	ldi	r19, 0x00	; 0
    492e:	40 e8       	ldi	r20, 0x80	; 128
    4930:	5f e3       	ldi	r21, 0x3F	; 63
    4932:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4936:	88 23       	and	r24, r24
    4938:	44 f4       	brge	.+16     	; 0x494a <main+0x300c>
		__ticks = 1;
    493a:	fe 01       	movw	r30, r28
    493c:	ed 57       	subi	r30, 0x7D	; 125
    493e:	ff 4f       	sbci	r31, 0xFF	; 255
    4940:	81 e0       	ldi	r24, 0x01	; 1
    4942:	90 e0       	ldi	r25, 0x00	; 0
    4944:	91 83       	std	Z+1, r25	; 0x01
    4946:	80 83       	st	Z, r24
    4948:	64 c0       	rjmp	.+200    	; 0x4a12 <main+0x30d4>
	else if (__tmp > 65535)
    494a:	fe 01       	movw	r30, r28
    494c:	eb 57       	subi	r30, 0x7B	; 123
    494e:	ff 4f       	sbci	r31, 0xFF	; 255
    4950:	60 81       	ld	r22, Z
    4952:	71 81       	ldd	r23, Z+1	; 0x01
    4954:	82 81       	ldd	r24, Z+2	; 0x02
    4956:	93 81       	ldd	r25, Z+3	; 0x03
    4958:	20 e0       	ldi	r18, 0x00	; 0
    495a:	3f ef       	ldi	r19, 0xFF	; 255
    495c:	4f e7       	ldi	r20, 0x7F	; 127
    495e:	57 e4       	ldi	r21, 0x47	; 71
    4960:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4964:	18 16       	cp	r1, r24
    4966:	0c f0       	brlt	.+2      	; 0x496a <main+0x302c>
    4968:	43 c0       	rjmp	.+134    	; 0x49f0 <main+0x30b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    496a:	fe 01       	movw	r30, r28
    496c:	e7 57       	subi	r30, 0x77	; 119
    496e:	ff 4f       	sbci	r31, 0xFF	; 255
    4970:	60 81       	ld	r22, Z
    4972:	71 81       	ldd	r23, Z+1	; 0x01
    4974:	82 81       	ldd	r24, Z+2	; 0x02
    4976:	93 81       	ldd	r25, Z+3	; 0x03
    4978:	20 e0       	ldi	r18, 0x00	; 0
    497a:	30 e0       	ldi	r19, 0x00	; 0
    497c:	40 e2       	ldi	r20, 0x20	; 32
    497e:	51 e4       	ldi	r21, 0x41	; 65
    4980:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4984:	dc 01       	movw	r26, r24
    4986:	cb 01       	movw	r24, r22
    4988:	8e 01       	movw	r16, r28
    498a:	0d 57       	subi	r16, 0x7D	; 125
    498c:	1f 4f       	sbci	r17, 0xFF	; 255
    498e:	bc 01       	movw	r22, r24
    4990:	cd 01       	movw	r24, r26
    4992:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4996:	dc 01       	movw	r26, r24
    4998:	cb 01       	movw	r24, r22
    499a:	f8 01       	movw	r30, r16
    499c:	91 83       	std	Z+1, r25	; 0x01
    499e:	80 83       	st	Z, r24
    49a0:	1f c0       	rjmp	.+62     	; 0x49e0 <main+0x30a2>
    49a2:	fe 01       	movw	r30, r28
    49a4:	ef 57       	subi	r30, 0x7F	; 127
    49a6:	ff 4f       	sbci	r31, 0xFF	; 255
    49a8:	89 e1       	ldi	r24, 0x19	; 25
    49aa:	90 e0       	ldi	r25, 0x00	; 0
    49ac:	91 83       	std	Z+1, r25	; 0x01
    49ae:	80 83       	st	Z, r24
    49b0:	fe 01       	movw	r30, r28
    49b2:	ef 57       	subi	r30, 0x7F	; 127
    49b4:	ff 4f       	sbci	r31, 0xFF	; 255
    49b6:	80 81       	ld	r24, Z
    49b8:	91 81       	ldd	r25, Z+1	; 0x01
    49ba:	01 97       	sbiw	r24, 0x01	; 1
    49bc:	f1 f7       	brne	.-4      	; 0x49ba <main+0x307c>
    49be:	fe 01       	movw	r30, r28
    49c0:	ef 57       	subi	r30, 0x7F	; 127
    49c2:	ff 4f       	sbci	r31, 0xFF	; 255
    49c4:	91 83       	std	Z+1, r25	; 0x01
    49c6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    49c8:	de 01       	movw	r26, r28
    49ca:	ad 57       	subi	r26, 0x7D	; 125
    49cc:	bf 4f       	sbci	r27, 0xFF	; 255
    49ce:	fe 01       	movw	r30, r28
    49d0:	ed 57       	subi	r30, 0x7D	; 125
    49d2:	ff 4f       	sbci	r31, 0xFF	; 255
    49d4:	80 81       	ld	r24, Z
    49d6:	91 81       	ldd	r25, Z+1	; 0x01
    49d8:	01 97       	sbiw	r24, 0x01	; 1
    49da:	11 96       	adiw	r26, 0x01	; 1
    49dc:	9c 93       	st	X, r25
    49de:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    49e0:	fe 01       	movw	r30, r28
    49e2:	ed 57       	subi	r30, 0x7D	; 125
    49e4:	ff 4f       	sbci	r31, 0xFF	; 255
    49e6:	80 81       	ld	r24, Z
    49e8:	91 81       	ldd	r25, Z+1	; 0x01
    49ea:	00 97       	sbiw	r24, 0x00	; 0
    49ec:	d1 f6       	brne	.-76     	; 0x49a2 <main+0x3064>
    49ee:	27 c0       	rjmp	.+78     	; 0x4a3e <main+0x3100>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49f0:	8e 01       	movw	r16, r28
    49f2:	0d 57       	subi	r16, 0x7D	; 125
    49f4:	1f 4f       	sbci	r17, 0xFF	; 255
    49f6:	fe 01       	movw	r30, r28
    49f8:	eb 57       	subi	r30, 0x7B	; 123
    49fa:	ff 4f       	sbci	r31, 0xFF	; 255
    49fc:	60 81       	ld	r22, Z
    49fe:	71 81       	ldd	r23, Z+1	; 0x01
    4a00:	82 81       	ldd	r24, Z+2	; 0x02
    4a02:	93 81       	ldd	r25, Z+3	; 0x03
    4a04:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a08:	dc 01       	movw	r26, r24
    4a0a:	cb 01       	movw	r24, r22
    4a0c:	f8 01       	movw	r30, r16
    4a0e:	91 83       	std	Z+1, r25	; 0x01
    4a10:	80 83       	st	Z, r24
    4a12:	de 01       	movw	r26, r28
    4a14:	a1 58       	subi	r26, 0x81	; 129
    4a16:	bf 4f       	sbci	r27, 0xFF	; 255
    4a18:	fe 01       	movw	r30, r28
    4a1a:	ed 57       	subi	r30, 0x7D	; 125
    4a1c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a1e:	80 81       	ld	r24, Z
    4a20:	91 81       	ldd	r25, Z+1	; 0x01
    4a22:	8d 93       	st	X+, r24
    4a24:	9c 93       	st	X, r25
    4a26:	fe 01       	movw	r30, r28
    4a28:	e1 58       	subi	r30, 0x81	; 129
    4a2a:	ff 4f       	sbci	r31, 0xFF	; 255
    4a2c:	80 81       	ld	r24, Z
    4a2e:	91 81       	ldd	r25, Z+1	; 0x01
    4a30:	01 97       	sbiw	r24, 0x01	; 1
    4a32:	f1 f7       	brne	.-4      	; 0x4a30 <main+0x30f2>
    4a34:	fe 01       	movw	r30, r28
    4a36:	e1 58       	subi	r30, 0x81	; 129
    4a38:	ff 4f       	sbci	r31, 0xFF	; 255
    4a3a:	91 83       	std	Z+1, r25	; 0x01
    4a3c:	80 83       	st	Z, r24
			_delay_ms(10);
			EEPROM_writeByte(0x8,s8);
    4a3e:	fe 01       	movw	r30, r28
    4a40:	e2 5b       	subi	r30, 0xB2	; 178
    4a42:	fd 4f       	sbci	r31, 0xFD	; 253
    4a44:	80 81       	ld	r24, Z
    4a46:	28 2f       	mov	r18, r24
    4a48:	30 e0       	ldi	r19, 0x00	; 0
    4a4a:	88 e0       	ldi	r24, 0x08	; 8
    4a4c:	90 e0       	ldi	r25, 0x00	; 0
    4a4e:	b9 01       	movw	r22, r18
    4a50:	0e 94 a4 05 	call	0xb48	; 0xb48 <EEPROM_writeByte>
    4a54:	fe 01       	movw	r30, r28
    4a56:	e5 58       	subi	r30, 0x85	; 133
    4a58:	ff 4f       	sbci	r31, 0xFF	; 255
    4a5a:	80 e0       	ldi	r24, 0x00	; 0
    4a5c:	90 e0       	ldi	r25, 0x00	; 0
    4a5e:	a0 e2       	ldi	r26, 0x20	; 32
    4a60:	b1 e4       	ldi	r27, 0x41	; 65
    4a62:	80 83       	st	Z, r24
    4a64:	91 83       	std	Z+1, r25	; 0x01
    4a66:	a2 83       	std	Z+2, r26	; 0x02
    4a68:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4a6a:	8e 01       	movw	r16, r28
    4a6c:	09 58       	subi	r16, 0x89	; 137
    4a6e:	1f 4f       	sbci	r17, 0xFF	; 255
    4a70:	fe 01       	movw	r30, r28
    4a72:	e5 58       	subi	r30, 0x85	; 133
    4a74:	ff 4f       	sbci	r31, 0xFF	; 255
    4a76:	60 81       	ld	r22, Z
    4a78:	71 81       	ldd	r23, Z+1	; 0x01
    4a7a:	82 81       	ldd	r24, Z+2	; 0x02
    4a7c:	93 81       	ldd	r25, Z+3	; 0x03
    4a7e:	20 e0       	ldi	r18, 0x00	; 0
    4a80:	30 e0       	ldi	r19, 0x00	; 0
    4a82:	4a e7       	ldi	r20, 0x7A	; 122
    4a84:	53 e4       	ldi	r21, 0x43	; 67
    4a86:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4a8a:	dc 01       	movw	r26, r24
    4a8c:	cb 01       	movw	r24, r22
    4a8e:	f8 01       	movw	r30, r16
    4a90:	80 83       	st	Z, r24
    4a92:	91 83       	std	Z+1, r25	; 0x01
    4a94:	a2 83       	std	Z+2, r26	; 0x02
    4a96:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4a98:	fe 01       	movw	r30, r28
    4a9a:	e9 58       	subi	r30, 0x89	; 137
    4a9c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a9e:	60 81       	ld	r22, Z
    4aa0:	71 81       	ldd	r23, Z+1	; 0x01
    4aa2:	82 81       	ldd	r24, Z+2	; 0x02
    4aa4:	93 81       	ldd	r25, Z+3	; 0x03
    4aa6:	20 e0       	ldi	r18, 0x00	; 0
    4aa8:	30 e0       	ldi	r19, 0x00	; 0
    4aaa:	40 e8       	ldi	r20, 0x80	; 128
    4aac:	5f e3       	ldi	r21, 0x3F	; 63
    4aae:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4ab2:	88 23       	and	r24, r24
    4ab4:	44 f4       	brge	.+16     	; 0x4ac6 <main+0x3188>
		__ticks = 1;
    4ab6:	fe 01       	movw	r30, r28
    4ab8:	eb 58       	subi	r30, 0x8B	; 139
    4aba:	ff 4f       	sbci	r31, 0xFF	; 255
    4abc:	81 e0       	ldi	r24, 0x01	; 1
    4abe:	90 e0       	ldi	r25, 0x00	; 0
    4ac0:	91 83       	std	Z+1, r25	; 0x01
    4ac2:	80 83       	st	Z, r24
    4ac4:	64 c0       	rjmp	.+200    	; 0x4b8e <main+0x3250>
	else if (__tmp > 65535)
    4ac6:	fe 01       	movw	r30, r28
    4ac8:	e9 58       	subi	r30, 0x89	; 137
    4aca:	ff 4f       	sbci	r31, 0xFF	; 255
    4acc:	60 81       	ld	r22, Z
    4ace:	71 81       	ldd	r23, Z+1	; 0x01
    4ad0:	82 81       	ldd	r24, Z+2	; 0x02
    4ad2:	93 81       	ldd	r25, Z+3	; 0x03
    4ad4:	20 e0       	ldi	r18, 0x00	; 0
    4ad6:	3f ef       	ldi	r19, 0xFF	; 255
    4ad8:	4f e7       	ldi	r20, 0x7F	; 127
    4ada:	57 e4       	ldi	r21, 0x47	; 71
    4adc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4ae0:	18 16       	cp	r1, r24
    4ae2:	0c f0       	brlt	.+2      	; 0x4ae6 <main+0x31a8>
    4ae4:	43 c0       	rjmp	.+134    	; 0x4b6c <main+0x322e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4ae6:	fe 01       	movw	r30, r28
    4ae8:	e5 58       	subi	r30, 0x85	; 133
    4aea:	ff 4f       	sbci	r31, 0xFF	; 255
    4aec:	60 81       	ld	r22, Z
    4aee:	71 81       	ldd	r23, Z+1	; 0x01
    4af0:	82 81       	ldd	r24, Z+2	; 0x02
    4af2:	93 81       	ldd	r25, Z+3	; 0x03
    4af4:	20 e0       	ldi	r18, 0x00	; 0
    4af6:	30 e0       	ldi	r19, 0x00	; 0
    4af8:	40 e2       	ldi	r20, 0x20	; 32
    4afa:	51 e4       	ldi	r21, 0x41	; 65
    4afc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4b00:	dc 01       	movw	r26, r24
    4b02:	cb 01       	movw	r24, r22
    4b04:	8e 01       	movw	r16, r28
    4b06:	0b 58       	subi	r16, 0x8B	; 139
    4b08:	1f 4f       	sbci	r17, 0xFF	; 255
    4b0a:	bc 01       	movw	r22, r24
    4b0c:	cd 01       	movw	r24, r26
    4b0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4b12:	dc 01       	movw	r26, r24
    4b14:	cb 01       	movw	r24, r22
    4b16:	f8 01       	movw	r30, r16
    4b18:	91 83       	std	Z+1, r25	; 0x01
    4b1a:	80 83       	st	Z, r24
    4b1c:	1f c0       	rjmp	.+62     	; 0x4b5c <main+0x321e>
    4b1e:	fe 01       	movw	r30, r28
    4b20:	ed 58       	subi	r30, 0x8D	; 141
    4b22:	ff 4f       	sbci	r31, 0xFF	; 255
    4b24:	89 e1       	ldi	r24, 0x19	; 25
    4b26:	90 e0       	ldi	r25, 0x00	; 0
    4b28:	91 83       	std	Z+1, r25	; 0x01
    4b2a:	80 83       	st	Z, r24
    4b2c:	fe 01       	movw	r30, r28
    4b2e:	ed 58       	subi	r30, 0x8D	; 141
    4b30:	ff 4f       	sbci	r31, 0xFF	; 255
    4b32:	80 81       	ld	r24, Z
    4b34:	91 81       	ldd	r25, Z+1	; 0x01
    4b36:	01 97       	sbiw	r24, 0x01	; 1
    4b38:	f1 f7       	brne	.-4      	; 0x4b36 <main+0x31f8>
    4b3a:	fe 01       	movw	r30, r28
    4b3c:	ed 58       	subi	r30, 0x8D	; 141
    4b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    4b40:	91 83       	std	Z+1, r25	; 0x01
    4b42:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b44:	de 01       	movw	r26, r28
    4b46:	ab 58       	subi	r26, 0x8B	; 139
    4b48:	bf 4f       	sbci	r27, 0xFF	; 255
    4b4a:	fe 01       	movw	r30, r28
    4b4c:	eb 58       	subi	r30, 0x8B	; 139
    4b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    4b50:	80 81       	ld	r24, Z
    4b52:	91 81       	ldd	r25, Z+1	; 0x01
    4b54:	01 97       	sbiw	r24, 0x01	; 1
    4b56:	11 96       	adiw	r26, 0x01	; 1
    4b58:	9c 93       	st	X, r25
    4b5a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b5c:	fe 01       	movw	r30, r28
    4b5e:	eb 58       	subi	r30, 0x8B	; 139
    4b60:	ff 4f       	sbci	r31, 0xFF	; 255
    4b62:	80 81       	ld	r24, Z
    4b64:	91 81       	ldd	r25, Z+1	; 0x01
    4b66:	00 97       	sbiw	r24, 0x00	; 0
    4b68:	d1 f6       	brne	.-76     	; 0x4b1e <main+0x31e0>
    4b6a:	27 c0       	rjmp	.+78     	; 0x4bba <main+0x327c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b6c:	8e 01       	movw	r16, r28
    4b6e:	0b 58       	subi	r16, 0x8B	; 139
    4b70:	1f 4f       	sbci	r17, 0xFF	; 255
    4b72:	fe 01       	movw	r30, r28
    4b74:	e9 58       	subi	r30, 0x89	; 137
    4b76:	ff 4f       	sbci	r31, 0xFF	; 255
    4b78:	60 81       	ld	r22, Z
    4b7a:	71 81       	ldd	r23, Z+1	; 0x01
    4b7c:	82 81       	ldd	r24, Z+2	; 0x02
    4b7e:	93 81       	ldd	r25, Z+3	; 0x03
    4b80:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4b84:	dc 01       	movw	r26, r24
    4b86:	cb 01       	movw	r24, r22
    4b88:	f8 01       	movw	r30, r16
    4b8a:	91 83       	std	Z+1, r25	; 0x01
    4b8c:	80 83       	st	Z, r24
    4b8e:	de 01       	movw	r26, r28
    4b90:	af 58       	subi	r26, 0x8F	; 143
    4b92:	bf 4f       	sbci	r27, 0xFF	; 255
    4b94:	fe 01       	movw	r30, r28
    4b96:	eb 58       	subi	r30, 0x8B	; 139
    4b98:	ff 4f       	sbci	r31, 0xFF	; 255
    4b9a:	80 81       	ld	r24, Z
    4b9c:	91 81       	ldd	r25, Z+1	; 0x01
    4b9e:	8d 93       	st	X+, r24
    4ba0:	9c 93       	st	X, r25
    4ba2:	fe 01       	movw	r30, r28
    4ba4:	ef 58       	subi	r30, 0x8F	; 143
    4ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ba8:	80 81       	ld	r24, Z
    4baa:	91 81       	ldd	r25, Z+1	; 0x01
    4bac:	01 97       	sbiw	r24, 0x01	; 1
    4bae:	f1 f7       	brne	.-4      	; 0x4bac <main+0x326e>
    4bb0:	fe 01       	movw	r30, r28
    4bb2:	ef 58       	subi	r30, 0x8F	; 143
    4bb4:	ff 4f       	sbci	r31, 0xFF	; 255
    4bb6:	91 83       	std	Z+1, r25	; 0x01
    4bb8:	80 83       	st	Z, r24

		    /******************************************/
			/****read the last password from EEPROM****/
			/******************************************/

			    EEPROM_readByte(0x01,&x1);
    4bba:	9e 01       	movw	r18, r28
    4bbc:	2a 5a       	subi	r18, 0xAA	; 170
    4bbe:	3d 4f       	sbci	r19, 0xFD	; 253
    4bc0:	81 e0       	ldi	r24, 0x01	; 1
    4bc2:	90 e0       	ldi	r25, 0x00	; 0
    4bc4:	b9 01       	movw	r22, r18
    4bc6:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    4bca:	fe 01       	movw	r30, r28
    4bcc:	e3 59       	subi	r30, 0x93	; 147
    4bce:	ff 4f       	sbci	r31, 0xFF	; 255
    4bd0:	80 e0       	ldi	r24, 0x00	; 0
    4bd2:	90 e0       	ldi	r25, 0x00	; 0
    4bd4:	a0 e2       	ldi	r26, 0x20	; 32
    4bd6:	b1 e4       	ldi	r27, 0x41	; 65
    4bd8:	80 83       	st	Z, r24
    4bda:	91 83       	std	Z+1, r25	; 0x01
    4bdc:	a2 83       	std	Z+2, r26	; 0x02
    4bde:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4be0:	8e 01       	movw	r16, r28
    4be2:	07 59       	subi	r16, 0x97	; 151
    4be4:	1f 4f       	sbci	r17, 0xFF	; 255
    4be6:	fe 01       	movw	r30, r28
    4be8:	e3 59       	subi	r30, 0x93	; 147
    4bea:	ff 4f       	sbci	r31, 0xFF	; 255
    4bec:	60 81       	ld	r22, Z
    4bee:	71 81       	ldd	r23, Z+1	; 0x01
    4bf0:	82 81       	ldd	r24, Z+2	; 0x02
    4bf2:	93 81       	ldd	r25, Z+3	; 0x03
    4bf4:	20 e0       	ldi	r18, 0x00	; 0
    4bf6:	30 e0       	ldi	r19, 0x00	; 0
    4bf8:	4a e7       	ldi	r20, 0x7A	; 122
    4bfa:	53 e4       	ldi	r21, 0x43	; 67
    4bfc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4c00:	dc 01       	movw	r26, r24
    4c02:	cb 01       	movw	r24, r22
    4c04:	f8 01       	movw	r30, r16
    4c06:	80 83       	st	Z, r24
    4c08:	91 83       	std	Z+1, r25	; 0x01
    4c0a:	a2 83       	std	Z+2, r26	; 0x02
    4c0c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4c0e:	fe 01       	movw	r30, r28
    4c10:	e7 59       	subi	r30, 0x97	; 151
    4c12:	ff 4f       	sbci	r31, 0xFF	; 255
    4c14:	60 81       	ld	r22, Z
    4c16:	71 81       	ldd	r23, Z+1	; 0x01
    4c18:	82 81       	ldd	r24, Z+2	; 0x02
    4c1a:	93 81       	ldd	r25, Z+3	; 0x03
    4c1c:	20 e0       	ldi	r18, 0x00	; 0
    4c1e:	30 e0       	ldi	r19, 0x00	; 0
    4c20:	40 e8       	ldi	r20, 0x80	; 128
    4c22:	5f e3       	ldi	r21, 0x3F	; 63
    4c24:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4c28:	88 23       	and	r24, r24
    4c2a:	44 f4       	brge	.+16     	; 0x4c3c <main+0x32fe>
		__ticks = 1;
    4c2c:	fe 01       	movw	r30, r28
    4c2e:	e9 59       	subi	r30, 0x99	; 153
    4c30:	ff 4f       	sbci	r31, 0xFF	; 255
    4c32:	81 e0       	ldi	r24, 0x01	; 1
    4c34:	90 e0       	ldi	r25, 0x00	; 0
    4c36:	91 83       	std	Z+1, r25	; 0x01
    4c38:	80 83       	st	Z, r24
    4c3a:	64 c0       	rjmp	.+200    	; 0x4d04 <main+0x33c6>
	else if (__tmp > 65535)
    4c3c:	fe 01       	movw	r30, r28
    4c3e:	e7 59       	subi	r30, 0x97	; 151
    4c40:	ff 4f       	sbci	r31, 0xFF	; 255
    4c42:	60 81       	ld	r22, Z
    4c44:	71 81       	ldd	r23, Z+1	; 0x01
    4c46:	82 81       	ldd	r24, Z+2	; 0x02
    4c48:	93 81       	ldd	r25, Z+3	; 0x03
    4c4a:	20 e0       	ldi	r18, 0x00	; 0
    4c4c:	3f ef       	ldi	r19, 0xFF	; 255
    4c4e:	4f e7       	ldi	r20, 0x7F	; 127
    4c50:	57 e4       	ldi	r21, 0x47	; 71
    4c52:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4c56:	18 16       	cp	r1, r24
    4c58:	0c f0       	brlt	.+2      	; 0x4c5c <main+0x331e>
    4c5a:	43 c0       	rjmp	.+134    	; 0x4ce2 <main+0x33a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4c5c:	fe 01       	movw	r30, r28
    4c5e:	e3 59       	subi	r30, 0x93	; 147
    4c60:	ff 4f       	sbci	r31, 0xFF	; 255
    4c62:	60 81       	ld	r22, Z
    4c64:	71 81       	ldd	r23, Z+1	; 0x01
    4c66:	82 81       	ldd	r24, Z+2	; 0x02
    4c68:	93 81       	ldd	r25, Z+3	; 0x03
    4c6a:	20 e0       	ldi	r18, 0x00	; 0
    4c6c:	30 e0       	ldi	r19, 0x00	; 0
    4c6e:	40 e2       	ldi	r20, 0x20	; 32
    4c70:	51 e4       	ldi	r21, 0x41	; 65
    4c72:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4c76:	dc 01       	movw	r26, r24
    4c78:	cb 01       	movw	r24, r22
    4c7a:	8e 01       	movw	r16, r28
    4c7c:	09 59       	subi	r16, 0x99	; 153
    4c7e:	1f 4f       	sbci	r17, 0xFF	; 255
    4c80:	bc 01       	movw	r22, r24
    4c82:	cd 01       	movw	r24, r26
    4c84:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4c88:	dc 01       	movw	r26, r24
    4c8a:	cb 01       	movw	r24, r22
    4c8c:	f8 01       	movw	r30, r16
    4c8e:	91 83       	std	Z+1, r25	; 0x01
    4c90:	80 83       	st	Z, r24
    4c92:	1f c0       	rjmp	.+62     	; 0x4cd2 <main+0x3394>
    4c94:	fe 01       	movw	r30, r28
    4c96:	eb 59       	subi	r30, 0x9B	; 155
    4c98:	ff 4f       	sbci	r31, 0xFF	; 255
    4c9a:	89 e1       	ldi	r24, 0x19	; 25
    4c9c:	90 e0       	ldi	r25, 0x00	; 0
    4c9e:	91 83       	std	Z+1, r25	; 0x01
    4ca0:	80 83       	st	Z, r24
    4ca2:	fe 01       	movw	r30, r28
    4ca4:	eb 59       	subi	r30, 0x9B	; 155
    4ca6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ca8:	80 81       	ld	r24, Z
    4caa:	91 81       	ldd	r25, Z+1	; 0x01
    4cac:	01 97       	sbiw	r24, 0x01	; 1
    4cae:	f1 f7       	brne	.-4      	; 0x4cac <main+0x336e>
    4cb0:	fe 01       	movw	r30, r28
    4cb2:	eb 59       	subi	r30, 0x9B	; 155
    4cb4:	ff 4f       	sbci	r31, 0xFF	; 255
    4cb6:	91 83       	std	Z+1, r25	; 0x01
    4cb8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4cba:	de 01       	movw	r26, r28
    4cbc:	a9 59       	subi	r26, 0x99	; 153
    4cbe:	bf 4f       	sbci	r27, 0xFF	; 255
    4cc0:	fe 01       	movw	r30, r28
    4cc2:	e9 59       	subi	r30, 0x99	; 153
    4cc4:	ff 4f       	sbci	r31, 0xFF	; 255
    4cc6:	80 81       	ld	r24, Z
    4cc8:	91 81       	ldd	r25, Z+1	; 0x01
    4cca:	01 97       	sbiw	r24, 0x01	; 1
    4ccc:	11 96       	adiw	r26, 0x01	; 1
    4cce:	9c 93       	st	X, r25
    4cd0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4cd2:	fe 01       	movw	r30, r28
    4cd4:	e9 59       	subi	r30, 0x99	; 153
    4cd6:	ff 4f       	sbci	r31, 0xFF	; 255
    4cd8:	80 81       	ld	r24, Z
    4cda:	91 81       	ldd	r25, Z+1	; 0x01
    4cdc:	00 97       	sbiw	r24, 0x00	; 0
    4cde:	d1 f6       	brne	.-76     	; 0x4c94 <main+0x3356>
    4ce0:	27 c0       	rjmp	.+78     	; 0x4d30 <main+0x33f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ce2:	8e 01       	movw	r16, r28
    4ce4:	09 59       	subi	r16, 0x99	; 153
    4ce6:	1f 4f       	sbci	r17, 0xFF	; 255
    4ce8:	fe 01       	movw	r30, r28
    4cea:	e7 59       	subi	r30, 0x97	; 151
    4cec:	ff 4f       	sbci	r31, 0xFF	; 255
    4cee:	60 81       	ld	r22, Z
    4cf0:	71 81       	ldd	r23, Z+1	; 0x01
    4cf2:	82 81       	ldd	r24, Z+2	; 0x02
    4cf4:	93 81       	ldd	r25, Z+3	; 0x03
    4cf6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4cfa:	dc 01       	movw	r26, r24
    4cfc:	cb 01       	movw	r24, r22
    4cfe:	f8 01       	movw	r30, r16
    4d00:	91 83       	std	Z+1, r25	; 0x01
    4d02:	80 83       	st	Z, r24
    4d04:	de 01       	movw	r26, r28
    4d06:	ad 59       	subi	r26, 0x9D	; 157
    4d08:	bf 4f       	sbci	r27, 0xFF	; 255
    4d0a:	fe 01       	movw	r30, r28
    4d0c:	e9 59       	subi	r30, 0x99	; 153
    4d0e:	ff 4f       	sbci	r31, 0xFF	; 255
    4d10:	80 81       	ld	r24, Z
    4d12:	91 81       	ldd	r25, Z+1	; 0x01
    4d14:	8d 93       	st	X+, r24
    4d16:	9c 93       	st	X, r25
    4d18:	fe 01       	movw	r30, r28
    4d1a:	ed 59       	subi	r30, 0x9D	; 157
    4d1c:	ff 4f       	sbci	r31, 0xFF	; 255
    4d1e:	80 81       	ld	r24, Z
    4d20:	91 81       	ldd	r25, Z+1	; 0x01
    4d22:	01 97       	sbiw	r24, 0x01	; 1
    4d24:	f1 f7       	brne	.-4      	; 0x4d22 <main+0x33e4>
    4d26:	fe 01       	movw	r30, r28
    4d28:	ed 59       	subi	r30, 0x9D	; 157
    4d2a:	ff 4f       	sbci	r31, 0xFF	; 255
    4d2c:	91 83       	std	Z+1, r25	; 0x01
    4d2e:	80 83       	st	Z, r24
			    _delay_ms(10);
			    EEPROM_readByte(0x02,&x2);
    4d30:	9e 01       	movw	r18, r28
    4d32:	29 5a       	subi	r18, 0xA9	; 169
    4d34:	3d 4f       	sbci	r19, 0xFD	; 253
    4d36:	82 e0       	ldi	r24, 0x02	; 2
    4d38:	90 e0       	ldi	r25, 0x00	; 0
    4d3a:	b9 01       	movw	r22, r18
    4d3c:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    4d40:	fe 01       	movw	r30, r28
    4d42:	e1 5a       	subi	r30, 0xA1	; 161
    4d44:	ff 4f       	sbci	r31, 0xFF	; 255
    4d46:	80 e0       	ldi	r24, 0x00	; 0
    4d48:	90 e0       	ldi	r25, 0x00	; 0
    4d4a:	a0 e2       	ldi	r26, 0x20	; 32
    4d4c:	b1 e4       	ldi	r27, 0x41	; 65
    4d4e:	80 83       	st	Z, r24
    4d50:	91 83       	std	Z+1, r25	; 0x01
    4d52:	a2 83       	std	Z+2, r26	; 0x02
    4d54:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4d56:	8e 01       	movw	r16, r28
    4d58:	05 5a       	subi	r16, 0xA5	; 165
    4d5a:	1f 4f       	sbci	r17, 0xFF	; 255
    4d5c:	fe 01       	movw	r30, r28
    4d5e:	e1 5a       	subi	r30, 0xA1	; 161
    4d60:	ff 4f       	sbci	r31, 0xFF	; 255
    4d62:	60 81       	ld	r22, Z
    4d64:	71 81       	ldd	r23, Z+1	; 0x01
    4d66:	82 81       	ldd	r24, Z+2	; 0x02
    4d68:	93 81       	ldd	r25, Z+3	; 0x03
    4d6a:	20 e0       	ldi	r18, 0x00	; 0
    4d6c:	30 e0       	ldi	r19, 0x00	; 0
    4d6e:	4a e7       	ldi	r20, 0x7A	; 122
    4d70:	53 e4       	ldi	r21, 0x43	; 67
    4d72:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4d76:	dc 01       	movw	r26, r24
    4d78:	cb 01       	movw	r24, r22
    4d7a:	f8 01       	movw	r30, r16
    4d7c:	80 83       	st	Z, r24
    4d7e:	91 83       	std	Z+1, r25	; 0x01
    4d80:	a2 83       	std	Z+2, r26	; 0x02
    4d82:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4d84:	fe 01       	movw	r30, r28
    4d86:	e5 5a       	subi	r30, 0xA5	; 165
    4d88:	ff 4f       	sbci	r31, 0xFF	; 255
    4d8a:	60 81       	ld	r22, Z
    4d8c:	71 81       	ldd	r23, Z+1	; 0x01
    4d8e:	82 81       	ldd	r24, Z+2	; 0x02
    4d90:	93 81       	ldd	r25, Z+3	; 0x03
    4d92:	20 e0       	ldi	r18, 0x00	; 0
    4d94:	30 e0       	ldi	r19, 0x00	; 0
    4d96:	40 e8       	ldi	r20, 0x80	; 128
    4d98:	5f e3       	ldi	r21, 0x3F	; 63
    4d9a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4d9e:	88 23       	and	r24, r24
    4da0:	44 f4       	brge	.+16     	; 0x4db2 <main+0x3474>
		__ticks = 1;
    4da2:	fe 01       	movw	r30, r28
    4da4:	e7 5a       	subi	r30, 0xA7	; 167
    4da6:	ff 4f       	sbci	r31, 0xFF	; 255
    4da8:	81 e0       	ldi	r24, 0x01	; 1
    4daa:	90 e0       	ldi	r25, 0x00	; 0
    4dac:	91 83       	std	Z+1, r25	; 0x01
    4dae:	80 83       	st	Z, r24
    4db0:	64 c0       	rjmp	.+200    	; 0x4e7a <main+0x353c>
	else if (__tmp > 65535)
    4db2:	fe 01       	movw	r30, r28
    4db4:	e5 5a       	subi	r30, 0xA5	; 165
    4db6:	ff 4f       	sbci	r31, 0xFF	; 255
    4db8:	60 81       	ld	r22, Z
    4dba:	71 81       	ldd	r23, Z+1	; 0x01
    4dbc:	82 81       	ldd	r24, Z+2	; 0x02
    4dbe:	93 81       	ldd	r25, Z+3	; 0x03
    4dc0:	20 e0       	ldi	r18, 0x00	; 0
    4dc2:	3f ef       	ldi	r19, 0xFF	; 255
    4dc4:	4f e7       	ldi	r20, 0x7F	; 127
    4dc6:	57 e4       	ldi	r21, 0x47	; 71
    4dc8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4dcc:	18 16       	cp	r1, r24
    4dce:	0c f0       	brlt	.+2      	; 0x4dd2 <main+0x3494>
    4dd0:	43 c0       	rjmp	.+134    	; 0x4e58 <main+0x351a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4dd2:	fe 01       	movw	r30, r28
    4dd4:	e1 5a       	subi	r30, 0xA1	; 161
    4dd6:	ff 4f       	sbci	r31, 0xFF	; 255
    4dd8:	60 81       	ld	r22, Z
    4dda:	71 81       	ldd	r23, Z+1	; 0x01
    4ddc:	82 81       	ldd	r24, Z+2	; 0x02
    4dde:	93 81       	ldd	r25, Z+3	; 0x03
    4de0:	20 e0       	ldi	r18, 0x00	; 0
    4de2:	30 e0       	ldi	r19, 0x00	; 0
    4de4:	40 e2       	ldi	r20, 0x20	; 32
    4de6:	51 e4       	ldi	r21, 0x41	; 65
    4de8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4dec:	dc 01       	movw	r26, r24
    4dee:	cb 01       	movw	r24, r22
    4df0:	8e 01       	movw	r16, r28
    4df2:	07 5a       	subi	r16, 0xA7	; 167
    4df4:	1f 4f       	sbci	r17, 0xFF	; 255
    4df6:	bc 01       	movw	r22, r24
    4df8:	cd 01       	movw	r24, r26
    4dfa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4dfe:	dc 01       	movw	r26, r24
    4e00:	cb 01       	movw	r24, r22
    4e02:	f8 01       	movw	r30, r16
    4e04:	91 83       	std	Z+1, r25	; 0x01
    4e06:	80 83       	st	Z, r24
    4e08:	1f c0       	rjmp	.+62     	; 0x4e48 <main+0x350a>
    4e0a:	fe 01       	movw	r30, r28
    4e0c:	e9 5a       	subi	r30, 0xA9	; 169
    4e0e:	ff 4f       	sbci	r31, 0xFF	; 255
    4e10:	89 e1       	ldi	r24, 0x19	; 25
    4e12:	90 e0       	ldi	r25, 0x00	; 0
    4e14:	91 83       	std	Z+1, r25	; 0x01
    4e16:	80 83       	st	Z, r24
    4e18:	fe 01       	movw	r30, r28
    4e1a:	e9 5a       	subi	r30, 0xA9	; 169
    4e1c:	ff 4f       	sbci	r31, 0xFF	; 255
    4e1e:	80 81       	ld	r24, Z
    4e20:	91 81       	ldd	r25, Z+1	; 0x01
    4e22:	01 97       	sbiw	r24, 0x01	; 1
    4e24:	f1 f7       	brne	.-4      	; 0x4e22 <main+0x34e4>
    4e26:	fe 01       	movw	r30, r28
    4e28:	e9 5a       	subi	r30, 0xA9	; 169
    4e2a:	ff 4f       	sbci	r31, 0xFF	; 255
    4e2c:	91 83       	std	Z+1, r25	; 0x01
    4e2e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e30:	de 01       	movw	r26, r28
    4e32:	a7 5a       	subi	r26, 0xA7	; 167
    4e34:	bf 4f       	sbci	r27, 0xFF	; 255
    4e36:	fe 01       	movw	r30, r28
    4e38:	e7 5a       	subi	r30, 0xA7	; 167
    4e3a:	ff 4f       	sbci	r31, 0xFF	; 255
    4e3c:	80 81       	ld	r24, Z
    4e3e:	91 81       	ldd	r25, Z+1	; 0x01
    4e40:	01 97       	sbiw	r24, 0x01	; 1
    4e42:	11 96       	adiw	r26, 0x01	; 1
    4e44:	9c 93       	st	X, r25
    4e46:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e48:	fe 01       	movw	r30, r28
    4e4a:	e7 5a       	subi	r30, 0xA7	; 167
    4e4c:	ff 4f       	sbci	r31, 0xFF	; 255
    4e4e:	80 81       	ld	r24, Z
    4e50:	91 81       	ldd	r25, Z+1	; 0x01
    4e52:	00 97       	sbiw	r24, 0x00	; 0
    4e54:	d1 f6       	brne	.-76     	; 0x4e0a <main+0x34cc>
    4e56:	27 c0       	rjmp	.+78     	; 0x4ea6 <main+0x3568>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e58:	8e 01       	movw	r16, r28
    4e5a:	07 5a       	subi	r16, 0xA7	; 167
    4e5c:	1f 4f       	sbci	r17, 0xFF	; 255
    4e5e:	fe 01       	movw	r30, r28
    4e60:	e5 5a       	subi	r30, 0xA5	; 165
    4e62:	ff 4f       	sbci	r31, 0xFF	; 255
    4e64:	60 81       	ld	r22, Z
    4e66:	71 81       	ldd	r23, Z+1	; 0x01
    4e68:	82 81       	ldd	r24, Z+2	; 0x02
    4e6a:	93 81       	ldd	r25, Z+3	; 0x03
    4e6c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4e70:	dc 01       	movw	r26, r24
    4e72:	cb 01       	movw	r24, r22
    4e74:	f8 01       	movw	r30, r16
    4e76:	91 83       	std	Z+1, r25	; 0x01
    4e78:	80 83       	st	Z, r24
    4e7a:	de 01       	movw	r26, r28
    4e7c:	ab 5a       	subi	r26, 0xAB	; 171
    4e7e:	bf 4f       	sbci	r27, 0xFF	; 255
    4e80:	fe 01       	movw	r30, r28
    4e82:	e7 5a       	subi	r30, 0xA7	; 167
    4e84:	ff 4f       	sbci	r31, 0xFF	; 255
    4e86:	80 81       	ld	r24, Z
    4e88:	91 81       	ldd	r25, Z+1	; 0x01
    4e8a:	8d 93       	st	X+, r24
    4e8c:	9c 93       	st	X, r25
    4e8e:	fe 01       	movw	r30, r28
    4e90:	eb 5a       	subi	r30, 0xAB	; 171
    4e92:	ff 4f       	sbci	r31, 0xFF	; 255
    4e94:	80 81       	ld	r24, Z
    4e96:	91 81       	ldd	r25, Z+1	; 0x01
    4e98:	01 97       	sbiw	r24, 0x01	; 1
    4e9a:	f1 f7       	brne	.-4      	; 0x4e98 <main+0x355a>
    4e9c:	fe 01       	movw	r30, r28
    4e9e:	eb 5a       	subi	r30, 0xAB	; 171
    4ea0:	ff 4f       	sbci	r31, 0xFF	; 255
    4ea2:	91 83       	std	Z+1, r25	; 0x01
    4ea4:	80 83       	st	Z, r24
			    _delay_ms(10);
			    EEPROM_readByte(0x03,&x3);
    4ea6:	9e 01       	movw	r18, r28
    4ea8:	28 5a       	subi	r18, 0xA8	; 168
    4eaa:	3d 4f       	sbci	r19, 0xFD	; 253
    4eac:	83 e0       	ldi	r24, 0x03	; 3
    4eae:	90 e0       	ldi	r25, 0x00	; 0
    4eb0:	b9 01       	movw	r22, r18
    4eb2:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    4eb6:	fe 01       	movw	r30, r28
    4eb8:	ef 5a       	subi	r30, 0xAF	; 175
    4eba:	ff 4f       	sbci	r31, 0xFF	; 255
    4ebc:	80 e0       	ldi	r24, 0x00	; 0
    4ebe:	90 e0       	ldi	r25, 0x00	; 0
    4ec0:	a0 e2       	ldi	r26, 0x20	; 32
    4ec2:	b1 e4       	ldi	r27, 0x41	; 65
    4ec4:	80 83       	st	Z, r24
    4ec6:	91 83       	std	Z+1, r25	; 0x01
    4ec8:	a2 83       	std	Z+2, r26	; 0x02
    4eca:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4ecc:	8e 01       	movw	r16, r28
    4ece:	03 5b       	subi	r16, 0xB3	; 179
    4ed0:	1f 4f       	sbci	r17, 0xFF	; 255
    4ed2:	fe 01       	movw	r30, r28
    4ed4:	ef 5a       	subi	r30, 0xAF	; 175
    4ed6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ed8:	60 81       	ld	r22, Z
    4eda:	71 81       	ldd	r23, Z+1	; 0x01
    4edc:	82 81       	ldd	r24, Z+2	; 0x02
    4ede:	93 81       	ldd	r25, Z+3	; 0x03
    4ee0:	20 e0       	ldi	r18, 0x00	; 0
    4ee2:	30 e0       	ldi	r19, 0x00	; 0
    4ee4:	4a e7       	ldi	r20, 0x7A	; 122
    4ee6:	53 e4       	ldi	r21, 0x43	; 67
    4ee8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4eec:	dc 01       	movw	r26, r24
    4eee:	cb 01       	movw	r24, r22
    4ef0:	f8 01       	movw	r30, r16
    4ef2:	80 83       	st	Z, r24
    4ef4:	91 83       	std	Z+1, r25	; 0x01
    4ef6:	a2 83       	std	Z+2, r26	; 0x02
    4ef8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4efa:	fe 01       	movw	r30, r28
    4efc:	e3 5b       	subi	r30, 0xB3	; 179
    4efe:	ff 4f       	sbci	r31, 0xFF	; 255
    4f00:	60 81       	ld	r22, Z
    4f02:	71 81       	ldd	r23, Z+1	; 0x01
    4f04:	82 81       	ldd	r24, Z+2	; 0x02
    4f06:	93 81       	ldd	r25, Z+3	; 0x03
    4f08:	20 e0       	ldi	r18, 0x00	; 0
    4f0a:	30 e0       	ldi	r19, 0x00	; 0
    4f0c:	40 e8       	ldi	r20, 0x80	; 128
    4f0e:	5f e3       	ldi	r21, 0x3F	; 63
    4f10:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4f14:	88 23       	and	r24, r24
    4f16:	44 f4       	brge	.+16     	; 0x4f28 <main+0x35ea>
		__ticks = 1;
    4f18:	fe 01       	movw	r30, r28
    4f1a:	e5 5b       	subi	r30, 0xB5	; 181
    4f1c:	ff 4f       	sbci	r31, 0xFF	; 255
    4f1e:	81 e0       	ldi	r24, 0x01	; 1
    4f20:	90 e0       	ldi	r25, 0x00	; 0
    4f22:	91 83       	std	Z+1, r25	; 0x01
    4f24:	80 83       	st	Z, r24
    4f26:	64 c0       	rjmp	.+200    	; 0x4ff0 <main+0x36b2>
	else if (__tmp > 65535)
    4f28:	fe 01       	movw	r30, r28
    4f2a:	e3 5b       	subi	r30, 0xB3	; 179
    4f2c:	ff 4f       	sbci	r31, 0xFF	; 255
    4f2e:	60 81       	ld	r22, Z
    4f30:	71 81       	ldd	r23, Z+1	; 0x01
    4f32:	82 81       	ldd	r24, Z+2	; 0x02
    4f34:	93 81       	ldd	r25, Z+3	; 0x03
    4f36:	20 e0       	ldi	r18, 0x00	; 0
    4f38:	3f ef       	ldi	r19, 0xFF	; 255
    4f3a:	4f e7       	ldi	r20, 0x7F	; 127
    4f3c:	57 e4       	ldi	r21, 0x47	; 71
    4f3e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4f42:	18 16       	cp	r1, r24
    4f44:	0c f0       	brlt	.+2      	; 0x4f48 <main+0x360a>
    4f46:	43 c0       	rjmp	.+134    	; 0x4fce <main+0x3690>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4f48:	fe 01       	movw	r30, r28
    4f4a:	ef 5a       	subi	r30, 0xAF	; 175
    4f4c:	ff 4f       	sbci	r31, 0xFF	; 255
    4f4e:	60 81       	ld	r22, Z
    4f50:	71 81       	ldd	r23, Z+1	; 0x01
    4f52:	82 81       	ldd	r24, Z+2	; 0x02
    4f54:	93 81       	ldd	r25, Z+3	; 0x03
    4f56:	20 e0       	ldi	r18, 0x00	; 0
    4f58:	30 e0       	ldi	r19, 0x00	; 0
    4f5a:	40 e2       	ldi	r20, 0x20	; 32
    4f5c:	51 e4       	ldi	r21, 0x41	; 65
    4f5e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4f62:	dc 01       	movw	r26, r24
    4f64:	cb 01       	movw	r24, r22
    4f66:	8e 01       	movw	r16, r28
    4f68:	05 5b       	subi	r16, 0xB5	; 181
    4f6a:	1f 4f       	sbci	r17, 0xFF	; 255
    4f6c:	bc 01       	movw	r22, r24
    4f6e:	cd 01       	movw	r24, r26
    4f70:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4f74:	dc 01       	movw	r26, r24
    4f76:	cb 01       	movw	r24, r22
    4f78:	f8 01       	movw	r30, r16
    4f7a:	91 83       	std	Z+1, r25	; 0x01
    4f7c:	80 83       	st	Z, r24
    4f7e:	1f c0       	rjmp	.+62     	; 0x4fbe <main+0x3680>
    4f80:	fe 01       	movw	r30, r28
    4f82:	e7 5b       	subi	r30, 0xB7	; 183
    4f84:	ff 4f       	sbci	r31, 0xFF	; 255
    4f86:	89 e1       	ldi	r24, 0x19	; 25
    4f88:	90 e0       	ldi	r25, 0x00	; 0
    4f8a:	91 83       	std	Z+1, r25	; 0x01
    4f8c:	80 83       	st	Z, r24
    4f8e:	fe 01       	movw	r30, r28
    4f90:	e7 5b       	subi	r30, 0xB7	; 183
    4f92:	ff 4f       	sbci	r31, 0xFF	; 255
    4f94:	80 81       	ld	r24, Z
    4f96:	91 81       	ldd	r25, Z+1	; 0x01
    4f98:	01 97       	sbiw	r24, 0x01	; 1
    4f9a:	f1 f7       	brne	.-4      	; 0x4f98 <main+0x365a>
    4f9c:	fe 01       	movw	r30, r28
    4f9e:	e7 5b       	subi	r30, 0xB7	; 183
    4fa0:	ff 4f       	sbci	r31, 0xFF	; 255
    4fa2:	91 83       	std	Z+1, r25	; 0x01
    4fa4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4fa6:	de 01       	movw	r26, r28
    4fa8:	a5 5b       	subi	r26, 0xB5	; 181
    4faa:	bf 4f       	sbci	r27, 0xFF	; 255
    4fac:	fe 01       	movw	r30, r28
    4fae:	e5 5b       	subi	r30, 0xB5	; 181
    4fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    4fb2:	80 81       	ld	r24, Z
    4fb4:	91 81       	ldd	r25, Z+1	; 0x01
    4fb6:	01 97       	sbiw	r24, 0x01	; 1
    4fb8:	11 96       	adiw	r26, 0x01	; 1
    4fba:	9c 93       	st	X, r25
    4fbc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4fbe:	fe 01       	movw	r30, r28
    4fc0:	e5 5b       	subi	r30, 0xB5	; 181
    4fc2:	ff 4f       	sbci	r31, 0xFF	; 255
    4fc4:	80 81       	ld	r24, Z
    4fc6:	91 81       	ldd	r25, Z+1	; 0x01
    4fc8:	00 97       	sbiw	r24, 0x00	; 0
    4fca:	d1 f6       	brne	.-76     	; 0x4f80 <main+0x3642>
    4fcc:	27 c0       	rjmp	.+78     	; 0x501c <main+0x36de>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4fce:	8e 01       	movw	r16, r28
    4fd0:	05 5b       	subi	r16, 0xB5	; 181
    4fd2:	1f 4f       	sbci	r17, 0xFF	; 255
    4fd4:	fe 01       	movw	r30, r28
    4fd6:	e3 5b       	subi	r30, 0xB3	; 179
    4fd8:	ff 4f       	sbci	r31, 0xFF	; 255
    4fda:	60 81       	ld	r22, Z
    4fdc:	71 81       	ldd	r23, Z+1	; 0x01
    4fde:	82 81       	ldd	r24, Z+2	; 0x02
    4fe0:	93 81       	ldd	r25, Z+3	; 0x03
    4fe2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4fe6:	dc 01       	movw	r26, r24
    4fe8:	cb 01       	movw	r24, r22
    4fea:	f8 01       	movw	r30, r16
    4fec:	91 83       	std	Z+1, r25	; 0x01
    4fee:	80 83       	st	Z, r24
    4ff0:	de 01       	movw	r26, r28
    4ff2:	a9 5b       	subi	r26, 0xB9	; 185
    4ff4:	bf 4f       	sbci	r27, 0xFF	; 255
    4ff6:	fe 01       	movw	r30, r28
    4ff8:	e5 5b       	subi	r30, 0xB5	; 181
    4ffa:	ff 4f       	sbci	r31, 0xFF	; 255
    4ffc:	80 81       	ld	r24, Z
    4ffe:	91 81       	ldd	r25, Z+1	; 0x01
    5000:	8d 93       	st	X+, r24
    5002:	9c 93       	st	X, r25
    5004:	fe 01       	movw	r30, r28
    5006:	e9 5b       	subi	r30, 0xB9	; 185
    5008:	ff 4f       	sbci	r31, 0xFF	; 255
    500a:	80 81       	ld	r24, Z
    500c:	91 81       	ldd	r25, Z+1	; 0x01
    500e:	01 97       	sbiw	r24, 0x01	; 1
    5010:	f1 f7       	brne	.-4      	; 0x500e <main+0x36d0>
    5012:	fe 01       	movw	r30, r28
    5014:	e9 5b       	subi	r30, 0xB9	; 185
    5016:	ff 4f       	sbci	r31, 0xFF	; 255
    5018:	91 83       	std	Z+1, r25	; 0x01
    501a:	80 83       	st	Z, r24
			    _delay_ms(10);
			    EEPROM_readByte(0x04,&x4);
    501c:	9e 01       	movw	r18, r28
    501e:	27 5a       	subi	r18, 0xA7	; 167
    5020:	3d 4f       	sbci	r19, 0xFD	; 253
    5022:	84 e0       	ldi	r24, 0x04	; 4
    5024:	90 e0       	ldi	r25, 0x00	; 0
    5026:	b9 01       	movw	r22, r18
    5028:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    502c:	fe 01       	movw	r30, r28
    502e:	ed 5b       	subi	r30, 0xBD	; 189
    5030:	ff 4f       	sbci	r31, 0xFF	; 255
    5032:	80 e0       	ldi	r24, 0x00	; 0
    5034:	90 e0       	ldi	r25, 0x00	; 0
    5036:	a0 e2       	ldi	r26, 0x20	; 32
    5038:	b1 e4       	ldi	r27, 0x41	; 65
    503a:	80 83       	st	Z, r24
    503c:	91 83       	std	Z+1, r25	; 0x01
    503e:	a2 83       	std	Z+2, r26	; 0x02
    5040:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5042:	8e 01       	movw	r16, r28
    5044:	01 5c       	subi	r16, 0xC1	; 193
    5046:	1f 4f       	sbci	r17, 0xFF	; 255
    5048:	fe 01       	movw	r30, r28
    504a:	ed 5b       	subi	r30, 0xBD	; 189
    504c:	ff 4f       	sbci	r31, 0xFF	; 255
    504e:	60 81       	ld	r22, Z
    5050:	71 81       	ldd	r23, Z+1	; 0x01
    5052:	82 81       	ldd	r24, Z+2	; 0x02
    5054:	93 81       	ldd	r25, Z+3	; 0x03
    5056:	20 e0       	ldi	r18, 0x00	; 0
    5058:	30 e0       	ldi	r19, 0x00	; 0
    505a:	4a e7       	ldi	r20, 0x7A	; 122
    505c:	53 e4       	ldi	r21, 0x43	; 67
    505e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5062:	dc 01       	movw	r26, r24
    5064:	cb 01       	movw	r24, r22
    5066:	f8 01       	movw	r30, r16
    5068:	80 83       	st	Z, r24
    506a:	91 83       	std	Z+1, r25	; 0x01
    506c:	a2 83       	std	Z+2, r26	; 0x02
    506e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5070:	fe 01       	movw	r30, r28
    5072:	ff 96       	adiw	r30, 0x3f	; 63
    5074:	60 81       	ld	r22, Z
    5076:	71 81       	ldd	r23, Z+1	; 0x01
    5078:	82 81       	ldd	r24, Z+2	; 0x02
    507a:	93 81       	ldd	r25, Z+3	; 0x03
    507c:	20 e0       	ldi	r18, 0x00	; 0
    507e:	30 e0       	ldi	r19, 0x00	; 0
    5080:	40 e8       	ldi	r20, 0x80	; 128
    5082:	5f e3       	ldi	r21, 0x3F	; 63
    5084:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5088:	88 23       	and	r24, r24
    508a:	2c f4       	brge	.+10     	; 0x5096 <main+0x3758>
		__ticks = 1;
    508c:	81 e0       	ldi	r24, 0x01	; 1
    508e:	90 e0       	ldi	r25, 0x00	; 0
    5090:	9e af       	std	Y+62, r25	; 0x3e
    5092:	8d af       	std	Y+61, r24	; 0x3d
    5094:	46 c0       	rjmp	.+140    	; 0x5122 <main+0x37e4>
	else if (__tmp > 65535)
    5096:	fe 01       	movw	r30, r28
    5098:	ff 96       	adiw	r30, 0x3f	; 63
    509a:	60 81       	ld	r22, Z
    509c:	71 81       	ldd	r23, Z+1	; 0x01
    509e:	82 81       	ldd	r24, Z+2	; 0x02
    50a0:	93 81       	ldd	r25, Z+3	; 0x03
    50a2:	20 e0       	ldi	r18, 0x00	; 0
    50a4:	3f ef       	ldi	r19, 0xFF	; 255
    50a6:	4f e7       	ldi	r20, 0x7F	; 127
    50a8:	57 e4       	ldi	r21, 0x47	; 71
    50aa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    50ae:	18 16       	cp	r1, r24
    50b0:	64 f5       	brge	.+88     	; 0x510a <main+0x37cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    50b2:	fe 01       	movw	r30, r28
    50b4:	ed 5b       	subi	r30, 0xBD	; 189
    50b6:	ff 4f       	sbci	r31, 0xFF	; 255
    50b8:	60 81       	ld	r22, Z
    50ba:	71 81       	ldd	r23, Z+1	; 0x01
    50bc:	82 81       	ldd	r24, Z+2	; 0x02
    50be:	93 81       	ldd	r25, Z+3	; 0x03
    50c0:	20 e0       	ldi	r18, 0x00	; 0
    50c2:	30 e0       	ldi	r19, 0x00	; 0
    50c4:	40 e2       	ldi	r20, 0x20	; 32
    50c6:	51 e4       	ldi	r21, 0x41	; 65
    50c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    50cc:	dc 01       	movw	r26, r24
    50ce:	cb 01       	movw	r24, r22
    50d0:	bc 01       	movw	r22, r24
    50d2:	cd 01       	movw	r24, r26
    50d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    50d8:	dc 01       	movw	r26, r24
    50da:	cb 01       	movw	r24, r22
    50dc:	9e af       	std	Y+62, r25	; 0x3e
    50de:	8d af       	std	Y+61, r24	; 0x3d
    50e0:	0f c0       	rjmp	.+30     	; 0x5100 <main+0x37c2>
    50e2:	89 e1       	ldi	r24, 0x19	; 25
    50e4:	90 e0       	ldi	r25, 0x00	; 0
    50e6:	9c af       	std	Y+60, r25	; 0x3c
    50e8:	8b af       	std	Y+59, r24	; 0x3b
    50ea:	8b ad       	ldd	r24, Y+59	; 0x3b
    50ec:	9c ad       	ldd	r25, Y+60	; 0x3c
    50ee:	01 97       	sbiw	r24, 0x01	; 1
    50f0:	f1 f7       	brne	.-4      	; 0x50ee <main+0x37b0>
    50f2:	9c af       	std	Y+60, r25	; 0x3c
    50f4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    50f6:	8d ad       	ldd	r24, Y+61	; 0x3d
    50f8:	9e ad       	ldd	r25, Y+62	; 0x3e
    50fa:	01 97       	sbiw	r24, 0x01	; 1
    50fc:	9e af       	std	Y+62, r25	; 0x3e
    50fe:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5100:	8d ad       	ldd	r24, Y+61	; 0x3d
    5102:	9e ad       	ldd	r25, Y+62	; 0x3e
    5104:	00 97       	sbiw	r24, 0x00	; 0
    5106:	69 f7       	brne	.-38     	; 0x50e2 <main+0x37a4>
    5108:	16 c0       	rjmp	.+44     	; 0x5136 <main+0x37f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    510a:	fe 01       	movw	r30, r28
    510c:	ff 96       	adiw	r30, 0x3f	; 63
    510e:	60 81       	ld	r22, Z
    5110:	71 81       	ldd	r23, Z+1	; 0x01
    5112:	82 81       	ldd	r24, Z+2	; 0x02
    5114:	93 81       	ldd	r25, Z+3	; 0x03
    5116:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    511a:	dc 01       	movw	r26, r24
    511c:	cb 01       	movw	r24, r22
    511e:	9e af       	std	Y+62, r25	; 0x3e
    5120:	8d af       	std	Y+61, r24	; 0x3d
    5122:	8d ad       	ldd	r24, Y+61	; 0x3d
    5124:	9e ad       	ldd	r25, Y+62	; 0x3e
    5126:	9a af       	std	Y+58, r25	; 0x3a
    5128:	89 af       	std	Y+57, r24	; 0x39
    512a:	89 ad       	ldd	r24, Y+57	; 0x39
    512c:	9a ad       	ldd	r25, Y+58	; 0x3a
    512e:	01 97       	sbiw	r24, 0x01	; 1
    5130:	f1 f7       	brne	.-4      	; 0x512e <main+0x37f0>
    5132:	9a af       	std	Y+58, r25	; 0x3a
    5134:	89 af       	std	Y+57, r24	; 0x39
			    _delay_ms(10);
			    EEPROM_readByte(0x05,&x5);
    5136:	9e 01       	movw	r18, r28
    5138:	26 5a       	subi	r18, 0xA6	; 166
    513a:	3d 4f       	sbci	r19, 0xFD	; 253
    513c:	85 e0       	ldi	r24, 0x05	; 5
    513e:	90 e0       	ldi	r25, 0x00	; 0
    5140:	b9 01       	movw	r22, r18
    5142:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    5146:	80 e0       	ldi	r24, 0x00	; 0
    5148:	90 e0       	ldi	r25, 0x00	; 0
    514a:	a0 e2       	ldi	r26, 0x20	; 32
    514c:	b1 e4       	ldi	r27, 0x41	; 65
    514e:	8d ab       	std	Y+53, r24	; 0x35
    5150:	9e ab       	std	Y+54, r25	; 0x36
    5152:	af ab       	std	Y+55, r26	; 0x37
    5154:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5156:	6d a9       	ldd	r22, Y+53	; 0x35
    5158:	7e a9       	ldd	r23, Y+54	; 0x36
    515a:	8f a9       	ldd	r24, Y+55	; 0x37
    515c:	98 ad       	ldd	r25, Y+56	; 0x38
    515e:	20 e0       	ldi	r18, 0x00	; 0
    5160:	30 e0       	ldi	r19, 0x00	; 0
    5162:	4a e7       	ldi	r20, 0x7A	; 122
    5164:	53 e4       	ldi	r21, 0x43	; 67
    5166:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    516a:	dc 01       	movw	r26, r24
    516c:	cb 01       	movw	r24, r22
    516e:	89 ab       	std	Y+49, r24	; 0x31
    5170:	9a ab       	std	Y+50, r25	; 0x32
    5172:	ab ab       	std	Y+51, r26	; 0x33
    5174:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    5176:	69 a9       	ldd	r22, Y+49	; 0x31
    5178:	7a a9       	ldd	r23, Y+50	; 0x32
    517a:	8b a9       	ldd	r24, Y+51	; 0x33
    517c:	9c a9       	ldd	r25, Y+52	; 0x34
    517e:	20 e0       	ldi	r18, 0x00	; 0
    5180:	30 e0       	ldi	r19, 0x00	; 0
    5182:	40 e8       	ldi	r20, 0x80	; 128
    5184:	5f e3       	ldi	r21, 0x3F	; 63
    5186:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    518a:	88 23       	and	r24, r24
    518c:	2c f4       	brge	.+10     	; 0x5198 <main+0x385a>
		__ticks = 1;
    518e:	81 e0       	ldi	r24, 0x01	; 1
    5190:	90 e0       	ldi	r25, 0x00	; 0
    5192:	98 ab       	std	Y+48, r25	; 0x30
    5194:	8f a7       	std	Y+47, r24	; 0x2f
    5196:	3f c0       	rjmp	.+126    	; 0x5216 <main+0x38d8>
	else if (__tmp > 65535)
    5198:	69 a9       	ldd	r22, Y+49	; 0x31
    519a:	7a a9       	ldd	r23, Y+50	; 0x32
    519c:	8b a9       	ldd	r24, Y+51	; 0x33
    519e:	9c a9       	ldd	r25, Y+52	; 0x34
    51a0:	20 e0       	ldi	r18, 0x00	; 0
    51a2:	3f ef       	ldi	r19, 0xFF	; 255
    51a4:	4f e7       	ldi	r20, 0x7F	; 127
    51a6:	57 e4       	ldi	r21, 0x47	; 71
    51a8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    51ac:	18 16       	cp	r1, r24
    51ae:	4c f5       	brge	.+82     	; 0x5202 <main+0x38c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    51b0:	6d a9       	ldd	r22, Y+53	; 0x35
    51b2:	7e a9       	ldd	r23, Y+54	; 0x36
    51b4:	8f a9       	ldd	r24, Y+55	; 0x37
    51b6:	98 ad       	ldd	r25, Y+56	; 0x38
    51b8:	20 e0       	ldi	r18, 0x00	; 0
    51ba:	30 e0       	ldi	r19, 0x00	; 0
    51bc:	40 e2       	ldi	r20, 0x20	; 32
    51be:	51 e4       	ldi	r21, 0x41	; 65
    51c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    51c4:	dc 01       	movw	r26, r24
    51c6:	cb 01       	movw	r24, r22
    51c8:	bc 01       	movw	r22, r24
    51ca:	cd 01       	movw	r24, r26
    51cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    51d0:	dc 01       	movw	r26, r24
    51d2:	cb 01       	movw	r24, r22
    51d4:	98 ab       	std	Y+48, r25	; 0x30
    51d6:	8f a7       	std	Y+47, r24	; 0x2f
    51d8:	0f c0       	rjmp	.+30     	; 0x51f8 <main+0x38ba>
    51da:	89 e1       	ldi	r24, 0x19	; 25
    51dc:	90 e0       	ldi	r25, 0x00	; 0
    51de:	9e a7       	std	Y+46, r25	; 0x2e
    51e0:	8d a7       	std	Y+45, r24	; 0x2d
    51e2:	8d a5       	ldd	r24, Y+45	; 0x2d
    51e4:	9e a5       	ldd	r25, Y+46	; 0x2e
    51e6:	01 97       	sbiw	r24, 0x01	; 1
    51e8:	f1 f7       	brne	.-4      	; 0x51e6 <main+0x38a8>
    51ea:	9e a7       	std	Y+46, r25	; 0x2e
    51ec:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    51ee:	8f a5       	ldd	r24, Y+47	; 0x2f
    51f0:	98 a9       	ldd	r25, Y+48	; 0x30
    51f2:	01 97       	sbiw	r24, 0x01	; 1
    51f4:	98 ab       	std	Y+48, r25	; 0x30
    51f6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    51f8:	8f a5       	ldd	r24, Y+47	; 0x2f
    51fa:	98 a9       	ldd	r25, Y+48	; 0x30
    51fc:	00 97       	sbiw	r24, 0x00	; 0
    51fe:	69 f7       	brne	.-38     	; 0x51da <main+0x389c>
    5200:	14 c0       	rjmp	.+40     	; 0x522a <main+0x38ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5202:	69 a9       	ldd	r22, Y+49	; 0x31
    5204:	7a a9       	ldd	r23, Y+50	; 0x32
    5206:	8b a9       	ldd	r24, Y+51	; 0x33
    5208:	9c a9       	ldd	r25, Y+52	; 0x34
    520a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    520e:	dc 01       	movw	r26, r24
    5210:	cb 01       	movw	r24, r22
    5212:	98 ab       	std	Y+48, r25	; 0x30
    5214:	8f a7       	std	Y+47, r24	; 0x2f
    5216:	8f a5       	ldd	r24, Y+47	; 0x2f
    5218:	98 a9       	ldd	r25, Y+48	; 0x30
    521a:	9c a7       	std	Y+44, r25	; 0x2c
    521c:	8b a7       	std	Y+43, r24	; 0x2b
    521e:	8b a5       	ldd	r24, Y+43	; 0x2b
    5220:	9c a5       	ldd	r25, Y+44	; 0x2c
    5222:	01 97       	sbiw	r24, 0x01	; 1
    5224:	f1 f7       	brne	.-4      	; 0x5222 <main+0x38e4>
    5226:	9c a7       	std	Y+44, r25	; 0x2c
    5228:	8b a7       	std	Y+43, r24	; 0x2b
			    _delay_ms(10);
			    EEPROM_readByte(0x06,&x6);
    522a:	9e 01       	movw	r18, r28
    522c:	25 5a       	subi	r18, 0xA5	; 165
    522e:	3d 4f       	sbci	r19, 0xFD	; 253
    5230:	86 e0       	ldi	r24, 0x06	; 6
    5232:	90 e0       	ldi	r25, 0x00	; 0
    5234:	b9 01       	movw	r22, r18
    5236:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    523a:	80 e0       	ldi	r24, 0x00	; 0
    523c:	90 e0       	ldi	r25, 0x00	; 0
    523e:	a0 e2       	ldi	r26, 0x20	; 32
    5240:	b1 e4       	ldi	r27, 0x41	; 65
    5242:	8f a3       	std	Y+39, r24	; 0x27
    5244:	98 a7       	std	Y+40, r25	; 0x28
    5246:	a9 a7       	std	Y+41, r26	; 0x29
    5248:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    524a:	6f a1       	ldd	r22, Y+39	; 0x27
    524c:	78 a5       	ldd	r23, Y+40	; 0x28
    524e:	89 a5       	ldd	r24, Y+41	; 0x29
    5250:	9a a5       	ldd	r25, Y+42	; 0x2a
    5252:	20 e0       	ldi	r18, 0x00	; 0
    5254:	30 e0       	ldi	r19, 0x00	; 0
    5256:	4a e7       	ldi	r20, 0x7A	; 122
    5258:	53 e4       	ldi	r21, 0x43	; 67
    525a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    525e:	dc 01       	movw	r26, r24
    5260:	cb 01       	movw	r24, r22
    5262:	8b a3       	std	Y+35, r24	; 0x23
    5264:	9c a3       	std	Y+36, r25	; 0x24
    5266:	ad a3       	std	Y+37, r26	; 0x25
    5268:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    526a:	6b a1       	ldd	r22, Y+35	; 0x23
    526c:	7c a1       	ldd	r23, Y+36	; 0x24
    526e:	8d a1       	ldd	r24, Y+37	; 0x25
    5270:	9e a1       	ldd	r25, Y+38	; 0x26
    5272:	20 e0       	ldi	r18, 0x00	; 0
    5274:	30 e0       	ldi	r19, 0x00	; 0
    5276:	40 e8       	ldi	r20, 0x80	; 128
    5278:	5f e3       	ldi	r21, 0x3F	; 63
    527a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    527e:	88 23       	and	r24, r24
    5280:	2c f4       	brge	.+10     	; 0x528c <main+0x394e>
		__ticks = 1;
    5282:	81 e0       	ldi	r24, 0x01	; 1
    5284:	90 e0       	ldi	r25, 0x00	; 0
    5286:	9a a3       	std	Y+34, r25	; 0x22
    5288:	89 a3       	std	Y+33, r24	; 0x21
    528a:	3f c0       	rjmp	.+126    	; 0x530a <main+0x39cc>
	else if (__tmp > 65535)
    528c:	6b a1       	ldd	r22, Y+35	; 0x23
    528e:	7c a1       	ldd	r23, Y+36	; 0x24
    5290:	8d a1       	ldd	r24, Y+37	; 0x25
    5292:	9e a1       	ldd	r25, Y+38	; 0x26
    5294:	20 e0       	ldi	r18, 0x00	; 0
    5296:	3f ef       	ldi	r19, 0xFF	; 255
    5298:	4f e7       	ldi	r20, 0x7F	; 127
    529a:	57 e4       	ldi	r21, 0x47	; 71
    529c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    52a0:	18 16       	cp	r1, r24
    52a2:	4c f5       	brge	.+82     	; 0x52f6 <main+0x39b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    52a4:	6f a1       	ldd	r22, Y+39	; 0x27
    52a6:	78 a5       	ldd	r23, Y+40	; 0x28
    52a8:	89 a5       	ldd	r24, Y+41	; 0x29
    52aa:	9a a5       	ldd	r25, Y+42	; 0x2a
    52ac:	20 e0       	ldi	r18, 0x00	; 0
    52ae:	30 e0       	ldi	r19, 0x00	; 0
    52b0:	40 e2       	ldi	r20, 0x20	; 32
    52b2:	51 e4       	ldi	r21, 0x41	; 65
    52b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    52b8:	dc 01       	movw	r26, r24
    52ba:	cb 01       	movw	r24, r22
    52bc:	bc 01       	movw	r22, r24
    52be:	cd 01       	movw	r24, r26
    52c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    52c4:	dc 01       	movw	r26, r24
    52c6:	cb 01       	movw	r24, r22
    52c8:	9a a3       	std	Y+34, r25	; 0x22
    52ca:	89 a3       	std	Y+33, r24	; 0x21
    52cc:	0f c0       	rjmp	.+30     	; 0x52ec <main+0x39ae>
    52ce:	89 e1       	ldi	r24, 0x19	; 25
    52d0:	90 e0       	ldi	r25, 0x00	; 0
    52d2:	98 a3       	std	Y+32, r25	; 0x20
    52d4:	8f 8f       	std	Y+31, r24	; 0x1f
    52d6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    52d8:	98 a1       	ldd	r25, Y+32	; 0x20
    52da:	01 97       	sbiw	r24, 0x01	; 1
    52dc:	f1 f7       	brne	.-4      	; 0x52da <main+0x399c>
    52de:	98 a3       	std	Y+32, r25	; 0x20
    52e0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    52e2:	89 a1       	ldd	r24, Y+33	; 0x21
    52e4:	9a a1       	ldd	r25, Y+34	; 0x22
    52e6:	01 97       	sbiw	r24, 0x01	; 1
    52e8:	9a a3       	std	Y+34, r25	; 0x22
    52ea:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    52ec:	89 a1       	ldd	r24, Y+33	; 0x21
    52ee:	9a a1       	ldd	r25, Y+34	; 0x22
    52f0:	00 97       	sbiw	r24, 0x00	; 0
    52f2:	69 f7       	brne	.-38     	; 0x52ce <main+0x3990>
    52f4:	14 c0       	rjmp	.+40     	; 0x531e <main+0x39e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    52f6:	6b a1       	ldd	r22, Y+35	; 0x23
    52f8:	7c a1       	ldd	r23, Y+36	; 0x24
    52fa:	8d a1       	ldd	r24, Y+37	; 0x25
    52fc:	9e a1       	ldd	r25, Y+38	; 0x26
    52fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5302:	dc 01       	movw	r26, r24
    5304:	cb 01       	movw	r24, r22
    5306:	9a a3       	std	Y+34, r25	; 0x22
    5308:	89 a3       	std	Y+33, r24	; 0x21
    530a:	89 a1       	ldd	r24, Y+33	; 0x21
    530c:	9a a1       	ldd	r25, Y+34	; 0x22
    530e:	9e 8f       	std	Y+30, r25	; 0x1e
    5310:	8d 8f       	std	Y+29, r24	; 0x1d
    5312:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5314:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5316:	01 97       	sbiw	r24, 0x01	; 1
    5318:	f1 f7       	brne	.-4      	; 0x5316 <main+0x39d8>
    531a:	9e 8f       	std	Y+30, r25	; 0x1e
    531c:	8d 8f       	std	Y+29, r24	; 0x1d
			    _delay_ms(10);
			    EEPROM_readByte(0x07,&x7);
    531e:	9e 01       	movw	r18, r28
    5320:	24 5a       	subi	r18, 0xA4	; 164
    5322:	3d 4f       	sbci	r19, 0xFD	; 253
    5324:	87 e0       	ldi	r24, 0x07	; 7
    5326:	90 e0       	ldi	r25, 0x00	; 0
    5328:	b9 01       	movw	r22, r18
    532a:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    532e:	80 e0       	ldi	r24, 0x00	; 0
    5330:	90 e0       	ldi	r25, 0x00	; 0
    5332:	a0 e2       	ldi	r26, 0x20	; 32
    5334:	b1 e4       	ldi	r27, 0x41	; 65
    5336:	89 8f       	std	Y+25, r24	; 0x19
    5338:	9a 8f       	std	Y+26, r25	; 0x1a
    533a:	ab 8f       	std	Y+27, r26	; 0x1b
    533c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    533e:	69 8d       	ldd	r22, Y+25	; 0x19
    5340:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5342:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5344:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5346:	20 e0       	ldi	r18, 0x00	; 0
    5348:	30 e0       	ldi	r19, 0x00	; 0
    534a:	4a e7       	ldi	r20, 0x7A	; 122
    534c:	53 e4       	ldi	r21, 0x43	; 67
    534e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5352:	dc 01       	movw	r26, r24
    5354:	cb 01       	movw	r24, r22
    5356:	8d 8b       	std	Y+21, r24	; 0x15
    5358:	9e 8b       	std	Y+22, r25	; 0x16
    535a:	af 8b       	std	Y+23, r26	; 0x17
    535c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    535e:	6d 89       	ldd	r22, Y+21	; 0x15
    5360:	7e 89       	ldd	r23, Y+22	; 0x16
    5362:	8f 89       	ldd	r24, Y+23	; 0x17
    5364:	98 8d       	ldd	r25, Y+24	; 0x18
    5366:	20 e0       	ldi	r18, 0x00	; 0
    5368:	30 e0       	ldi	r19, 0x00	; 0
    536a:	40 e8       	ldi	r20, 0x80	; 128
    536c:	5f e3       	ldi	r21, 0x3F	; 63
    536e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5372:	88 23       	and	r24, r24
    5374:	2c f4       	brge	.+10     	; 0x5380 <main+0x3a42>
		__ticks = 1;
    5376:	81 e0       	ldi	r24, 0x01	; 1
    5378:	90 e0       	ldi	r25, 0x00	; 0
    537a:	9c 8b       	std	Y+20, r25	; 0x14
    537c:	8b 8b       	std	Y+19, r24	; 0x13
    537e:	3f c0       	rjmp	.+126    	; 0x53fe <main+0x3ac0>
	else if (__tmp > 65535)
    5380:	6d 89       	ldd	r22, Y+21	; 0x15
    5382:	7e 89       	ldd	r23, Y+22	; 0x16
    5384:	8f 89       	ldd	r24, Y+23	; 0x17
    5386:	98 8d       	ldd	r25, Y+24	; 0x18
    5388:	20 e0       	ldi	r18, 0x00	; 0
    538a:	3f ef       	ldi	r19, 0xFF	; 255
    538c:	4f e7       	ldi	r20, 0x7F	; 127
    538e:	57 e4       	ldi	r21, 0x47	; 71
    5390:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5394:	18 16       	cp	r1, r24
    5396:	4c f5       	brge	.+82     	; 0x53ea <main+0x3aac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5398:	69 8d       	ldd	r22, Y+25	; 0x19
    539a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    539c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    539e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    53a0:	20 e0       	ldi	r18, 0x00	; 0
    53a2:	30 e0       	ldi	r19, 0x00	; 0
    53a4:	40 e2       	ldi	r20, 0x20	; 32
    53a6:	51 e4       	ldi	r21, 0x41	; 65
    53a8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    53ac:	dc 01       	movw	r26, r24
    53ae:	cb 01       	movw	r24, r22
    53b0:	bc 01       	movw	r22, r24
    53b2:	cd 01       	movw	r24, r26
    53b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    53b8:	dc 01       	movw	r26, r24
    53ba:	cb 01       	movw	r24, r22
    53bc:	9c 8b       	std	Y+20, r25	; 0x14
    53be:	8b 8b       	std	Y+19, r24	; 0x13
    53c0:	0f c0       	rjmp	.+30     	; 0x53e0 <main+0x3aa2>
    53c2:	89 e1       	ldi	r24, 0x19	; 25
    53c4:	90 e0       	ldi	r25, 0x00	; 0
    53c6:	9a 8b       	std	Y+18, r25	; 0x12
    53c8:	89 8b       	std	Y+17, r24	; 0x11
    53ca:	89 89       	ldd	r24, Y+17	; 0x11
    53cc:	9a 89       	ldd	r25, Y+18	; 0x12
    53ce:	01 97       	sbiw	r24, 0x01	; 1
    53d0:	f1 f7       	brne	.-4      	; 0x53ce <main+0x3a90>
    53d2:	9a 8b       	std	Y+18, r25	; 0x12
    53d4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    53d6:	8b 89       	ldd	r24, Y+19	; 0x13
    53d8:	9c 89       	ldd	r25, Y+20	; 0x14
    53da:	01 97       	sbiw	r24, 0x01	; 1
    53dc:	9c 8b       	std	Y+20, r25	; 0x14
    53de:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    53e0:	8b 89       	ldd	r24, Y+19	; 0x13
    53e2:	9c 89       	ldd	r25, Y+20	; 0x14
    53e4:	00 97       	sbiw	r24, 0x00	; 0
    53e6:	69 f7       	brne	.-38     	; 0x53c2 <main+0x3a84>
    53e8:	14 c0       	rjmp	.+40     	; 0x5412 <main+0x3ad4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    53ea:	6d 89       	ldd	r22, Y+21	; 0x15
    53ec:	7e 89       	ldd	r23, Y+22	; 0x16
    53ee:	8f 89       	ldd	r24, Y+23	; 0x17
    53f0:	98 8d       	ldd	r25, Y+24	; 0x18
    53f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    53f6:	dc 01       	movw	r26, r24
    53f8:	cb 01       	movw	r24, r22
    53fa:	9c 8b       	std	Y+20, r25	; 0x14
    53fc:	8b 8b       	std	Y+19, r24	; 0x13
    53fe:	8b 89       	ldd	r24, Y+19	; 0x13
    5400:	9c 89       	ldd	r25, Y+20	; 0x14
    5402:	98 8b       	std	Y+16, r25	; 0x10
    5404:	8f 87       	std	Y+15, r24	; 0x0f
    5406:	8f 85       	ldd	r24, Y+15	; 0x0f
    5408:	98 89       	ldd	r25, Y+16	; 0x10
    540a:	01 97       	sbiw	r24, 0x01	; 1
    540c:	f1 f7       	brne	.-4      	; 0x540a <main+0x3acc>
    540e:	98 8b       	std	Y+16, r25	; 0x10
    5410:	8f 87       	std	Y+15, r24	; 0x0f
			    _delay_ms(10);
			    EEPROM_readByte(0x08,&x8);
    5412:	9e 01       	movw	r18, r28
    5414:	23 5a       	subi	r18, 0xA3	; 163
    5416:	3d 4f       	sbci	r19, 0xFD	; 253
    5418:	88 e0       	ldi	r24, 0x08	; 8
    541a:	90 e0       	ldi	r25, 0x00	; 0
    541c:	b9 01       	movw	r22, r18
    541e:	0e 94 e5 05 	call	0xbca	; 0xbca <EEPROM_readByte>
    5422:	80 e0       	ldi	r24, 0x00	; 0
    5424:	90 e0       	ldi	r25, 0x00	; 0
    5426:	a0 e2       	ldi	r26, 0x20	; 32
    5428:	b1 e4       	ldi	r27, 0x41	; 65
    542a:	8b 87       	std	Y+11, r24	; 0x0b
    542c:	9c 87       	std	Y+12, r25	; 0x0c
    542e:	ad 87       	std	Y+13, r26	; 0x0d
    5430:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5432:	6b 85       	ldd	r22, Y+11	; 0x0b
    5434:	7c 85       	ldd	r23, Y+12	; 0x0c
    5436:	8d 85       	ldd	r24, Y+13	; 0x0d
    5438:	9e 85       	ldd	r25, Y+14	; 0x0e
    543a:	20 e0       	ldi	r18, 0x00	; 0
    543c:	30 e0       	ldi	r19, 0x00	; 0
    543e:	4a e7       	ldi	r20, 0x7A	; 122
    5440:	53 e4       	ldi	r21, 0x43	; 67
    5442:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5446:	dc 01       	movw	r26, r24
    5448:	cb 01       	movw	r24, r22
    544a:	8f 83       	std	Y+7, r24	; 0x07
    544c:	98 87       	std	Y+8, r25	; 0x08
    544e:	a9 87       	std	Y+9, r26	; 0x09
    5450:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5452:	6f 81       	ldd	r22, Y+7	; 0x07
    5454:	78 85       	ldd	r23, Y+8	; 0x08
    5456:	89 85       	ldd	r24, Y+9	; 0x09
    5458:	9a 85       	ldd	r25, Y+10	; 0x0a
    545a:	20 e0       	ldi	r18, 0x00	; 0
    545c:	30 e0       	ldi	r19, 0x00	; 0
    545e:	40 e8       	ldi	r20, 0x80	; 128
    5460:	5f e3       	ldi	r21, 0x3F	; 63
    5462:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5466:	88 23       	and	r24, r24
    5468:	2c f4       	brge	.+10     	; 0x5474 <main+0x3b36>
		__ticks = 1;
    546a:	81 e0       	ldi	r24, 0x01	; 1
    546c:	90 e0       	ldi	r25, 0x00	; 0
    546e:	9e 83       	std	Y+6, r25	; 0x06
    5470:	8d 83       	std	Y+5, r24	; 0x05
    5472:	40 c0       	rjmp	.+128    	; 0x54f4 <main+0x3bb6>
	else if (__tmp > 65535)
    5474:	6f 81       	ldd	r22, Y+7	; 0x07
    5476:	78 85       	ldd	r23, Y+8	; 0x08
    5478:	89 85       	ldd	r24, Y+9	; 0x09
    547a:	9a 85       	ldd	r25, Y+10	; 0x0a
    547c:	20 e0       	ldi	r18, 0x00	; 0
    547e:	3f ef       	ldi	r19, 0xFF	; 255
    5480:	4f e7       	ldi	r20, 0x7F	; 127
    5482:	57 e4       	ldi	r21, 0x47	; 71
    5484:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5488:	18 16       	cp	r1, r24
    548a:	54 f5       	brge	.+84     	; 0x54e0 <main+0x3ba2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    548c:	6b 85       	ldd	r22, Y+11	; 0x0b
    548e:	7c 85       	ldd	r23, Y+12	; 0x0c
    5490:	8d 85       	ldd	r24, Y+13	; 0x0d
    5492:	9e 85       	ldd	r25, Y+14	; 0x0e
    5494:	20 e0       	ldi	r18, 0x00	; 0
    5496:	30 e0       	ldi	r19, 0x00	; 0
    5498:	40 e2       	ldi	r20, 0x20	; 32
    549a:	51 e4       	ldi	r21, 0x41	; 65
    549c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    54a0:	dc 01       	movw	r26, r24
    54a2:	cb 01       	movw	r24, r22
    54a4:	bc 01       	movw	r22, r24
    54a6:	cd 01       	movw	r24, r26
    54a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    54ac:	dc 01       	movw	r26, r24
    54ae:	cb 01       	movw	r24, r22
    54b0:	9e 83       	std	Y+6, r25	; 0x06
    54b2:	8d 83       	std	Y+5, r24	; 0x05
    54b4:	0f c0       	rjmp	.+30     	; 0x54d4 <main+0x3b96>
    54b6:	89 e1       	ldi	r24, 0x19	; 25
    54b8:	90 e0       	ldi	r25, 0x00	; 0
    54ba:	9c 83       	std	Y+4, r25	; 0x04
    54bc:	8b 83       	std	Y+3, r24	; 0x03
    54be:	8b 81       	ldd	r24, Y+3	; 0x03
    54c0:	9c 81       	ldd	r25, Y+4	; 0x04
    54c2:	01 97       	sbiw	r24, 0x01	; 1
    54c4:	f1 f7       	brne	.-4      	; 0x54c2 <main+0x3b84>
    54c6:	9c 83       	std	Y+4, r25	; 0x04
    54c8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    54ca:	8d 81       	ldd	r24, Y+5	; 0x05
    54cc:	9e 81       	ldd	r25, Y+6	; 0x06
    54ce:	01 97       	sbiw	r24, 0x01	; 1
    54d0:	9e 83       	std	Y+6, r25	; 0x06
    54d2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    54d4:	8d 81       	ldd	r24, Y+5	; 0x05
    54d6:	9e 81       	ldd	r25, Y+6	; 0x06
    54d8:	00 97       	sbiw	r24, 0x00	; 0
    54da:	69 f7       	brne	.-38     	; 0x54b6 <main+0x3b78>
    54dc:	0c 94 5b 18 	jmp	0x30b6	; 0x30b6 <main+0x1778>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    54e0:	6f 81       	ldd	r22, Y+7	; 0x07
    54e2:	78 85       	ldd	r23, Y+8	; 0x08
    54e4:	89 85       	ldd	r24, Y+9	; 0x09
    54e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    54e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    54ec:	dc 01       	movw	r26, r24
    54ee:	cb 01       	movw	r24, r22
    54f0:	9e 83       	std	Y+6, r25	; 0x06
    54f2:	8d 83       	std	Y+5, r24	; 0x05
    54f4:	8d 81       	ldd	r24, Y+5	; 0x05
    54f6:	9e 81       	ldd	r25, Y+6	; 0x06
    54f8:	9a 83       	std	Y+2, r25	; 0x02
    54fa:	89 83       	std	Y+1, r24	; 0x01
    54fc:	89 81       	ldd	r24, Y+1	; 0x01
    54fe:	9a 81       	ldd	r25, Y+2	; 0x02
    5500:	01 97       	sbiw	r24, 0x01	; 1
    5502:	f1 f7       	brne	.-4      	; 0x5500 <main+0x3bc2>
    5504:	9a 83       	std	Y+2, r25	; 0x02
    5506:	89 83       	std	Y+1, r24	; 0x01
    5508:	0c 94 5b 18 	jmp	0x30b6	; 0x30b6 <main+0x1778>
			    _delay_ms(10);

		}

		else if(m==4){
    550c:	fe 01       	movw	r30, r28
    550e:	e3 5b       	subi	r30, 0xB3	; 179
    5510:	fd 4f       	sbci	r31, 0xFD	; 253
    5512:	80 81       	ld	r24, Z
    5514:	84 30       	cpi	r24, 0x04	; 4
    5516:	11 f0       	breq	.+4      	; 0x551c <main+0x3bde>
    5518:	0c 94 5b 18 	jmp	0x30b6	; 0x30b6 <main+0x1778>

			PORTD|=(1<<PD7); // buzzer on
    551c:	a2 e3       	ldi	r26, 0x32	; 50
    551e:	b0 e0       	ldi	r27, 0x00	; 0
    5520:	e2 e3       	ldi	r30, 0x32	; 50
    5522:	f0 e0       	ldi	r31, 0x00	; 0
    5524:	80 81       	ld	r24, Z
    5526:	80 68       	ori	r24, 0x80	; 128
    5528:	8c 93       	st	X, r24
    552a:	0c 94 5b 18 	jmp	0x30b6	; 0x30b6 <main+0x1778>

0000552e <UART_init>:

#include "uart.h"

#define BAUD_RRESCALE ((( F_CPU) / (USART_BAUDRATE * 8UL))-1)

void UART_init(void){
    552e:	df 93       	push	r29
    5530:	cf 93       	push	r28
    5532:	cd b7       	in	r28, 0x3d	; 61
    5534:	de b7       	in	r29, 0x3e	; 62

	UCSRA |=(1<<U2X); // double speed
    5536:	ab e2       	ldi	r26, 0x2B	; 43
    5538:	b0 e0       	ldi	r27, 0x00	; 0
    553a:	eb e2       	ldi	r30, 0x2B	; 43
    553c:	f0 e0       	ldi	r31, 0x00	; 0
    553e:	80 81       	ld	r24, Z
    5540:	82 60       	ori	r24, 0x02	; 2
    5542:	8c 93       	st	X, r24
     * disable Transmit Data Bit 8  [TXB8=0]
     * disable Receive  Data Bit 8  [RXB8=0]
     * Character Size --> 8bit [UCSZ2=0]
	 */

	UCSRB |=(1<<RXEN)|(1<<TXEN);
    5544:	aa e2       	ldi	r26, 0x2A	; 42
    5546:	b0 e0       	ldi	r27, 0x00	; 0
    5548:	ea e2       	ldi	r30, 0x2A	; 42
    554a:	f0 e0       	ldi	r31, 0x00	; 0
    554c:	80 81       	ld	r24, Z
    554e:	88 61       	ori	r24, 0x18	; 24
    5550:	8c 93       	st	X, r24
	 * 1 stop bit [USBS=0]
	 * 8 bit [UCSZ2=0 , UCSZ1=1 & UCSZ0=1]
	 * disable clock polarity [UCPOL=0]
	 */

	UCSRC |=(1<<URSEL)|(1<<UCSZ0)|(1<<UCSZ1);
    5552:	a0 e4       	ldi	r26, 0x40	; 64
    5554:	b0 e0       	ldi	r27, 0x00	; 0
    5556:	e0 e4       	ldi	r30, 0x40	; 64
    5558:	f0 e0       	ldi	r31, 0x00	; 0
    555a:	80 81       	ld	r24, Z
    555c:	86 68       	ori	r24, 0x86	; 134
    555e:	8c 93       	st	X, r24

    // write the baud pre-scaler on Baud Rate Registers
	UBRRH = BAUD_RRESCALE >> 8;
    5560:	e0 e4       	ldi	r30, 0x40	; 64
    5562:	f0 e0       	ldi	r31, 0x00	; 0
    5564:	10 82       	st	Z, r1
	UBRRL = BAUD_RRESCALE ;
    5566:	e9 e2       	ldi	r30, 0x29	; 41
    5568:	f0 e0       	ldi	r31, 0x00	; 0
    556a:	8c e0       	ldi	r24, 0x0C	; 12
    556c:	80 83       	st	Z, r24

}
    556e:	cf 91       	pop	r28
    5570:	df 91       	pop	r29
    5572:	08 95       	ret

00005574 <UART_sendByte>:

void UART_sendByte(uint8 data){
    5574:	df 93       	push	r29
    5576:	cf 93       	push	r28
    5578:	0f 92       	push	r0
    557a:	cd b7       	in	r28, 0x3d	; 61
    557c:	de b7       	in	r29, 0x3e	; 62
    557e:	89 83       	std	Y+1, r24	; 0x01

	while(BIT_IS_CLEAR(UCSRA,UDRE)){}
    5580:	eb e2       	ldi	r30, 0x2B	; 43
    5582:	f0 e0       	ldi	r31, 0x00	; 0
    5584:	80 81       	ld	r24, Z
    5586:	88 2f       	mov	r24, r24
    5588:	90 e0       	ldi	r25, 0x00	; 0
    558a:	80 72       	andi	r24, 0x20	; 32
    558c:	90 70       	andi	r25, 0x00	; 0
    558e:	00 97       	sbiw	r24, 0x00	; 0
    5590:	b9 f3       	breq	.-18     	; 0x5580 <UART_sendByte+0xc>

	UDR=data;
    5592:	ec e2       	ldi	r30, 0x2C	; 44
    5594:	f0 e0       	ldi	r31, 0x00	; 0
    5596:	89 81       	ldd	r24, Y+1	; 0x01
    5598:	80 83       	st	Z, r24

}
    559a:	0f 90       	pop	r0
    559c:	cf 91       	pop	r28
    559e:	df 91       	pop	r29
    55a0:	08 95       	ret

000055a2 <UART_reseiveByte>:

uint8 UART_reseiveByte(void){
    55a2:	df 93       	push	r29
    55a4:	cf 93       	push	r28
    55a6:	cd b7       	in	r28, 0x3d	; 61
    55a8:	de b7       	in	r29, 0x3e	; 62

	while(BIT_IS_CLEAR(UCSRA,RXC)){}
    55aa:	eb e2       	ldi	r30, 0x2B	; 43
    55ac:	f0 e0       	ldi	r31, 0x00	; 0
    55ae:	80 81       	ld	r24, Z
    55b0:	88 23       	and	r24, r24
    55b2:	dc f7       	brge	.-10     	; 0x55aa <UART_reseiveByte+0x8>

	return UDR ;
    55b4:	ec e2       	ldi	r30, 0x2C	; 44
    55b6:	f0 e0       	ldi	r31, 0x00	; 0
    55b8:	80 81       	ld	r24, Z
}
    55ba:	cf 91       	pop	r28
    55bc:	df 91       	pop	r29
    55be:	08 95       	ret

000055c0 <UART_sendString>:


void UART_sendString(const uint8 *str){
    55c0:	df 93       	push	r29
    55c2:	cf 93       	push	r28
    55c4:	00 d0       	rcall	.+0      	; 0x55c6 <UART_sendString+0x6>
    55c6:	0f 92       	push	r0
    55c8:	cd b7       	in	r28, 0x3d	; 61
    55ca:	de b7       	in	r29, 0x3e	; 62
    55cc:	9b 83       	std	Y+3, r25	; 0x03
    55ce:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i=0;
    55d0:	19 82       	std	Y+1, r1	; 0x01
    55d2:	0e c0       	rjmp	.+28     	; 0x55f0 <UART_sendString+0x30>
	while(str[i]!='\0'){
		UART_sendByte(str[i]);
    55d4:	89 81       	ldd	r24, Y+1	; 0x01
    55d6:	28 2f       	mov	r18, r24
    55d8:	30 e0       	ldi	r19, 0x00	; 0
    55da:	8a 81       	ldd	r24, Y+2	; 0x02
    55dc:	9b 81       	ldd	r25, Y+3	; 0x03
    55de:	fc 01       	movw	r30, r24
    55e0:	e2 0f       	add	r30, r18
    55e2:	f3 1f       	adc	r31, r19
    55e4:	80 81       	ld	r24, Z
    55e6:	0e 94 ba 2a 	call	0x5574	; 0x5574 <UART_sendByte>
		i++;
    55ea:	89 81       	ldd	r24, Y+1	; 0x01
    55ec:	8f 5f       	subi	r24, 0xFF	; 255
    55ee:	89 83       	std	Y+1, r24	; 0x01
}


void UART_sendString(const uint8 *str){
	uint8 i=0;
	while(str[i]!='\0'){
    55f0:	89 81       	ldd	r24, Y+1	; 0x01
    55f2:	28 2f       	mov	r18, r24
    55f4:	30 e0       	ldi	r19, 0x00	; 0
    55f6:	8a 81       	ldd	r24, Y+2	; 0x02
    55f8:	9b 81       	ldd	r25, Y+3	; 0x03
    55fa:	fc 01       	movw	r30, r24
    55fc:	e2 0f       	add	r30, r18
    55fe:	f3 1f       	adc	r31, r19
    5600:	80 81       	ld	r24, Z
    5602:	88 23       	and	r24, r24
    5604:	39 f7       	brne	.-50     	; 0x55d4 <UART_sendString+0x14>
		UART_sendByte(str[i]);
		i++;
	}
}
    5606:	0f 90       	pop	r0
    5608:	0f 90       	pop	r0
    560a:	0f 90       	pop	r0
    560c:	cf 91       	pop	r28
    560e:	df 91       	pop	r29
    5610:	08 95       	ret

00005612 <UART_reseiveString>:

void UART_reseiveString(uint8 *str){
    5612:	0f 93       	push	r16
    5614:	1f 93       	push	r17
    5616:	df 93       	push	r29
    5618:	cf 93       	push	r28
    561a:	00 d0       	rcall	.+0      	; 0x561c <UART_reseiveString+0xa>
    561c:	0f 92       	push	r0
    561e:	cd b7       	in	r28, 0x3d	; 61
    5620:	de b7       	in	r29, 0x3e	; 62
    5622:	9b 83       	std	Y+3, r25	; 0x03
    5624:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i=0;
    5626:	19 82       	std	Y+1, r1	; 0x01
	str[i]= UART_reseiveByte();
    5628:	89 81       	ldd	r24, Y+1	; 0x01
    562a:	28 2f       	mov	r18, r24
    562c:	30 e0       	ldi	r19, 0x00	; 0
    562e:	8a 81       	ldd	r24, Y+2	; 0x02
    5630:	9b 81       	ldd	r25, Y+3	; 0x03
    5632:	8c 01       	movw	r16, r24
    5634:	02 0f       	add	r16, r18
    5636:	13 1f       	adc	r17, r19
    5638:	0e 94 d1 2a 	call	0x55a2	; 0x55a2 <UART_reseiveByte>
    563c:	f8 01       	movw	r30, r16
    563e:	80 83       	st	Z, r24
    5640:	0f c0       	rjmp	.+30     	; 0x5660 <UART_reseiveString+0x4e>
	while(str[i]!= '*'){
		i++;
    5642:	89 81       	ldd	r24, Y+1	; 0x01
    5644:	8f 5f       	subi	r24, 0xFF	; 255
    5646:	89 83       	std	Y+1, r24	; 0x01
		str[i]= UART_reseiveByte();
    5648:	89 81       	ldd	r24, Y+1	; 0x01
    564a:	28 2f       	mov	r18, r24
    564c:	30 e0       	ldi	r19, 0x00	; 0
    564e:	8a 81       	ldd	r24, Y+2	; 0x02
    5650:	9b 81       	ldd	r25, Y+3	; 0x03
    5652:	8c 01       	movw	r16, r24
    5654:	02 0f       	add	r16, r18
    5656:	13 1f       	adc	r17, r19
    5658:	0e 94 d1 2a 	call	0x55a2	; 0x55a2 <UART_reseiveByte>
    565c:	f8 01       	movw	r30, r16
    565e:	80 83       	st	Z, r24
}

void UART_reseiveString(uint8 *str){
	uint8 i=0;
	str[i]= UART_reseiveByte();
	while(str[i]!= '*'){
    5660:	89 81       	ldd	r24, Y+1	; 0x01
    5662:	28 2f       	mov	r18, r24
    5664:	30 e0       	ldi	r19, 0x00	; 0
    5666:	8a 81       	ldd	r24, Y+2	; 0x02
    5668:	9b 81       	ldd	r25, Y+3	; 0x03
    566a:	fc 01       	movw	r30, r24
    566c:	e2 0f       	add	r30, r18
    566e:	f3 1f       	adc	r31, r19
    5670:	80 81       	ld	r24, Z
    5672:	8a 32       	cpi	r24, 0x2A	; 42
    5674:	31 f7       	brne	.-52     	; 0x5642 <UART_reseiveString+0x30>
		i++;
		str[i]= UART_reseiveByte();
	}
	str[i]='\0';
    5676:	89 81       	ldd	r24, Y+1	; 0x01
    5678:	28 2f       	mov	r18, r24
    567a:	30 e0       	ldi	r19, 0x00	; 0
    567c:	8a 81       	ldd	r24, Y+2	; 0x02
    567e:	9b 81       	ldd	r25, Y+3	; 0x03
    5680:	fc 01       	movw	r30, r24
    5682:	e2 0f       	add	r30, r18
    5684:	f3 1f       	adc	r31, r19
    5686:	10 82       	st	Z, r1
}
    5688:	0f 90       	pop	r0
    568a:	0f 90       	pop	r0
    568c:	0f 90       	pop	r0
    568e:	cf 91       	pop	r28
    5690:	df 91       	pop	r29
    5692:	1f 91       	pop	r17
    5694:	0f 91       	pop	r16
    5696:	08 95       	ret

00005698 <UART_sendPass>:
void UART_sendPass(uint8 arr[]){
    5698:	df 93       	push	r29
    569a:	cf 93       	push	r28
    569c:	00 d0       	rcall	.+0      	; 0x569e <UART_sendPass+0x6>
    569e:	0f 92       	push	r0
    56a0:	cd b7       	in	r28, 0x3d	; 61
    56a2:	de b7       	in	r29, 0x3e	; 62
    56a4:	9b 83       	std	Y+3, r25	; 0x03
    56a6:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i=0;
    56a8:	19 82       	std	Y+1, r1	; 0x01
    56aa:	0e c0       	rjmp	.+28     	; 0x56c8 <UART_sendPass+0x30>
	while(arr[i]!='\0'){
		UART_sendByte(arr[i]);
    56ac:	89 81       	ldd	r24, Y+1	; 0x01
    56ae:	28 2f       	mov	r18, r24
    56b0:	30 e0       	ldi	r19, 0x00	; 0
    56b2:	8a 81       	ldd	r24, Y+2	; 0x02
    56b4:	9b 81       	ldd	r25, Y+3	; 0x03
    56b6:	fc 01       	movw	r30, r24
    56b8:	e2 0f       	add	r30, r18
    56ba:	f3 1f       	adc	r31, r19
    56bc:	80 81       	ld	r24, Z
    56be:	0e 94 ba 2a 	call	0x5574	; 0x5574 <UART_sendByte>
		i++;
    56c2:	89 81       	ldd	r24, Y+1	; 0x01
    56c4:	8f 5f       	subi	r24, 0xFF	; 255
    56c6:	89 83       	std	Y+1, r24	; 0x01
	}
	str[i]='\0';
}
void UART_sendPass(uint8 arr[]){
	uint8 i=0;
	while(arr[i]!='\0'){
    56c8:	89 81       	ldd	r24, Y+1	; 0x01
    56ca:	28 2f       	mov	r18, r24
    56cc:	30 e0       	ldi	r19, 0x00	; 0
    56ce:	8a 81       	ldd	r24, Y+2	; 0x02
    56d0:	9b 81       	ldd	r25, Y+3	; 0x03
    56d2:	fc 01       	movw	r30, r24
    56d4:	e2 0f       	add	r30, r18
    56d6:	f3 1f       	adc	r31, r19
    56d8:	80 81       	ld	r24, Z
    56da:	88 23       	and	r24, r24
    56dc:	39 f7       	brne	.-50     	; 0x56ac <UART_sendPass+0x14>
		UART_sendByte(arr[i]);
		i++;
	}
}
    56de:	0f 90       	pop	r0
    56e0:	0f 90       	pop	r0
    56e2:	0f 90       	pop	r0
    56e4:	cf 91       	pop	r28
    56e6:	df 91       	pop	r29
    56e8:	08 95       	ret

000056ea <UART_reseivePass>:


void UART_reseivePass(uint8 arr[]){
    56ea:	0f 93       	push	r16
    56ec:	1f 93       	push	r17
    56ee:	df 93       	push	r29
    56f0:	cf 93       	push	r28
    56f2:	00 d0       	rcall	.+0      	; 0x56f4 <UART_reseivePass+0xa>
    56f4:	0f 92       	push	r0
    56f6:	cd b7       	in	r28, 0x3d	; 61
    56f8:	de b7       	in	r29, 0x3e	; 62
    56fa:	9b 83       	std	Y+3, r25	; 0x03
    56fc:	8a 83       	std	Y+2, r24	; 0x02

	    uint8 i=0;
    56fe:	19 82       	std	Y+1, r1	; 0x01
		arr[i]= UART_reseiveByte();
    5700:	89 81       	ldd	r24, Y+1	; 0x01
    5702:	28 2f       	mov	r18, r24
    5704:	30 e0       	ldi	r19, 0x00	; 0
    5706:	8a 81       	ldd	r24, Y+2	; 0x02
    5708:	9b 81       	ldd	r25, Y+3	; 0x03
    570a:	8c 01       	movw	r16, r24
    570c:	02 0f       	add	r16, r18
    570e:	13 1f       	adc	r17, r19
    5710:	0e 94 d1 2a 	call	0x55a2	; 0x55a2 <UART_reseiveByte>
    5714:	f8 01       	movw	r30, r16
    5716:	80 83       	st	Z, r24
    5718:	0f c0       	rjmp	.+30     	; 0x5738 <UART_reseivePass+0x4e>
		while(arr[i]!='*'){
			i++;
    571a:	89 81       	ldd	r24, Y+1	; 0x01
    571c:	8f 5f       	subi	r24, 0xFF	; 255
    571e:	89 83       	std	Y+1, r24	; 0x01
			arr[i]= UART_reseiveByte();
    5720:	89 81       	ldd	r24, Y+1	; 0x01
    5722:	28 2f       	mov	r18, r24
    5724:	30 e0       	ldi	r19, 0x00	; 0
    5726:	8a 81       	ldd	r24, Y+2	; 0x02
    5728:	9b 81       	ldd	r25, Y+3	; 0x03
    572a:	8c 01       	movw	r16, r24
    572c:	02 0f       	add	r16, r18
    572e:	13 1f       	adc	r17, r19
    5730:	0e 94 d1 2a 	call	0x55a2	; 0x55a2 <UART_reseiveByte>
    5734:	f8 01       	movw	r30, r16
    5736:	80 83       	st	Z, r24

void UART_reseivePass(uint8 arr[]){

	    uint8 i=0;
		arr[i]= UART_reseiveByte();
		while(arr[i]!='*'){
    5738:	89 81       	ldd	r24, Y+1	; 0x01
    573a:	28 2f       	mov	r18, r24
    573c:	30 e0       	ldi	r19, 0x00	; 0
    573e:	8a 81       	ldd	r24, Y+2	; 0x02
    5740:	9b 81       	ldd	r25, Y+3	; 0x03
    5742:	fc 01       	movw	r30, r24
    5744:	e2 0f       	add	r30, r18
    5746:	f3 1f       	adc	r31, r19
    5748:	80 81       	ld	r24, Z
    574a:	8a 32       	cpi	r24, 0x2A	; 42
    574c:	31 f7       	brne	.-52     	; 0x571a <UART_reseivePass+0x30>
			i++;
			arr[i]= UART_reseiveByte();
		}
		arr[i]='\0';
    574e:	89 81       	ldd	r24, Y+1	; 0x01
    5750:	28 2f       	mov	r18, r24
    5752:	30 e0       	ldi	r19, 0x00	; 0
    5754:	8a 81       	ldd	r24, Y+2	; 0x02
    5756:	9b 81       	ldd	r25, Y+3	; 0x03
    5758:	fc 01       	movw	r30, r24
    575a:	e2 0f       	add	r30, r18
    575c:	f3 1f       	adc	r31, r19
    575e:	10 82       	st	Z, r1
}
    5760:	0f 90       	pop	r0
    5762:	0f 90       	pop	r0
    5764:	0f 90       	pop	r0
    5766:	cf 91       	pop	r28
    5768:	df 91       	pop	r29
    576a:	1f 91       	pop	r17
    576c:	0f 91       	pop	r16
    576e:	08 95       	ret

00005770 <__prologue_saves__>:
    5770:	2f 92       	push	r2
    5772:	3f 92       	push	r3
    5774:	4f 92       	push	r4
    5776:	5f 92       	push	r5
    5778:	6f 92       	push	r6
    577a:	7f 92       	push	r7
    577c:	8f 92       	push	r8
    577e:	9f 92       	push	r9
    5780:	af 92       	push	r10
    5782:	bf 92       	push	r11
    5784:	cf 92       	push	r12
    5786:	df 92       	push	r13
    5788:	ef 92       	push	r14
    578a:	ff 92       	push	r15
    578c:	0f 93       	push	r16
    578e:	1f 93       	push	r17
    5790:	cf 93       	push	r28
    5792:	df 93       	push	r29
    5794:	cd b7       	in	r28, 0x3d	; 61
    5796:	de b7       	in	r29, 0x3e	; 62
    5798:	ca 1b       	sub	r28, r26
    579a:	db 0b       	sbc	r29, r27
    579c:	0f b6       	in	r0, 0x3f	; 63
    579e:	f8 94       	cli
    57a0:	de bf       	out	0x3e, r29	; 62
    57a2:	0f be       	out	0x3f, r0	; 63
    57a4:	cd bf       	out	0x3d, r28	; 61
    57a6:	09 94       	ijmp

000057a8 <__epilogue_restores__>:
    57a8:	2a 88       	ldd	r2, Y+18	; 0x12
    57aa:	39 88       	ldd	r3, Y+17	; 0x11
    57ac:	48 88       	ldd	r4, Y+16	; 0x10
    57ae:	5f 84       	ldd	r5, Y+15	; 0x0f
    57b0:	6e 84       	ldd	r6, Y+14	; 0x0e
    57b2:	7d 84       	ldd	r7, Y+13	; 0x0d
    57b4:	8c 84       	ldd	r8, Y+12	; 0x0c
    57b6:	9b 84       	ldd	r9, Y+11	; 0x0b
    57b8:	aa 84       	ldd	r10, Y+10	; 0x0a
    57ba:	b9 84       	ldd	r11, Y+9	; 0x09
    57bc:	c8 84       	ldd	r12, Y+8	; 0x08
    57be:	df 80       	ldd	r13, Y+7	; 0x07
    57c0:	ee 80       	ldd	r14, Y+6	; 0x06
    57c2:	fd 80       	ldd	r15, Y+5	; 0x05
    57c4:	0c 81       	ldd	r16, Y+4	; 0x04
    57c6:	1b 81       	ldd	r17, Y+3	; 0x03
    57c8:	aa 81       	ldd	r26, Y+2	; 0x02
    57ca:	b9 81       	ldd	r27, Y+1	; 0x01
    57cc:	ce 0f       	add	r28, r30
    57ce:	d1 1d       	adc	r29, r1
    57d0:	0f b6       	in	r0, 0x3f	; 63
    57d2:	f8 94       	cli
    57d4:	de bf       	out	0x3e, r29	; 62
    57d6:	0f be       	out	0x3f, r0	; 63
    57d8:	cd bf       	out	0x3d, r28	; 61
    57da:	ed 01       	movw	r28, r26
    57dc:	08 95       	ret

000057de <itoa>:
    57de:	fb 01       	movw	r30, r22
    57e0:	9f 01       	movw	r18, r30
    57e2:	e8 94       	clt
    57e4:	42 30       	cpi	r20, 0x02	; 2
    57e6:	c4 f0       	brlt	.+48     	; 0x5818 <itoa+0x3a>
    57e8:	45 32       	cpi	r20, 0x25	; 37
    57ea:	b4 f4       	brge	.+44     	; 0x5818 <itoa+0x3a>
    57ec:	4a 30       	cpi	r20, 0x0A	; 10
    57ee:	29 f4       	brne	.+10     	; 0x57fa <itoa+0x1c>
    57f0:	97 fb       	bst	r25, 7
    57f2:	1e f4       	brtc	.+6      	; 0x57fa <itoa+0x1c>
    57f4:	90 95       	com	r25
    57f6:	81 95       	neg	r24
    57f8:	9f 4f       	sbci	r25, 0xFF	; 255
    57fa:	64 2f       	mov	r22, r20
    57fc:	77 27       	eor	r23, r23
    57fe:	0e 94 20 2c 	call	0x5840	; 0x5840 <__udivmodhi4>
    5802:	80 5d       	subi	r24, 0xD0	; 208
    5804:	8a 33       	cpi	r24, 0x3A	; 58
    5806:	0c f0       	brlt	.+2      	; 0x580a <itoa+0x2c>
    5808:	89 5d       	subi	r24, 0xD9	; 217
    580a:	81 93       	st	Z+, r24
    580c:	cb 01       	movw	r24, r22
    580e:	00 97       	sbiw	r24, 0x00	; 0
    5810:	a1 f7       	brne	.-24     	; 0x57fa <itoa+0x1c>
    5812:	16 f4       	brtc	.+4      	; 0x5818 <itoa+0x3a>
    5814:	5d e2       	ldi	r21, 0x2D	; 45
    5816:	51 93       	st	Z+, r21
    5818:	10 82       	st	Z, r1
    581a:	c9 01       	movw	r24, r18
    581c:	0c 94 10 2c 	jmp	0x5820	; 0x5820 <strrev>

00005820 <strrev>:
    5820:	dc 01       	movw	r26, r24
    5822:	fc 01       	movw	r30, r24
    5824:	67 2f       	mov	r22, r23
    5826:	71 91       	ld	r23, Z+
    5828:	77 23       	and	r23, r23
    582a:	e1 f7       	brne	.-8      	; 0x5824 <strrev+0x4>
    582c:	32 97       	sbiw	r30, 0x02	; 2
    582e:	04 c0       	rjmp	.+8      	; 0x5838 <strrev+0x18>
    5830:	7c 91       	ld	r23, X
    5832:	6d 93       	st	X+, r22
    5834:	70 83       	st	Z, r23
    5836:	62 91       	ld	r22, -Z
    5838:	ae 17       	cp	r26, r30
    583a:	bf 07       	cpc	r27, r31
    583c:	c8 f3       	brcs	.-14     	; 0x5830 <strrev+0x10>
    583e:	08 95       	ret

00005840 <__udivmodhi4>:
    5840:	aa 1b       	sub	r26, r26
    5842:	bb 1b       	sub	r27, r27
    5844:	51 e1       	ldi	r21, 0x11	; 17
    5846:	07 c0       	rjmp	.+14     	; 0x5856 <__udivmodhi4_ep>

00005848 <__udivmodhi4_loop>:
    5848:	aa 1f       	adc	r26, r26
    584a:	bb 1f       	adc	r27, r27
    584c:	a6 17       	cp	r26, r22
    584e:	b7 07       	cpc	r27, r23
    5850:	10 f0       	brcs	.+4      	; 0x5856 <__udivmodhi4_ep>
    5852:	a6 1b       	sub	r26, r22
    5854:	b7 0b       	sbc	r27, r23

00005856 <__udivmodhi4_ep>:
    5856:	88 1f       	adc	r24, r24
    5858:	99 1f       	adc	r25, r25
    585a:	5a 95       	dec	r21
    585c:	a9 f7       	brne	.-22     	; 0x5848 <__udivmodhi4_loop>
    585e:	80 95       	com	r24
    5860:	90 95       	com	r25
    5862:	bc 01       	movw	r22, r24
    5864:	cd 01       	movw	r24, r26
    5866:	08 95       	ret

00005868 <_exit>:
    5868:	f8 94       	cli

0000586a <__stop_program>:
    586a:	ff cf       	rjmp	.-2      	; 0x586a <__stop_program>
